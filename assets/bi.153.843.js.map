{"version":3,"file":"bi.153.843.js","sources":["../frontend-dev/src/components/AllIntegrations/ConvertKit/ConvertKitCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from '@wordpress/i18n'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, convertKitConf, setConvertKitConf) => {\n  const newConf = { ...convertKitConf }\n  newConf.name = e.target.value\n  setConvertKitConf({ ...newConf })\n}\n\nexport const refreshConvertKitForm = (\n  convertKitConf,\n  setConvertKitConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshFormsRequestParams = {\n    api_secret: convertKitConf.api_secret,\n  }\n  bitsFetch(refreshFormsRequestParams, 'convertKit_forms')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...convertKitConf }\n        if (result.data.convertKitForms) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.convertKitForms = result.data.convertKitForms\n          setSnackbar({\n            show: true,\n            msg: __('Convert Kit forms refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No Convert Kit forms found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setConvertKitConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'Convert Kit forms refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n// refreshConvertKitTags\nexport const refreshConvertKitTags = (\n  convertKitConf,\n  setConvertKitConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshFormsRequestParams = {\n    api_secret: convertKitConf.api_secret,\n  }\n  bitsFetch(refreshFormsRequestParams, 'convertKit_tags')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...convertKitConf }\n        if (result.data.convertKitTags) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.convertKitTags = result.data.convertKitTags\n          setSnackbar({\n            show: true,\n            msg: __('Convert Kit tags refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No Convert Kit tags found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setConvertKitConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'Convert Kit tags refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n// refreshMappedFields\nexport const refreshConvertKitHeader = (\n  convertKitConf,\n  setConvertKitConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshFormsRequestParams = {\n    api_secret: convertKitConf.api_secret,\n  }\n  bitsFetch(refreshFormsRequestParams, 'convertKit_headers')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...convertKitConf }\n        if (result.data.convertKitField) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.fields = result.data.convertKitField\n          const { fields } = newConf.default\n          newConf.field_map = Object.values(fields)\n            .filter((f) => f.required)\n            .map((f) => ({\n              formField: '',\n              convertKitField: f.fieldId,\n              required: true,\n            }))\n          setSnackbar({\n            show: true,\n            msg: __('Convert Kit fields refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No Convert Kit fields found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setConvertKitConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'Convert Kit fields refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = (convertKitConf) => {\n  const mappedFields = convertKitConf?.field_map\n    ? convertKitConf.field_map.filter(\n      (mappedField) => !mappedField.formField\n          && mappedField.convertKitField\n          && mappedField.required,\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","convertKitConf","setConvertKitConf","newConf","__spreadValues","refreshConvertKitForm","setIsLoading","setSnackbar","refreshFormsRequestParams","result","refreshConvertKitTags","refreshConvertKitHeader","fields","f","checkMappedFields","mappedField"],"mappings":"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"}