{"version":3,"file":"bi.612.778.js","sources":["../frontend-dev/src/components/AllIntegrations/BitForm/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/BitForm/BitFormFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/BitForm/BitFormIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n","import { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport TrashIcn from '../../../Icons/TrashIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport MtInput from '../../Utilities/MtInput'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function BitFormFieldMap({ i, field, formFields, bitFormConf, setBitFormConf }) {\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"flx integ-fld-wrp\">\n        <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, bitFormConf, setBitFormConf)}>\n          <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n          <optgroup label=\"Form Fields\">\n            {\n              formFields.map(f => f.type !== 'file' && <option key={`ff-zhcrm-${f.name}`} value={f.name}>{f.label}</option>)\n            }\n          </optgroup>\n          <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n          <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n            {isPro && SmartTagField?.map(f => (\n              <option key={`ff-rm-${f.name}`} value={f.name}>\n                {f.label}\n              </option>\n            ))}\n          </optgroup>\n        </select>\n\n        {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, bitFormConf, setBitFormConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n        <select className=\"btcd-paper-inp\" name=\"BitFormMapField\" value={field.BitFormMapField || ''} onChange={(ev) => handleFieldMapping(ev, i, bitFormConf, setBitFormConf)}>\n          <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n          {\n            bitFormConf?.default?.fields && Object.entries(bitFormConf.default.fields).map((listField, indx) => (\n              listField[1].typ !== 'button' && (\n                <option key={`bitform-${indx * 2}`} value={listField[0]}>\n                  {listField[1].lbl}\n\n                </option>\n              )\n            ))\n          }\n        </select>\n\n      </div>\n      <button\n        onClick={() => addFieldMap(i, bitFormConf, setBitFormConf)}\n        className=\"icn-btn sh-sm ml-2 mr-1\"\n        type=\"button\"\n      >\n        +\n      </button>\n      <button onClick={() => delFieldMap(i, bitFormConf, setBitFormConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n        <TrashIcn />\n      </button>\n    </div>\n  )\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from '../IntegrationHelpers/IntegrationHelpers'\nimport { fetchAllForm } from './BitFormCommonFunc'\nimport BitFormFieldMap from './BitFormFieldMap'\n\nexport default function BitFormIntegLayout({ formFields, handleInput, bitFormConf, setBitFormConf, isLoading, setIsLoading, setSnackbar }) {\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Forms:', 'bit-integrations')}</b>\n      <select onChange={handleInput} name=\"id\" value={bitFormConf.id} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Form', 'bit-integrations')}</option>\n        {\n          // eslint-disable-next-line camelcase\n          bitFormConf?.default?.forms && bitFormConf.default.forms.map(({ id, form_name }) => (\n            <option key={id} value={id}>\n              {form_name}\n            </option>\n          ))\n        }\n      </select>\n      <button onClick={() => fetchAllForm(bitFormConf, setBitFormConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Form', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n      <br />\n\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n\n      {bitFormConf?.id && bitFormConf.default?.fields\n        && (\n          <>\n            <div className=\"mt-4\">\n              <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n            </div>\n            <div className=\"btcd-hr mt-1\" />\n            <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n              <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n              <div className=\"txt-dp\"><b>{__('Bit Form Fields', 'bit-integrations')}</b></div>\n            </div>\n\n            {bitFormConf?.id && bitFormConf?.field_map.map((itm, i) => (\n              <BitFormFieldMap\n                key={`sheet-m-${i + 9}`}\n                i={i}\n                field={itm}\n                formFields={formFields}\n                bitFormConf={bitFormConf}\n                setBitFormConf={setBitFormConf}\n              />\n            ))}\n            <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(bitFormConf.field_map.length, bitFormConf, setBitFormConf)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n            <br />\n            <br />\n          </>\n        )}\n\n      <br />\n      <br />\n\n    </>\n  )\n}\n"],"names":["addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","BitFormFieldMap","field","formFields","bitFormConf","setBitFormConf","btcbi","useRecoilValue","$btcbi","isPro","jsxs","ev","jsx","__","f","_a","SmartTagField","TagifyInput","e","handleCustomValue","_b","listField","indx","TrashIcn","BitFormIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","Fragment","id","form_name","fetchAllForm","Loader","itm"],"mappings":"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"}