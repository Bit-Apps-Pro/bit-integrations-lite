{"version":3,"file":"bi.65.899.js","sources":["../frontend-dev/src/components/AllIntegrations/Livestorm/LivestormCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\nimport { __ } from \"../../../Utils/i18nwrap\";\n\nexport const handleInput = (e, salesmateConf, setSalesmateConf) => {\n  const newConf = { ...salesmateConf };\n  const { name } = e.target;\n  if (e.target.value !== \"\") {\n    newConf[name] = e.target.value;\n  } else {\n    delete newConf[name];\n  }\n  setSalesmateConf({ ...newConf });\n};\n\nexport const generateMappedField = (livestormFields) => {\n  const requiredFlds = livestormFields.filter((fld) => fld.required === true);\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n      formField: \"\",\n      livestormFormField: field.key,\n    }))\n    : [{ formField: \"\", livestormFormField: \"\" }];\n};\n\nexport const checkMappedFields = (livestormConf) => {\n  const mappedFields = livestormConf?.field_map\n    ? livestormConf.field_map.filter(\n      (mappedField) =>\n        !mappedField.formField ||\n        !mappedField.livestormFormField ||\n        (mappedField.formField === \"custom\" && !mappedField.customValue) ||\n        (mappedField.livestormFormField === \"customFieldKey\" &&\n          !mappedField.customFieldKey)\n    )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const livestormAuthentication = (\n  confTmp,\n  setConf,\n  setError,\n  setIsAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!confTmp.api_key) {\n    setError({\n      api_key: !confTmp.api_key\n        ? __(\"API Key can't be empty\", \"bit-integrations\")\n        : \"\",\n    });\n    return;\n  }\n\n  setError({});\n  setLoading({ ...loading, auth: true });\n  const requestParams = { api_key: confTmp.api_key };\n\n  bitsFetch(requestParams, \"livestorm_authentication\").then((result) => {\n    if (result && result.success) {\n      setIsAuthorized(true);\n      setLoading({ ...loading, auth: false });\n      toast.success(__(\"Authorized successfully\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...loading, auth: false });\n    toast.error(\n      __(result?.data || \"Authorized failed, Please enter valid API Key\", \"bit-integrations\")\n    );\n  });\n};\n\nexport const getAllEvents = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, event: true });\n  const requestParams = { api_key: confTmp.api_key };\n\n  bitsFetch(requestParams, \"livestorm_fetch_all_events\").then((result) => {\n    if (result && result.success) {\n      if (result.data) {\n        setConf((prevConf) => {\n          prevConf.events = result.data.events;\n          prevConf.allFields = result.data.allFields;\n          return prevConf;\n        });\n\n        setLoading({ ...setLoading, event: false });\n        toast.success(__(\"Events fetched successfully\", \"bit-integrations\"));\n        return;\n      }\n      setLoading({ ...setLoading, event: false });\n      toast.error(__(\"Events Not Found!\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...setLoading, event: false });\n    toast.error(__(\"Events fetching failed\", \"bit-integrations\"));\n  });\n};\n\nexport const getAllSessions = (confTmp, setConf, event_id, setLoading) => {\n  setLoading({ ...setLoading, session: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    event_id: event_id,\n  };\n\n  bitsFetch(requestParams, \"livestorm_fetch_all_sessions\").then((result) => {\n    if (result && result.success) {\n      if (result.data) {\n        setConf((prevConf) => {\n          prevConf.sessions = result.data;\n          return prevConf;\n        });\n\n        setLoading({ ...setLoading, session: false });\n        toast.success(__(\"Sessions fetched successfully\", \"bit-integrations\"));\n        return;\n      }\n      setLoading({ ...setLoading, session: false });\n      toast.error(__(\"Sessions Not Found!\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...setLoading, session: false });\n    toast.error(__(\"Sessions fetching failed\", \"bit-integrations\"));\n  });\n};\n"],"names":["__","bitsFetch","_t","handleInput","e","salesmateConf","setSalesmateConf","newConf","__spreadValues","name","generateMappedField","livestormFields","requiredFlds","fld","field","checkMappedFields","livestormConf","mappedField","livestormAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","__spreadProps","requestParams","result","toast","getAllEvents","prevConf","getAllSessions","event_id"],"mappings":"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"}