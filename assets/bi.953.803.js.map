{"version":3,"file":"bi.953.803.js","sources":["../frontend-dev/src/components/AllIntegrations/Klaviyo/KlaviyoFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Klaviyo/KlaviyoIntegLayout.jsx"],"sourcesContent":["import { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport MtInput from '../../Utilities/MtInput'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from '../GlobalIntegrationHelper'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\nimport { generateMappedField } from './KlaviyoCommonFunc'\n\nfunction KlaviyoFieldMap({ i, field, formFields, klaviyoConf, setKlaviyoConf }) {\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  if (klaviyoConf?.field_map?.length === 1 && field.klaviyoFormField === '') {\n    const newConf = { ...klaviyoConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setKlaviyoConf(newConf)\n  }\n\n  const requiredFields = klaviyoConf?.klaviyoFields.filter(fld => fld.required === true) || []\n\n  const nonrequiredFields = klaviyoConf?.klaviyoFields.filter(fld => fld.required === false) || []\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select\n            className=\"btcd-paper-inp mr-2\"\n            name=\"formField\"\n            onChange={(event) => {\n              handleFieldMapping(event, i, klaviyoConf, setKlaviyoConf)\n            }}\n            value={field.formField || ''}\n          >\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {/* When user select custom field */}\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, klaviyoConf, setKlaviyoConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select\n            className=\"btcd-paper-inp\"\n            disabled={i < requiredFields.length}\n            name=\"klaviyoFormField\"\n            onChange={(event) => {\n              handleFieldMapping(event, i, klaviyoConf, setKlaviyoConf)\n            }}\n            value={i < requiredFields.length ? (requiredFields[i].key || '') : (field.klaviyoFormField || '')}\n          >\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                nonrequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        <button\n          onClick={() => addFieldMap(i, klaviyoConf, setKlaviyoConf)}\n          className=\"icn-btn sh-sm ml-2 mr-1\"\n          type=\"button\"\n        >\n          +\n        </button>\n        <button onClick={() => delFieldMap(i, klaviyoConf, setKlaviyoConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n          <span className=\"btcd-icn icn-trash-2\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default KlaviyoFieldMap\n","/* eslint-disable default-case */\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from '../GlobalIntegrationHelper'\nimport { getAllLists } from './KlaviyoCommonFunc'\nimport KlaviyoFieldMap from './KlaviyoFieldMap'\n\nfunction KlaviyoIntegLayout({ klaviyoConf, setKlaviyoConf, formFields, loading, setLoading }) {\n  const handleList = (e) => {\n    const newConf = { ...klaviyoConf }\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n    } else {\n      delete newConf[name]\n    }\n    newConf[e.target.name] = e.target.value\n    switch (e.target.name) {\n      case 'listId':\n        newConf.field_map = [{ formField: '', klaviyoFormField: '' }]\n        break\n    }\n\n    setKlaviyoConf({ ...newConf })\n  }\n  return (\n    <div>\n      <b className=\"wdt-200 d-in-b mt-2\">{__('List:', 'bit-integrations')}</b>\n      <select name=\"listId\" value={klaviyoConf.listId} onChange={handleList} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select List', 'bit-integrations')}</option>\n        {\n          klaviyoConf?.default?.lists && klaviyoConf.default.lists.map(list => (\n            <option key={list.list_id} value={list.list_id}>\n              {list.list_name}\n            </option>\n          ))\n        }\n      </select>\n      <button onClick={() => getAllLists(klaviyoConf, setKlaviyoConf, loading, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': '\"Refresh list\"' }} type=\"button\" disabled={loading.list}>&#x21BB;</button>\n\n      {/* When user refresh the List then loader call */}\n\n      {loading.list && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n\n      {klaviyoConf?.listId && (\n        <div className=\"mt-5\">\n          <b className=\"wdt-100\">\n            {__('Field Map', 'bit-integrations')}\n          </b>\n\n          <div className=\"btcd-hr mt-2 mb-4\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Klaviyo Fields', 'bit-integrations')}</b></div>\n          </div>\n          {klaviyoConf?.field_map.map((itm, i) => (\n            <KlaviyoFieldMap\n              key={`ko-m-${i + 8}`}\n              i={i}\n              field={itm}\n              formFields={formFields}\n              klaviyoConf={klaviyoConf}\n              setKlaviyoConf={setKlaviyoConf}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(klaviyoConf.field_map.length, klaviyoConf, setKlaviyoConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default KlaviyoIntegLayout\n"],"names":["Recoil_index_18","jsxRuntimeExports","$btcbi","__","handleFieldMapping","addFieldMap","delFieldMap","generateMappedField","getAllLists","SmartTagField","TagifyInput","handleCustomValue","KlaviyoFieldMap","i","field","formFields","klaviyoConf","setKlaviyoConf","_a","_b","btcbi","useRecoilValue","isPro","newConf","__spreadValues","tmp","requiredFields","fld","nonrequiredFields","jsx","jsxs","event","f","e","key","label","KlaviyoIntegLayout","loading","setLoading","handleList","name","list","Loader","itm"],"mappings":"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"}