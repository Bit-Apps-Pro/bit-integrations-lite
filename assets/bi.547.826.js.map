{"version":3,"file":"bi.547.826.js","sources":["../frontend-dev/src/components/AllIntegrations/Notion/NotionCommonFunc.js"],"sourcesContent":["/* eslint-disable prefer-const */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-expressions */\nimport toast from \"react-hot-toast\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\nimport { __ } from \"../../../Utils/i18nwrap\";\nimport {\n  saveActionConf,\n  saveIntegConfig,\n} from \"../IntegrationHelpers/IntegrationHelpers\";\n\nexport const handleInput = (e, conf, setConf, error, setError) => {\n  const newConf = { ...conf };\n  const inputError = { ...error };\n  const { name, value } = e.target;\n  inputError[name] = \"\";\n  newConf[name] = value;\n  setError(inputError);\n  setConf(newConf);\n};\n\nexport const handleAuthorize = (\n  conf,\n  setConf,\n  error,\n  setError,\n  setAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!conf.clientId || !conf.clientSecret) {\n    setError({\n      clientId: !conf.clientId ? __(\"Client Id can't be empty\") : \"\",\n      clientSecret: !conf.clientSecret\n        ? __(\"Client Secret can't be empty\")\n        : \"\",\n    });\n    return;\n  }\n  setError({});\n  setLoading({ ...loading, auth: true });\n  const apiEndpoint = `https://api.notion.com/v1/oauth/authorize?client_id=${\n    conf.clientId\n  }&response_type=code&owner=user&state=${encodeURIComponent(\n    window.location.href\n  )}/redirect&redirect_uri=${encodeURIComponent(`${btcbi.api.base}`)}/redirect`;\n  const authWindow = window.open(\n    apiEndpoint,\n    \"Notion\",\n    \"width=400,height=609,toolbar=off\"\n  );\n  const popupURLCheckTimer = setInterval(() => {\n    if (authWindow.closed) {\n      clearInterval(popupURLCheckTimer);\n      let grantTokenResponse = {};\n      let isAuthRedirectLocation = false;\n      const notionStoreValue = localStorage.getItem(\"__notion\");\n      if (notionStoreValue) {\n        isAuthRedirectLocation = true;\n        grantTokenResponse = JSON.parse(notionStoreValue);\n        localStorage.removeItem(\"__notion\");\n      }\n      if (\n        !grantTokenResponse.code ||\n        grantTokenResponse.error ||\n        !grantTokenResponse ||\n        !isAuthRedirectLocation\n      ) {\n        const errorCause = grantTokenResponse.error\n          ? `Cause: ${grantTokenResponse.error}`\n          : \"\";\n        toast.error(\n          `${__(\n            \"Authorization failed\",\n            \"bit-integrations\"\n          )} ${errorCause}. ${__(\"please try again\", \"bit-integrations\")}`\n        );\n        setLoading({ ...loading, auth: false });\n      } else {\n        tokenHelper(\n          grantTokenResponse,\n          conf,\n          setConf,\n          setAuthorized,\n          loading,\n          setLoading\n        );\n      }\n    }\n  }, 500);\n};\n\nconst tokenHelper = (\n  grantToken,\n  conf,\n  setConf,\n  setAuthorized,\n  loading,\n  setLoading\n) => {\n  const tokenRequestParams = { ...grantToken };\n  tokenRequestParams.clientId = conf.clientId;\n  tokenRequestParams.clientSecret = conf.clientSecret;\n  // eslint-disable-next-line no-undef\n  tokenRequestParams.redirectURI = `${btcbi.api.base}/redirect`;\n  bitsFetch(tokenRequestParams, \"notion_authorization\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...conf };\n      newConf.tokenDetails = result.data;\n      setConf(newConf);\n      setAuthorized(true);\n      toast.success(__(\"Authorized Successfully\"));\n    } else if (\n      (result && result.data && result.data.data) ||\n      (!result.success && typeof result.data === \"string\")\n    ) {\n      toast.error(\n        `${__(\"Authorization failed Cause:\")}${\n          result.data.data || result.data\n        }. ${__(\"please try again\")}`\n      );\n    } else {\n      toast.error(__(\"Authorization failed. please try again\"));\n    }\n    setLoading({ ...loading, auth: false });\n  });\n};\n\nexport const getAllDatabaseLists = async (\n  conf,\n  setConf,\n  loading,\n  setLoading\n) => {\n  setLoading && setLoading({ ...loading, list: true });\n  const requestParams = { accessToken: conf.tokenDetails.access_token };\n  const result = await bitsFetch(requestParams, \"notion_database_lists\");\n  if (result.success && result.data.results) {\n    const data = result?.data.results\n      .filter((e) => e.object === \"database\")\n      .map((e) => ({ id: e.id, name: e.title[0].text.content }));\n    const newConf = { ...conf };\n    if (data) {\n      if (!newConf.default) {\n        newConf.default = {};\n      }\n      newConf.default.databaseLists = data;\n      setConf(newConf);\n      if (setLoading) {\n        setLoading({ ...loading, list: false });\n        toast.success(__(\"List refresh successfully\"));\n      }\n    }\n    return true;\n  }\n\n  if (setLoading) {\n    setLoading({ ...loading, list: false });\n    toast.success(__(\"List refresh failed\"));\n  }\n  return false;\n};\n\nexport const getFieldsProperties = async (\n  conf,\n  setConf,\n  loading,\n  setLoading\n) => {\n  setLoading && setLoading({ ...loading, field: true });\n  const requestParams = {\n    accessToken: conf.tokenDetails.access_token,\n    databaseId: conf.databaseId,\n  };\n  const result = await bitsFetch(requestParams, \"notion_database_properties\");\n\n  if (result.success && result.data.properties) {\n    const data = result?.data.properties;\n    const field = [];\n    const sanitizeField = [\n      \"formula\",\n      \"people\",\n      \"Rollup\",\n      \"Relation\",\n      \"created_by\",\n      \"created_time\",\n      \"last_edited_by\",\n      \"last_edited_time\",\n    ];\n    for (const key in data) {\n      const obb = {};\n      let value = data[key];\n      const typeName = value.type;\n      if (!sanitizeField.includes(typeName)) {\n        obb.label = key;\n        obb.key = typeName;\n        if (typeName == \"title\") {\n          obb.required = true;\n        } else {\n          obb.required = false;\n        }\n        field.push(obb);\n      }\n    }\n\n    const newConf = { ...conf };\n    if (data) {\n      newConf.notionFields = field;\n      setConf({ ...newConf });\n      if (setLoading) {\n        setLoading({ ...loading, field: false });\n        toast.success(__(\"field refresh successfully\"));\n      }\n    }\n    return field;\n  }\n  if (setLoading) {\n    setLoading({ ...loading, field: false });\n    toast.success(__(\"field refresh failed\"));\n  }\n  return false;\n};\n\nexport const generateMappedField = (notionConf) => {\n  const requiredFlds = notionConf?.notionFields.filter(\n    (fld) => fld.required === true\n  );\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n        formFields: \"\",\n        notionFormFields: field.label,\n      }))\n    : [{ formFields: \"\", notionFormFields: \"\" }];\n};\n\nexport const checkMappedFields = (notionConf) => {\n  const mappedFields = notionConf?.field_map\n    ? notionConf.field_map.filter(\n        (mappedField) =>\n          !mappedField.formFields ||\n          !mappedField.notionFormFields ||\n          (!mappedField.formFields === \"custom\" && !mappedField.customValue)\n      )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const nextPage = (conf, setStep, pageNo) => {\n  setTimeout(() => {\n    document.getElementById(\"btcd-settings-wrp\").scrollTop = 0;\n  }, 300);\n\n  if (!checkMappedFields(conf)) {\n    toast.error(\"Please map mandatory fields\");\n    return;\n  }\n  conf.field_map.length > 0 && setStep(pageNo);\n};\n\nexport const saveConfig = (\n  flow,\n  setFlow,\n  allIntegURL,\n  conf,\n  navigate,\n  setLoading\n) => {\n  setLoading(true);\n  const resp = saveIntegConfig(\n    flow,\n    setFlow,\n    allIntegURL,\n    conf,\n    navigate,\n    \"\",\n    \"\",\n    setLoading\n  );\n  resp.then((res) => {\n    if (res.success) {\n      toast.success(res.data?.msg);\n      navigate(allIntegURL);\n    } else {\n      toast.error(res.data || res);\n    }\n  });\n};\n\nexport const saveUpdateConfig = (\n  flow,\n  allIntegURL,\n  conf,\n  navigate,\n  edit,\n  setIsLoading\n) => {\n  if (!checkMappedFields(conf)) {\n    toast.error(\"Please map mandatory fields\");\n    return;\n  }\n  saveActionConf({ flow, allIntegURL, conf, navigate, edit, setIsLoading });\n};\n"],"names":["__","_t","bitsFetch","saveIntegConfig","saveActionConf","handleInput","conf","setConf","error","setError","newConf","__spreadValues","inputError","name","value","handleAuthorize","setAuthorized","loading","setLoading","__spreadProps","apiEndpoint","authWindow","popupURLCheckTimer","grantTokenResponse","isAuthRedirectLocation","notionStoreValue","errorCause","toast","tokenHelper","grantToken","tokenRequestParams","result","getAllDatabaseLists","__async","requestParams","data","e","getFieldsProperties","field","sanitizeField","key","obb","typeName","generateMappedField","notionConf","requiredFlds","fld","checkMappedFields","mappedField","nextPage","setStep","pageNo","saveConfig","flow","setFlow","allIntegURL","navigate","res","_a","saveUpdateConfig","edit","setIsLoading"],"mappings":"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"}