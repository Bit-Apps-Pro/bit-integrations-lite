{"version":3,"file":"bi.168.111.js","sources":["../frontend-dev/src/components/AllIntegrations/Registration/EditRegistration.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport { checkWebhookIntegrationsExist, saveActionConf, saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport UserFieldMap from './UserFieldMap'\nimport UserMetaField from './UserMetaField'\nimport { userFields } from '../../../Utils/StaticData/userField'\nimport { checkMappedUserFields } from './UserHelperFunction'\nimport EditFormInteg from '../EditFormInteg'\nimport LoaderSm from '../../Loaders/LoaderSm'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport ConditionalLogic from '../../ConditionalLogic'\nimport CheckBox from '../../Utilities/CheckBox'\nimport Note from '../../Utilities/Note'\n\nexport default function EditRegistration({ allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [snack, setSnackbar] = useState({ show: false })\n  const [roles, setRoles] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const formFields = useRecoilValue($formFields)\n  const [userConf, setUserConf] = useRecoilState($actionConf)\n\n  useEffect(() => {\n    const tmpConf = { ...userConf }\n    bitsFetch({}, 'role/list', null, 'GET').then((res) => {\n      if (res?.success && res !== undefined) {\n        setRoles(Object.values(res?.data))\n      }\n    })\n    if (!tmpConf?.user_map?.[0]?.userField) {\n      tmpConf.user_map = userFields.filter(fld => fld.required).map(fl => ({ formField: '', userField: fl.key, required: fl.required }))\n    }\n\n    setUserConf(tmpConf)\n  }, [])\n\n  const saveConfig = () => {\n    if (!userConf.action_type) {\n      setSnackbar({ show: true, msg: __('Please select action type', 'bit-integrations') })\n      return\n    }\n    if (!userConf.user_role && userConf.action_type !== 'updated_user') {\n      setSnackbar({ show: true, msg: __('User Role can\\'t be empty', 'bit-integrations') })\n      return\n    }\n    if (!checkMappedUserFields(userConf) && userConf.action_type !== 'updated_user') {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    saveActionConf({ flow, setFlow, allIntegURL, conf: userConf, navigate, edit: 1, setIsLoading, setSnackbar })\n  }\n\n  const checkedCondition = (val, checked) => {\n    const tmpConf = { ...userConf }\n    if (checked) {\n      tmpConf.condition.action_behavior = val\n    } else {\n      tmpConf.condition.action_behavior = ''\n    }\n    setUserConf(tmpConf)\n  }\n\n  const actionHandler = (e) => {\n    const newConf = { ...userConf }\n    const { name, value } = e.target\n    if (e.target.checked) {\n      newConf[name] = value\n    }\n    setUserConf({ ...newConf })\n  }\n\n  const userUpdateInstruction = `\n  <ul>\n  <li>The user must be logged in when updating profile</li>\n  <li>The user cannot change the value of the username field when updating the user profile.</li>\n     \n  </ul>`\n  const userCreateInstruction = `\n  <ul>\n  <li>If the Username and Password fields are blank then the user will take the value of the email field as the field and the password will be auto-generated.</li>\n     \n  </ul>`\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <br />\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n      <div className=\"font-w-m mt-3\">{__('Action type', 'bit-integrations')}</div>\n      <div>\n        <CheckBox radio name=\"action_type\" onChange={actionHandler} checked={userConf?.action_type === 'new_user'} value=\"new_user\" title={__('New User Create', 'bit-integrations')} />\n        <CheckBox radio name=\"action_type\" onChange={actionHandler} checked={userConf?.action_type === 'updated_user'} value=\"updated_user\" title={__('Updated User', 'bit-integrations')} />\n      </div>\n\n      <div>\n        <UserFieldMap\n          formFields={formFields}\n          formID={formID}\n          userConf={userConf}\n          setUserConf={setUserConf}\n          roles={roles}\n          userFields={userFields}\n        />\n      </div>\n      <div>\n        <UserMetaField\n          formFields={formFields}\n          formID={formID}\n          userConf={userConf}\n          setUserConf={setUserConf}\n        />\n        <br />\n      </div>\n\n      {userConf?.condition && (\n        <>\n          <div className=\"flx\">\n            <TableCheckBox onChange={e => checkedCondition(e.target.value, e.target.checked)} checked={userConf?.condition?.action_behavior === 'cond'} className=\"wdt-200 mt-4 mr-2\" value=\"cond\" title={__('Conditional Logics', 'bit_integration')} />\n          </div>\n          <br />\n          {userConf?.condition?.action_behavior === 'cond' && (\n\n            <ConditionalLogic formFields={formFields} dataConf={userConf} setDataConf={setUserConf} />\n          )}\n        </>\n      )}\n\n      {userConf?.action_type === 'updated_user' ? (\n        <Note note={userUpdateInstruction} />\n      ) : (\n        <Note note={userCreateInstruction} />\n      )}\n\n      <button\n        className=\"btn f-left btcd-btn-lg green sh-sm flx\"\n        type=\"button\"\n        onClick={saveConfig}\n        disabled={isLoading}\n      >\n        {__('Update', 'bit-integrations')}\n\n        {isLoading && <LoaderSm size={20} clr=\"#022217\" className=\"ml-2\" />}\n      </button>\n\n    </div>\n  )\n}\n"],"names":["useNavigate","useParams","reactExports","Recoil_index_20","Recoil_index_18","jsxRuntimeExports","$newFlow","$formFields","$actionConf","bitsFetch","SnackMsg","__","TableCheckBox","Note","LoaderSm","checkWebhookIntegrationsExist","saveActionConf","userFields","UserFieldMap","CustomFieldMap","checkMappedUserFields","EditFormInteg","EditWebhookInteg","ConditionalLogic","EditRegistration","allIntegURL","_a","_b","navigate","formID","snack","setSnackbar","useState","roles","setRoles","isLoading","setIsLoading","flow","setFlow","useRecoilState","formFields","useRecoilValue","userConf","setUserConf","useEffect","tmpConf","__spreadValues","res","fld","fl","saveConfig","checkedCondition","val","checked","actionHandler","e","newConf","name","value","userUpdateInstruction","userCreateInstruction","jsx","CheckBox","UserMetaField","jsxs","Fragment"],"mappings":"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"}