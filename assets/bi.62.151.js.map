{"version":3,"file":"bi.62.151.js","sources":["../frontend-dev/src/components/AllIntegrations/Salesforce/EditSalesforce.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, handleInput } from './SalesforceCommonFunc'\nimport SelesforceIntegLayout from './SalesforceIntegLayout'\n\nfunction EditSalesforce({ allIntegURL }) {\n  const navigate = useNavigate()\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [salesforceConf, setSalesforceConf] = useRecoilState($actionConf)\n  const [isLoading, setIsLoading] = useState(false)\n  const [snack, setSnackbar] = useState({ show: false })\n  const formField = useRecoilValue($formFields)\n\n  const checkedActionFieldsMapType = ['contact-create', 'lead-create', 'account-create', 'campaign-create', 'opportunity-create', 'event-create', 'case-create'].includes(salesforceConf?.actionName)\n  const saveConfig = () => {\n    if (checkedActionFieldsMapType && !checkMappedFields(salesforceConf)) {\n      toast.error('Please map mandatory fields !')\n      return\n    }\n    saveActionConf({ flow, allIntegURL, conf: salesforceConf, navigate, edit: 1, setIsLoading, setSnackbar })\n  }\n\n  const isDisabled = () => {\n    if (salesforceConf?.actionName === 'opportunity-create') {\n      return !salesforceConf.actions?.opportunityStageId\n    }\n    if (salesforceConf?.actionName === 'event-create') {\n      return !salesforceConf.actions?.eventSubjectId\n    }\n    if (salesforceConf?.actionName === 'add-campaign-member') {\n      return !salesforceConf.campaignId\n    }\n  }\n\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 d-in-b\">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, salesforceConf, setSalesforceConf)} name=\"name\" value={salesforceConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n\n      <SelesforceIntegLayout\n        formFields={formField}\n        handleInput={(e) => handleInput(e, salesforceConf, setSalesforceConf, setIsLoading, setSnackbar)}\n        salesforceConf={salesforceConf}\n        setSalesforceConf={setSalesforceConf}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={isDisabled() || isLoading}\n        isLoading={isLoading}\n        dataConf={salesforceConf}\n        setDataConf={setSalesforceConf}\n        formFields={formField}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditSalesforce\n"],"names":["useNavigate","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$newFlow","$actionConf","$formFields","SnackMsg","__","_t","EditFormInteg","EditWebhookInteg","checkWebhookIntegrationsExist","saveActionConf","IntegrationStepThree","handleInput","checkMappedFields","SalesforceIntegLayout","EditSalesforce","allIntegURL","navigate","flow","setFlow","useRecoilState","salesforceConf","setSalesforceConf","isLoading","setIsLoading","useState","snack","setSnackbar","formField","useRecoilValue","checkedActionFieldsMapType","saveConfig","toast","isDisabled","_a","_b","jsx","jsxs","e","SelesforceIntegLayout"],"mappings":"AAgBA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,gBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,iBAAA,MAAA,kBAAA,SAASC,EAAe,CAAE,YAAAC,GAAe,CACvC,MAAMC,EAAWrB,IACX,CAACsB,EAAMC,CAAO,EAAIC,EAAenB,CAAQ,EACzC,CAACoB,EAAgBC,CAAiB,EAAIF,EAAelB,CAAW,EAChE,CAACqB,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAOC,CAAW,EAAIF,WAAS,CAAE,KAAM,GAAO,EAC/CG,EAAYC,EAAe1B,CAAW,EAEtC2B,EAA6B,CAAC,iBAAkB,cAAe,iBAAkB,kBAAmB,qBAAsB,eAAgB,aAAa,EAAE,SAAST,GAAA,YAAAA,EAAgB,UAAU,EAC5LU,EAAa,IAAM,CACvB,GAAID,GAA8B,CAACjB,EAAkBQ,CAAc,EAAG,CACpEW,EAAM,MAAM,+BAA+B,EAC3C,MACF,CACetB,EAAA,CAAE,KAAAQ,EAAM,YAAAF,EAAa,KAAMK,EAAgB,SAAAJ,EAAU,KAAM,EAAG,aAAAO,EAAc,YAAAG,CAAa,CAAA,CAAA,EAGpGM,EAAa,IAAM,CAjB3B,IAAAC,EAAAC,EAkBQ,IAAAd,GAAA,YAAAA,EAAgB,cAAe,qBAC1B,MAAA,GAACa,EAAAb,EAAe,UAAf,MAAAa,EAAwB,oBAE9B,IAAAb,GAAA,YAAAA,EAAgB,cAAe,eAC1B,MAAA,GAACc,EAAAd,EAAe,UAAf,MAAAc,EAAwB,gBAE9B,IAAAd,GAAA,YAAAA,EAAgB,cAAe,sBACjC,MAAO,CAACA,EAAe,UACzB,EAGF,cACG,MAAI,CAAA,MAAO,CAAE,MAAO,GACnB,EAAA,SAAA,CAACe,EAAAA,IAAAhC,EAAA,CAAS,MAAAsB,EAAc,YAAAC,CAA0B,CAAA,EAElDU,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAD,MAAC,KAAE,UAAU,iBAAkB,SAAG/B,EAAA,oBAAqB,kBAAkB,EAAE,EAC3E+B,EAAAA,IAAC,SAAM,UAAU,qBAAqB,SAAeE,GAAA1B,EAAY0B,EAAGjB,EAAgBC,CAAiB,EAAG,KAAK,OAAO,MAAOD,EAAe,KAAM,KAAK,OAAO,YAAahB,EAAG,sBAAuB,kBAAkB,CAAG,CAAA,CAAA,EAC1N,QACC,KAAG,EAAA,EACH,CAACI,EAA8BS,EAAK,gBAAgB,GAAKkB,EAAAA,IAAC7B,GAAc,YAAAoB,EAA0B,EAClGlB,EAA8BS,EAAK,gBAAgB,GAAKkB,EAAA,IAAC5B,GAAiB,YAAAmB,EAA0B,EAErGS,EAAA,IAACG,EAAA,CACC,WAAYX,EACZ,YAAcU,GAAM1B,EAAY0B,EAAGjB,EAAgBC,CAA4C,EAC/F,eAAAD,EACA,kBAAAC,EACA,UAAAC,EACA,aAAAC,EACA,YAAAG,CAAA,CACF,EAEAS,EAAA,IAACzB,EAAA,CACC,KAAI,GACJ,WAAAoB,EACA,SAAUE,KAAgBV,EAC1B,UAAAA,EACA,SAAUF,EACV,YAAaC,EACb,WAAYM,CAAA,CACd,QACC,KAAG,EAAA,CACN,CAAA,CAAA,CAEJ"}