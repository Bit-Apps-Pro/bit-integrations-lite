{"version":3,"file":"bi.787.753.js","sources":["../frontend-dev/src/components/AllIntegrations/ElasticEmail/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/ElasticEmail/ElasticEmailFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/ElasticEmail/ElasticEmailIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './ElasticEmailCommonFunc'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\nimport TagifyInput from '../../Utilities/TagifyInput'\n\nexport default function ElasticEmailFieldMap({ i, formFields, field, elasticEmailConf, setElasticEmailConf }) {\n  if (elasticEmailConf?.field_map?.length === 1 && field.elasticEmailField === '') {\n    const newConf = { ...elasticEmailConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setElasticEmailConf(newConf)\n  }\n  const requiredFlds = elasticEmailConf?.elasticEmailFields.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = elasticEmailConf?.elasticEmailFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, elasticEmailConf, setElasticEmailConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, elasticEmailConf, setElasticEmailConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"elasticEmailField\" value={i < requiredFlds.length ? (requiredFlds[i].label || '') : (field.elasticEmailField || '')} onChange={(ev) => handleFieldMapping(ev, i, elasticEmailConf, setElasticEmailConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, elasticEmailConf, setElasticEmailConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, elasticEmailConf, setElasticEmailConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { getAllList } from './ElasticEmailCommonFunc'\nimport { addFieldMap } from './IntegrationHelpers'\nimport ElasticEmailFieldMap from './ElasticEmailFieldMap'\n\nexport default function ElasticEmailIntegLayout({ formFields, handleInput, elasticEmailConf, setElasticEmailConf, isLoading, setIsLoading, setSnackbar }) {\n  const setLists = (val) => {\n    const newConf = { ...elasticEmailConf }\n    newConf.list_id = val ? val.split(',') : []\n    setElasticEmailConf({ ...newConf })\n  }\n  return (\n    <>\n      <br />\n      <div className=\"flx\">\n        <b className=\"wdt-200 d-in-b\">{__('Lists:', 'bit-integrations')}</b>\n\n        <MultiSelect\n          defaultValue={elasticEmailConf.list_id}\n          className=\"btcd-paper-drpdwn w-5\"\n          options={elasticEmailConf?.default?.lists && elasticEmailConf.default.lists.map(list => ({ label: list.listName, value: list.listName.toString() }))}\n          onChange={val => setLists(val)}\n        />\n\n        {/* <select onChange={handleInput} name=\"list_id\" value={elasticEmailConf.list_id} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select List', 'bit-integrations')}</option>\n        {\n          elasticEmailConf?.default?.lists && elasticEmailConf.default.lists.map(({ listId, listName }) => (\n            <option key={listId} value={listName}>\n              {listName}\n            </option>\n          ))\n        }\n      </select> */}\n        <button onClick={() => getAllList(elasticEmailConf, setElasticEmailConf, setIsLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Recipients', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n      </div>\n      <br />\n      <div className=\"mt-5\"><b className=\"wdt-100\">{__('Field Map', 'bit-integrations')}</b></div>\n      <div className=\"btcd-hr mt-1\" />\n      <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n        <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n        <div className=\"txt-dp\"><b>{__('Elastic Email Fields', 'bit-integrations')}</b></div>\n      </div>\n\n      {elasticEmailConf.list_id && elasticEmailConf?.field_map.map((itm, i) => (\n        <ElasticEmailFieldMap\n          key={`rp-m-${i + 9}`}\n          i={i}\n          field={itm}\n          elasticEmailConf={elasticEmailConf}\n          formFields={formFields}\n          setElasticEmailConf={setElasticEmailConf}\n          setSnackbar={setSnackbar}\n        />\n      ))}\n      <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(elasticEmailConf.field_map.length, elasticEmailConf, setElasticEmailConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n      <br />\n      <br />\n\n    </>\n  )\n}\n"],"names":["addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","ElasticEmailFieldMap","formFields","field","elasticEmailConf","setElasticEmailConf","_a","tmp","generateMappedField","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","$btcbi","isPro","jsx","jsxs","ev","__","f","_b","SmartTagField","TagifyInput","e","handleCustomValue","key","label","Fragment","ElasticEmailIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","setLists","val","MultiSelect","list","getAllList","itm"],"mappings":"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"}