{"version":3,"file":"bi.707.871.js","sources":["../frontend-dev/src/components/AllIntegrations/Clickup/ClickupCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\nimport { __ } from \"../../../Utils/i18nwrap\";\n\nexport const handleInput = (e, clickupConf, setClickupConf) => {\n  const newConf = { ...clickupConf };\n  const { name } = e.target;\n  if (e.target.value !== \"\") {\n    newConf[name] = e.target.value;\n  } else {\n    delete newConf[name];\n  }\n  setClickupConf({ ...newConf });\n};\n\nexport const generateMappedField = (clickupConf) => {\n  let allRequiredFields = [];\n  if (clickupConf.actionName === \"task\") {\n    allRequiredFields = clickupConf?.taskFields;\n  }\n  const requiredFlds = allRequiredFields?.filter(\n    (fld) => fld.required === true\n  );\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n        formField: \"\",\n        clickupFormField: field.key,\n      }))\n    : [{ formField: \"\", clickupFormField: \"\" }];\n};\n\nexport const checkMappedFields = (clickupConf) => {\n  const mappedFields = clickupConf?.field_map\n    ? clickupConf.field_map.filter(\n        (mappedField) =>\n          !mappedField.formField ||\n          !mappedField.clickupFormField ||\n          (mappedField.formField === \"custom\" && !mappedField.customValue) ||\n          (mappedField.clickupFormField === \"customFieldKey\" &&\n            !mappedField.customFieldKey)\n      )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const clickupAuthentication = (\n  confTmp,\n  setConf,\n  setError,\n  setIsAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!confTmp.api_key) {\n    setError({\n      api_key: !confTmp.api_key\n        ? __(\"Api Key can't be empty\", \"bit-integrations\")\n        : \"\",\n    });\n    return;\n  }\n\n  setError({});\n  setLoading({ ...loading, auth: true });\n\n  const requestParams = { api_key: confTmp.api_key };\n\n  bitsFetch(requestParams, \"clickup_authentication\").then((result) => {\n    if (result && result.success) {\n      setIsAuthorized(true);\n      setLoading({ ...loading, auth: false });\n      toast.success(__(\"Authorized successfully\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...loading, auth: false });\n    toast.error(\n      __(\"Authorized failed, Please enter valid API key\", \"bit-integrations\")\n    );\n  });\n};\n\nexport const getCustomFields = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, customFields: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action: confTmp.actionName,\n    list_id: confTmp.selectedList,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_custom_fields\").then((result) => {\n    if (result && result.success) {\n      // const newConf = { ...confTmp };\n      // if (result.data) {\n      //   newConf.customFields = result.data;\n      // }\n      // setConf(newConf);\n      setConf((oldConf) => {\n        const newConf = { ...oldConf };\n        if (!newConf.default) {\n          newConf.default = {};\n        }\n        if (result.data) {\n          newConf.customFields = result.data;\n        }\n        return newConf;\n      });\n      setLoading({ ...setLoading, customFields: false });\n      if (!result.data) {\n        toast.error(__(\"No custom fields found\", \"bit-integrations\"));\n      } else {\n        toast.success(\n          __(\"Custom fields also fetched successfully\", \"bit-integrations\")\n        );\n      }\n      return;\n    }\n    setLoading({ ...setLoading, customFields: false });\n    toast.error(__(\"Custom fields fetching failed\", \"bit-integrations\"));\n  });\n};\n\nexport const getAllTeams = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, Teams: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_all_Teams\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.Teams = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, Teams: false });\n      if (confTmp.actionName === \"task\") {\n        toast.success(__(\"Teams fetched successfully\", \"bit-integrations\"));\n      }\n\n      return;\n    }\n    setLoading({ ...setLoading, Teams: false });\n    if (confTmp.actionName === \"task\") {\n      toast.error(__(\"Teams fetching failed\", \"bit-integrations\"));\n    }\n  });\n};\n\nexport const getAllSpaces = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, Spaces: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n    team_id: confTmp.selectedTeam,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_all_Spaces\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.Spaces = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, Spaces: false });\n      if (confTmp.actionName === \"task\") {\n        toast.success(__(\"Spaces fetched successfully\", \"bit-integrations\"));\n      }\n\n      return;\n    }\n    setLoading({ ...setLoading, Spaces: false });\n    if (confTmp.actionName === \"task\") {\n      toast.error(__(\"Spaces fetching failed\", \"bit-integrations\"));\n    }\n  });\n};\n\nexport const getAllFolders = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, Folders: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n    space_id: confTmp.selectedSpace,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_all_Folders\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.Folders = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, Folders: false });\n      if (confTmp.actionName === \"task\") {\n        toast.success(__(\"Folders fetched successfully\", \"bit-integrations\"));\n      }\n\n      return;\n    }\n    setLoading({ ...setLoading, Folders: false });\n    if (confTmp.actionName === \"task\") {\n      toast.error(__(\"Folders fetching failed\", \"bit-integrations\"));\n    }\n  });\n};\n\nexport const getAllLists = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, Lists: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n    folder_id: confTmp.selectedFolder,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_all_Lists\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.Lists = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, Lists: false });\n      if (confTmp.actionName === \"task\") {\n        toast.success(__(\"Lists fetched successfully\", \"bit-integrations\"));\n      }\n\n      return;\n    }\n    setLoading({ ...setLoading, Lists: false });\n    if (confTmp.actionName === \"task\") {\n      toast.error(__(\"Lists fetching failed\", \"bit-integrations\"));\n    }\n  });\n};\n\nexport const getAllTags = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, Tags: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n    space_id: confTmp.selectedSpace,\n  };\n\n  bitsFetch(requestParams, \"clickup_fetch_all_Tags\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.Tags = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, Tags: false });\n      if (confTmp.actionName === \"task\") {\n        toast.success(__(\"Tags fetched successfully\", \"bit-integrations\"));\n      }\n\n      return;\n    }\n    setLoading({ ...setLoading, Tags: false });\n    if (confTmp.actionName === \"task\") {\n      toast.error(__(\"Tags fetching failed\", \"bit-integrations\"));\n    }\n  });\n};\n"],"names":["__","bitsFetch","_t","handleInput","e","clickupConf","setClickupConf","newConf","__spreadValues","name","generateMappedField","allRequiredFields","requiredFlds","fld","field","checkMappedFields","mappedField","clickupAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","__spreadProps","requestParams","result","toast","getCustomFields","oldConf","getAllTeams","getAllSpaces","getAllFolders","getAllLists"],"mappings":"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"}