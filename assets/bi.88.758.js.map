{"version":3,"file":"bi.88.758.js","sources":["../frontend-dev/src/components/AllIntegrations/IntegrationHelpers/MauticIntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/Mautic/MauticActions.jsx","../frontend-dev/src/components/AllIntegrations/Mautic/MauticFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Mautic/MauticIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n","/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { getAllTags } from './MauticCommonFunc'\n\nexport default function MauticActions({ mauticConf, setMauticConf, formFields }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n  const [snack, setSnackbar] = useState({ show: false })\n  const actionHandler = (e, type) => {\n    const newConf = { ...mauticConf }\n    if (type === 'tag') {\n      if (e.target.checked) {\n        getAllTags(mauticConf, setMauticConf, setIsLoading, setSnackbar)\n        newConf.actions.tag = true\n        setActionMdl({ show: 'tag' })\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.tag\n      }\n    }\n    setMauticConf({ ...newConf })\n  }\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n  const setTags = (val) => {\n    const newConf = { ...mauticConf }\n    newConf.tag = val ? val.split(',') : []\n    setMauticConf({ ...newConf })\n  }\n\n\n  return (\n\n    <div className=\"pos-rel d-flx w-8\">\n      <TableCheckBox checked={mauticConf.actions?.tag || false} onChange={(e) => actionHandler(e, 'tag')} className=\"wdt-200 mt-4 mr-2\" value=\"tag\" title={__('Add Tag', 'bit-integrations')} subTitle={__('Add tag to mautic contact', 'bit-integrations')} />\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'tag'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Tag Records', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <small>{__('Add a tag to contacts', 'bit-integrations')}</small>\n        <div className=\"mt-2\">{__('Tag Name', 'bit-integrations')}</div>\n        {isLoading\n          ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n          : (\n            <div className=\"flx flx-between mt-2\">\n              <MultiSelect\n                className=\"msl-wrp-options\"\n                defaultValue={mauticConf?.tag}\n                options={mauticConf.default?.tags?.map(list => ({ label: list.tagName, value: list.tagName.toString() }))}\n                onChange={val => setTags(val)}\n                customValue\n              />\n              <button onClick={() => getAllTags(mauticConf, setMauticConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh CRM Tags', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n            </div>\n          )}\n\n      </ConfirmModal>\n\n    </div>\n  )\n}\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from '../IntegrationHelpers/MauticIntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function MauticFieldMap({ i, formFields, field, mauticConf, setMauticConf }) {\n  const requiredFields = mauticConf?.default?.fields && mauticConf.default.fields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = mauticConf?.default?.fields && mauticConf.default.fields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, mauticConf, setMauticConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => f.type !== 'file' && (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, mauticConf, setMauticConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"mauticField\" value={i < requiredFields.length ? (requiredFields[i].fieldAlias || '') : (field.mauticField || '')} onChange={(ev) => handleFieldMapping(ev, i, mauticConf, setMauticConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].fieldAlias} value={requiredFields[i].fieldAlias}>\n                  {requiredFields[i].fieldName}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ fieldAlias, fieldName }) => (\n                  <option key={fieldAlias} value={fieldAlias}>\n                    {fieldName}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        <button\n          onClick={() => addFieldMap(i, mauticConf, setMauticConf)}\n          className=\"icn-btn sh-sm ml-2 mr-1\"\n          type=\"button\"\n        >\n          +\n        </button>\n        <button onClick={() => delFieldMap(i, mauticConf, setMauticConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n          <span className=\"btcd-icn icn-trash-2\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from '../IntegrationHelpers/MauticIntegrationHelpers'\nimport MauticActions from './MauticActions'\nimport { getAllFields } from './MauticCommonFunc'\nimport MauticFieldMap from './MauticFieldMap'\n\nexport default function MauticIntegLayout({ formFields, handleInput, mauticConf, setMauticConf, isLoading, setIsLoading, setSnackbar, a }) {\n  return (\n    <>\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {!isLoading && mauticConf?.default?.fields && (\n        <div>\n          <br />\n          <br />\n          <div className=\"mt-4\">\n            <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n            <button onClick={() => getAllFields(mauticConf, setMauticConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Mautic Fields', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </div>\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Mautic Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {mauticConf?.field_map.map((itm, i) => (\n            <MauticFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              mauticConf={mauticConf}\n              formFields={formFields}\n              setMauticConf={setMauticConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(mauticConf.field_map.length, mauticConf, setMauticConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <MauticActions\n            mauticConf={mauticConf}\n            setMauticConf={setMauticConf}\n            formFields={formFields}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","MauticActions","mauticConf","setMauticConf","formFields","isLoading","setIsLoading","useState","actionMdl","setActionMdl","snack","setSnackbar","actionHandler","e","type","getAllTags","clsActionMdl","setTags","val","jsxs","jsx","TableCheckBox","_a","__","ConfirmModal","Loader","MultiSelect","_c","_b","list","MauticFieldMap","field","requiredFields","fld","allNonRequiredFields","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","TagifyInput","handleCustomValue","fieldAlias","fieldName","MauticIntegLayout","handleInput","a","Fragment","getAllFields","itm"],"mappings":"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"}