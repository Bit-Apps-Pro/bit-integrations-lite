{"version":3,"file":"bi.980.795.js","sources":["../frontend-dev/src/components/AllIntegrations/GoogleContacts/GoogleContactsCommonFunc.js"],"sourcesContent":["/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, googleContactsConf, setGoogleContactsConf) => {\n  const newConf = { ...googleContactsConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setGoogleContactsConf({ ...newConf })\n}\n\nexport const checkMappedFields = fieldsMapped => {\n  const checkedField = fieldsMapped\n    ? fieldsMapped.filter(item => (!item.formField || !item.googleContactsFormField))\n    : []\n  if (checkedField.length > 0) return false\n  return true\n}\n\n\nexport const handleAuthorize = (confTmp, setConf, setIsAuthorized, setIsLoading, setError) => {\n  if (!confTmp.clientId || !confTmp.clientSecret) {\n    setError({\n      clientId: !confTmp.clientId ? __('Client Id can\\'t be empty', 'bit-integrations') : '',\n      clientSecret: !confTmp.clientSecret ? __('Client Secret can\\'t be empty', 'bit-integrations') : '',\n    })\n    return\n  }\n  setIsLoading(true)\n  const scopes = 'https://www.googleapis.com/auth/contacts'\n  // eslint-disable-next-line no-undef\n  const apiEndpoint = `https://accounts.google.com/o/oauth2/v2/auth?scope=${scopes}&access_type=offline&prompt=consent&response_type=code&state=${encodeURIComponent(window.location.href)}/redirect&redirect_uri=${encodeURIComponent(`${btcbi.api.base}/redirect`)}&client_id=${confTmp.clientId}`\n  const authWindow = window.open(apiEndpoint, 'googleContacts', 'width=400,height=609,toolbar=off')\n  const popupURLCheckTimer = setInterval(() => {\n    if (authWindow.closed) {\n      clearInterval(popupURLCheckTimer)\n      let grantTokenResponse = {}\n      let isAuthRedirectLocation = false\n      const bitsGoogleCalendar = localStorage.getItem('__googleContacts')\n      if (bitsGoogleCalendar) {\n        isAuthRedirectLocation = true\n        grantTokenResponse = JSON.parse(bitsGoogleCalendar)\n        localStorage.removeItem('__googleContacts')\n      }\n      if (!grantTokenResponse.code || grantTokenResponse.error || !grantTokenResponse || !isAuthRedirectLocation) {\n        const errorCause = grantTokenResponse.error ? `Cause: ${grantTokenResponse.error}` : ''\n        toast.error(`${__('Authorization failed', 'bit-integrations')} ${errorCause}. ${__('please try again', 'bit-integrations')}`)\n        setIsLoading(false)\n      } else {\n        const newConf = { ...confTmp }\n        newConf.accountServer = grantTokenResponse['accounts-server']\n        tokenHelper(grantTokenResponse, newConf, setConf, setIsAuthorized, setIsLoading)\n      }\n    }\n  }, 500)\n}\n\nconst tokenHelper = (grantToken, confTmp, setConf, setIsAuthorized, setIsLoading) => {\n  const tokenRequestParams = { ...grantToken }\n  tokenRequestParams.clientId = confTmp.clientId\n  tokenRequestParams.clientSecret = confTmp.clientSecret\n  // eslint-disable-next-line no-undef\n  tokenRequestParams.redirectURI = `${btcbi.api.base}/redirect`\n\n  bitsFetch(tokenRequestParams, 'googleContacts_authorization')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        newConf.tokenDetails = result.data\n        setConf(newConf)\n        setIsAuthorized(true)\n        toast.success(__('Authorized Successfully', 'bit-integrations'))\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        toast.error(`${__('Authorization failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}`)\n      } else {\n        toast.error(__('Authorization failed. please try again', 'bit-integrations'))\n      }\n      setIsLoading(false)\n    })\n}\n\nexport const generateMappedField = (googleContactsConf) => {\n  const requiredFlds = googleContactsConf?.default.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', googleContactsFormField: field.key })) : [{ formField: '', googleContactsFormField: '' }]\n}\n\n"],"names":["__","_t","bitsFetch","handleInput","googleContactsConf","setGoogleContactsConf","newConf","__spreadValues","name","checkMappedFields","fieldsMapped","item","handleAuthorize","confTmp","setConf","setIsAuthorized","setIsLoading","setError","apiEndpoint","authWindow","popupURLCheckTimer","grantTokenResponse","isAuthRedirectLocation","bitsGoogleCalendar","errorCause","toast","tokenHelper","grantToken","tokenRequestParams","result","generateMappedField","requiredFlds","fld","field"],"mappings":"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"}