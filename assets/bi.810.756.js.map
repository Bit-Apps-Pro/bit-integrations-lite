{"version":3,"file":"bi.810.756.js","sources":["../frontend-dev/src/components/AllIntegrations/WishList/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/WishList/WishListFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/WishList/WishListIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './WishListCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function WishListFieldMap({ i, formFields, field, wishlistConf, setWishlistConf }) {\n  if (wishlistConf?.field_map?.length === 1 && field.wishlistField === '') {\n    const newConf = { ...wishlistConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setWishlistConf(newConf)\n  }\n\n  const wishlistFlds = wishlistConf?.actionName === 'level-member' ? wishlistConf?.memberFields : wishlistConf?.levelFields || []\n  const requiredFlds = wishlistFlds.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = wishlistFlds.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, wishlistConf, setWishlistConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, wishlistConf, setWishlistConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"wishlistField\" value={i < requiredFlds ? (requiredFlds[i].label || '') : (field.wishlistField || '')} onChange={(ev) => handleFieldMapping(ev, i, wishlistConf, setWishlistConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, wishlistConf, setWishlistConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, wishlistConf, setWishlistConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport { getAllLevels, getAllMembers } from './WishListCommonFunc'\nimport WishListFieldMap from './WishListFieldMap'\n\nexport default function WishListIntegLayout({ formFields, handleInput, wishlistConf, setWishlistConf, isLoading, setIsLoading, setSnackbar }) {\n  const handleInputAction = (e) => {\n    const newConf = { ...wishlistConf }\n    const { name, value } = e.target\n    if (e.target.value !== '') {\n      if (value === 'level-member') {\n        delete newConf?.member_id\n      } else {\n        delete newConf?.level_id\n      }\n      newConf[name] = e.target.value\n    } else {\n      delete newConf[name]\n    }\n\n    setTimeout(() => {\n      if (newConf?.field_map) newConf.field_map = [{ formField: '', wishlistField: '' }]\n      setWishlistConf({ ...newConf })\n      if (e.target.value === 'level-member') {\n        getAllLevels(newConf, setWishlistConf, setIsLoading)\n      } else {\n        getAllMembers(newConf, setWishlistConf, setIsLoading)\n      }\n    }, 10)\n  }\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Action:', 'bit-integrations')}</b>\n      <select onChange={handleInputAction} name=\"actionName\" value={wishlistConf?.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Action', 'bit-integrations')}</option>\n        {\n          wishlistConf?.actionLists && wishlistConf.actionLists.map(({ key, label }) => (\n            <option key={key} value={key}>\n              {label}\n            </option>\n          ))\n        }\n      </select>\n      <br />\n      <br />\n      {wishlistConf?.actionName && wishlistConf.actionName === 'level-member'\n        && (\n          <>\n            <b className=\"wdt-200 d-in-b\">{__('Levels:', 'bit-integrations')}</b>\n            <select onChange={handleInput} name=\"level_id\" value={wishlistConf.level_id} className=\"btcd-paper-inp w-5\">\n              <option value=\"\">{__('Select Level', 'bit-integrations')}</option>\n              {wishlistConf?.default?.levellists && wishlistConf.default.levellists.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n            <button onClick={() => getAllLevels(wishlistConf, setWishlistConf, setIsLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Level', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </>\n        )}\n      {wishlistConf?.actionName && wishlistConf.actionName === 'member-level'\n        && (\n          <>\n            <b className=\"wdt-200 d-in-b\">{__('Members:', 'bit-integrations')}</b>\n            <select onChange={handleInput} name=\"member_id\" value={wishlistConf.member_id} className=\"btcd-paper-inp w-5\">\n              <option value=\"\">{__('Select Member', 'bit-integrations')}</option>\n              {wishlistConf?.default?.memberlists && wishlistConf.default.memberlists.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n            <button onClick={() => getAllMembers(wishlistConf, setWishlistConf, setIsLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Members', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </>\n        )}\n      <br />\n      <div className=\"mt-5\"><b className=\"wdt-100\">{__('Field Map', 'bit-integrations')}</b></div>\n      <div className=\"btcd-hr mt-1\" />\n      <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n        <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n        <div className=\"txt-dp\"><b>{__('Wish List Member Fields', 'bit-integrations')}</b></div>\n      </div>\n\n      {(wishlistConf?.level_id || wishlistConf?.member_id) && wishlistConf?.field_map.map((itm, i) => (\n        <WishListFieldMap\n          key={`rp-m-${i + 9}`}\n          i={i}\n          field={itm}\n          wishlistConf={wishlistConf}\n          formFields={formFields}\n          setWishlistConf={setWishlistConf}\n          setSnackbar={setSnackbar}\n        />\n      ))}\n      <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(wishlistConf.field_map.length, wishlistConf, setWishlistConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n      <br />\n      <br />\n\n    </>\n  )\n}\n"],"names":["addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","WishListFieldMap","formFields","field","wishlistConf","setWishlistConf","_a","tmp","generateMappedField","wishlistFlds","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","$btcbi","isPro","jsx","jsxs","ev","__","f","_b","SmartTagField","TagifyInput","e","handleCustomValue","key","label","Fragment","WishListIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","handleInputAction","name","value","getAllLevels","getAllMembers","id","itm"],"mappings":"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"}