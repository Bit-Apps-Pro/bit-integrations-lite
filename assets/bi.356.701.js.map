{"version":3,"file":"bi.356.701.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoCampaigns/ZohoCampaignsFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/ZohoCampaigns/ZohoCampaignsIntegLayout.jsx"],"sourcesContent":["import { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport TrashIcn from '../../../Icons/TrashIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport MtInput from '../../Utilities/MtInput'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport const addFieldMap = (indx, campaignsConf, setCampaignsConf) => {\n  const newConf = { ...campaignsConf }\n  newConf.field_map.splice(indx, 0, {})\n  setCampaignsConf(newConf)\n}\n\nexport default function ZohoCampaignsFieldMap({ i, formFields, field, campaignsConf, setCampaignsConf }) {\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  const isNotRequired = field.zohoFormField === '' || campaignsConf.default.fields[campaignsConf.list].required?.indexOf(field.zohoFormField) === -1\n  const delFieldMap = (indx) => {\n    const newConf = { ...campaignsConf }\n    if (newConf.field_map.length > 1) {\n      newConf.field_map.splice(indx, 1)\n    }\n\n    setCampaignsConf(newConf)\n  }\n\n  const handleFieldMapping = (event, indx) => {\n    const newConf = { ...campaignsConf }\n    newConf.field_map[indx][event.target.name] = event.target.value\n\n    if (event.target.value === 'custom') {\n      newConf.field_map[indx].customValue = ''\n    }\n\n    setCampaignsConf(newConf)\n  }\n\n  return (\n    <div\n      className={`flx flx-around mt-2 ${isNotRequired && 'mr-1'}`}\n    >\n      <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, campaignsConf, setCampaignsConf)}>\n        <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n        <optgroup label=\"Form Fields\">\n          {\n            formFields.map(f => f.type !== 'file' && <option key={`ff-zhcrm-${f.name}`} value={f.name}>{f.label}</option>)\n          }\n        </optgroup>\n        <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n        <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n          {isPro && SmartTagField?.map(f => (\n            <option key={`ff-rm-${f.name}`} value={f.name}>\n              {f.label}\n            </option>\n          ))}\n        </optgroup>\n      </select>\n\n      {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, campaignsConf, setCampaignsConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n      <select className=\"btcd-paper-inp\" name=\"zohoFormField\" value={field.zohoFormField || ''} disabled={!isNotRequired} onChange={(ev) => handleFieldMapping(ev, i, campaignsConf, setCampaignsConf)}>\n        <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n        {\n          isNotRequired\n            ? campaignsConf?.default?.fields?.[campaignsConf.list]?.fields && campaignsConf.default.fields[campaignsConf.list].fields.map(contactField => contactField !== 'Contact Email'\n              && (\n                <option key={`${contactField}-1`} value={contactField}>\n                  {contactField}\n                </option>\n              ))\n            : (\n              <option key=\"contact_email\" value=\"Contact Email\">\n                {__('Contact Email', 'bit-integrations')}\n              </option>\n            )\n        }\n      </select>\n      <button\n        onClick={() => addFieldMap(i, campaignsConf, setCampaignsConf)}\n        className={`icn-btn sh-sm ml-2 ${!isNotRequired && 'mr-8'}`}\n        type=\"button\"\n      >\n        +\n      </button>\n      {\n        isNotRequired && (\n          <button onClick={() => delFieldMap(i)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n            <TrashIcn />\n          </button>\n        )\n      }\n    </div>\n  )\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { refreshContactFields, refreshLists } from './ZohoCampaignsCommonFunc'\nimport ZohoCampaignsFieldMap, { addFieldMap } from './ZohoCampaignsFieldMap'\n\nexport default function ZohoCampaignsIntegLayout({ formID, formFields, handleInput, campaignsConf, setCampaignsConf, isLoading, setIsLoading, setSnackbar }) {\n  return (\n    <>\n      <br />\n      <b className=\"wdt-100 d-in-b\">{__('List:', 'bit-integrations')}</b>\n      <select onChange={event => handleInput(event)} name=\"list\" value={campaignsConf.list} className=\"btcd-paper-inp w-7\">\n        <option value=\"\">{__('Select List', 'bit-integrations')}</option>\n        {\n          campaignsConf?.default?.lists && Object.values(campaignsConf.default.lists).map(listApiName => (\n            <option key={listApiName.listkey} value={listApiName.listkey}>\n              {listApiName.listname}\n            </option>\n          ))\n        }\n      </select>\n      <button onClick={() => refreshLists(formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Campaigns Lists', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n      <br />\n      <br />\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n\n      {campaignsConf.list && (\n        <>\n          <div className=\"mt-4\">\n            <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n            <button onClick={() => refreshContactFields(formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Campaigns Contact Fields', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </div>\n          <div className=\"btcd-hr mt-1\" />\n          {campaignsConf.default?.fields?.[campaignsConf.list]\n            && (\n              <>\n                <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n                  <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n                  <div className=\"txt-dp\"><b>{__('Zoho Fields', 'bit-integrations')}</b></div>\n                </div>\n\n                {campaignsConf.field_map.map((itm, i) => (\n                  <ZohoCampaignsFieldMap\n                    key={`campaigns-m-${i + 9}`}\n                    i={i}\n                    field={itm}\n                    campaignsConf={campaignsConf}\n                    formFields={formFields}\n                    setCampaignsConf={setCampaignsConf}\n                  />\n                ))}\n                <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(campaignsConf.field_map.length, campaignsConf, setCampaignsConf)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n              </>\n            )}\n        </>\n      )}\n    </>\n  )\n}\n"],"names":["addFieldMap","indx","campaignsConf","setCampaignsConf","newConf","__spreadValues","ZohoCampaignsFieldMap","formFields","field","btcbi","useRecoilValue","$btcbi","isPro","isNotRequired","_a","delFieldMap","handleFieldMapping","event","jsxs","ev","jsx","__","f","_b","SmartTagField","TagifyInput","e","handleCustomValue","_e","_d","_c","contactField","TrashIcn","ZohoCampaignsIntegLayout","formID","handleInput","isLoading","setIsLoading","setSnackbar","Fragment","listApiName","refreshLists","Loader","refreshContactFields","itm","i"],"mappings":"6mBASO,MAAMA,EAAc,CAACC,EAAMC,EAAeC,IAAqB,CAC9D,MAAAC,EAAUC,EAAA,GAAKH,GACrBE,EAAQ,UAAU,OAAOH,EAAM,EAAG,CAAE,CAAA,EACpCE,EAAiBC,CAAO,CAC1B,EAEA,SAAwBE,EAAsB,CAAE,EAAG,WAAAC,EAAY,MAAAC,EAAO,cAAAN,EAAe,iBAAAC,GAAoB,eACjG,MAAAM,EAAQC,EAAeC,CAAM,EAC7B,CAAE,MAAAC,CAAU,EAAAH,EAEZI,EAAgBL,EAAM,gBAAkB,MAAMM,EAAAZ,EAAc,QAAQ,OAAOA,EAAc,IAAI,EAAE,WAAjD,YAAAY,EAA2D,QAAQN,EAAM,kBAAmB,GAC1IO,EAAed,GAAS,CACtB,MAAAG,EAAUC,EAAA,GAAKH,GACjBE,EAAQ,UAAU,OAAS,GACrBA,EAAA,UAAU,OAAOH,EAAM,CAAC,EAGlCE,EAAiBC,CAAO,CAAA,EAGpBY,EAAqB,CAACC,EAAOhB,IAAS,CACpC,MAAAG,EAAUC,EAAA,GAAKH,GACbE,EAAA,UAAUH,CAAI,EAAEgB,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAEtDA,EAAM,OAAO,QAAU,WACjBb,EAAA,UAAUH,CAAI,EAAE,YAAc,IAGxCE,EAAiBC,CAAO,CAAA,EAIxB,OAAAc,EAAA,KAAC,MAAA,CACC,UAAW,uBAAuBL,GAAiB,MAAM,GAEzD,SAAA,CAAAK,EAAA,KAAC,UAAO,UAAU,sBAAsB,KAAK,YAAY,MAAOV,EAAM,WAAa,GAAI,SAAWW,GAAOH,EAAmBG,EAAI,CAAkC,EAChK,SAAA,CAAAC,MAAC,UAAO,MAAM,GAAI,SAAGC,EAAA,eAAgB,kBAAkB,EAAE,EACzDD,EAAAA,IAAC,YAAS,MAAM,cAEZ,WAAW,IAAIE,GAAKA,EAAE,OAAS,QAAUF,EAAA,IAAC,UAAkC,MAAOE,EAAE,KAAO,SAAEA,EAAA,OAAxC,YAAYA,EAAE,IAAI,EAA4B,CAAS,CAEjH,CAAA,QACC,SAAO,CAAA,MAAM,SAAU,SAAGD,EAAA,YAAa,kBAAkB,EAAE,EAC5DD,EAAAA,IAAC,WAAS,CAAA,MAAO,uBAAuBR,EAAQ,GAAK,OAAO,GACzD,SAASA,KAAAW,EAAAC,IAAA,YAAAD,EAAe,IAAID,SAC1B,SAA+B,CAAA,MAAOA,EAAE,KACtC,SAAEA,EAAA,KAAA,EADQ,SAASA,EAAE,IAAI,EAE5B,GAEJ,CAAA,CAAA,EACF,EAECd,EAAM,YAAc,UAAYY,EAAA,IAACK,EAAY,CAAA,SAAeC,GAAAC,EAAkBD,EAAG,EAAGxB,EAAeC,CAAgB,EAAG,MAAOkB,EAAG,eAAgB,kBAAkB,EAAG,UAAU,OAAO,KAAK,OAAO,MAAOb,EAAM,YAAa,YAAaa,EAAG,eAAgB,kBAAkB,EAAG,WAAAd,EAAwB,EAE1SW,OAAC,UAAO,UAAU,iBAAiB,KAAK,gBAAgB,MAAOV,EAAM,eAAiB,GAAI,SAAU,CAACK,EAAe,SAAWM,GAAOH,EAAmBG,EAAI,CAAkC,EAC7L,SAAA,CAAAC,MAAC,UAAO,MAAM,GAAI,SAAGC,EAAA,eAAgB,kBAAkB,EAAE,EAEvDR,IACIe,GAAAC,GAAAC,EAAA5B,GAAA,YAAAA,EAAe,UAAf,YAAA4B,EAAwB,SAAxB,YAAAD,EAAiC3B,EAAc,QAA/C,YAAA0B,EAAsD,SAAU1B,EAAc,QAAQ,OAAOA,EAAc,IAAI,EAAE,OAAO,IAAoB6B,GAAAA,IAAiB,iBAE3JX,MAAC,UAAiC,MAAOW,EACtC,SADUA,CAAA,EAAA,GAAGA,CAAY,IAE5B,CACD,EAEDX,EAAAA,IAAC,UAA2B,MAAM,gBAC/B,WAAG,gBAAiB,kBAAkB,GAD7B,eAEZ,CAAA,EAGR,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMpB,EAAY,EAAGE,EAAeC,CAAgB,EAC7D,UAAW,sBAAsB,CAACU,GAAiB,MAAM,GACzD,KAAK,SACN,SAAA,GAAA,CAED,EAEEA,GACGO,EAAAA,IAAA,SAAA,CAAO,QAAS,IAAML,EAAY,CAAC,EAAG,UAAU,qBAAqB,KAAK,SAAS,aAAW,MAC7F,SAAAK,EAAAA,IAACY,GAAS,CAAA,EACZ,CAAA,CAAA,CAAA,CAKV,CC3FwB,SAAAC,EAAyB,CAAE,OAAAC,EAAQ,WAAA3B,EAAY,YAAA4B,EAAa,cAAAjC,EAAe,iBAAAC,EAAkB,UAAAiC,EAAW,aAAAC,EAAc,YAAAC,GAAe,WAC3J,OAEIpB,EAAA,KAAAqB,WAAA,CAAA,SAAA,CAAAnB,EAAA,IAAC,KAAG,EAAA,QACH,IAAE,CAAA,UAAU,iBAAkB,SAAGC,EAAA,QAAS,kBAAkB,EAAE,EAC9DH,EAAA,KAAA,SAAA,CAAO,SAAUD,GAASkB,EAAYlB,CAAK,EAAG,KAAK,OAAO,MAAOf,EAAc,KAAM,UAAU,qBAC9F,SAAA,CAAAkB,MAAC,UAAO,MAAM,GAAI,SAAGC,EAAA,cAAe,kBAAkB,EAAE,IAEtDP,EAAAZ,GAAA,YAAAA,EAAe,UAAf,YAAAY,EAAwB,QAAS,OAAO,OAAOZ,EAAc,QAAQ,KAAK,EAAE,OACzEkB,MAAA,SAAA,CAAiC,MAAOoB,EAAY,QAClD,WAAY,QADF,EAAAA,EAAY,OAEzB,CACD,CAAA,EAEL,EACApB,EAAAA,IAAC,SAAO,CAAA,QAAS,IAAMqB,EAAaP,EAAQhC,EAAeC,EAAkBkC,EAAcC,CAAW,EAAG,UAAU,kCAAkC,MAAO,CAAE,gBAAiB,IAAIjB,EAAG,0BAA2B,kBAAkB,CAAC,GAAI,EAAG,KAAK,SAAS,SAAUe,EAAW,SAAQ,GAAA,CAAA,QACrR,KAAG,EAAA,QACH,KAAG,EAAA,EACHA,GACChB,EAAA,IAACsB,EAAA,CAAO,MAAO,CACb,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,IACR,UAAW,YACb,CAAA,CACA,EAGDxC,EAAc,MAEXgB,EAAAA,KAAAqB,EAAA,SAAA,CAAA,SAAA,CAACrB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAE,MAAC,KAAE,UAAU,UAAW,SAAGC,EAAA,aAAc,kBAAkB,EAAE,EAC7DD,EAAAA,IAAC,SAAO,CAAA,QAAS,IAAMuB,EAAqBT,EAAQhC,EAAeC,EAAkBkC,EAAcC,CAAW,EAAG,UAAU,kCAAkC,MAAO,CAAE,gBAAiB,IAAIjB,EAAG,mCAAoC,kBAAkB,CAAC,GAAI,EAAG,KAAK,SAAS,SAAUe,EAAW,SAAQ,GAAA,CAAA,CAAA,EACzS,EACAhB,EAAAA,IAAC,MAAI,CAAA,UAAU,cAAe,CAAA,IAC7BU,GAAAP,EAAArB,EAAc,UAAd,YAAAqB,EAAuB,SAAvB,YAAAO,EAAgC5B,EAAc,QAGzCgB,EAAA,KAAAqB,WAAA,CAAA,SAAA,CAACrB,EAAAA,KAAA,MAAA,CAAI,UAAU,iDACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAAAA,EAAA,IAAC,KAAG,SAAGC,EAAA,cAAe,kBAAkB,CAAA,CAAE,CAAI,CAAA,EACtED,EAAAA,IAAC,MAAI,CAAA,UAAU,SAAS,SAAAA,EAAA,IAAC,KAAG,SAAGC,EAAA,cAAe,kBAAkB,CAAA,CAAE,CAAI,CAAA,CAAA,EACxE,EAECnB,EAAc,UAAU,IAAI,CAAC0C,EAAKC,IACjCzB,EAAA,IAACd,EAAA,CAEC,EAAAuC,EACA,MAAOD,EACP,cAAA1C,EACA,WAAAK,EACA,iBAAAJ,CAAA,EALK,eAAe0C,EAAI,CAAC,EAAA,CAO5B,EACDzB,EAAAA,IAAC,OAAI,UAAU,yCAAyC,eAAC,SAAO,CAAA,QAAS,IAAMpB,EAAYE,EAAc,UAAU,OAAQA,EAAeC,CAAgB,EAAG,UAAU,gBAAgB,KAAK,SAAS,aAAC,CAAS,CAAA,CAAA,EACjN,CAAA,EAEN,CAEJ,CAAA,CAAA,CAEJ"}