{"version":3,"file":"bi.212.695.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoBigin/ZohoBiginCommonFunc.js"],"sourcesContent":["import { __, sprintf } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, recordTab, biginConf, setBiginConf, formID, setIsLoading, setSnackbar, isNew, error, setError) => {\n  let newConf = { ...biginConf }\n\n  if (recordTab === 0) {\n    if (isNew) {\n      const rmError = { ...error }\n      rmError[e.target.name] = ''\n      setError({ ...rmError })\n    }\n    newConf[e.target.name] = e.target.value\n  } else {\n    newConf.relatedlists[recordTab - 1][e.target.name] = e.target.value\n  }\n\n  switch (e.target.name) {\n    case 'module':\n      newConf = moduleChange(recordTab, newConf, formID, setBiginConf, setIsLoading, setSnackbar)\n      break\n    default:\n      break\n  }\n  setBiginConf({ ...newConf })\n}\n\nexport const handleTabChange = (recordTab, settab, biginConf, setBiginConf, formID, setIsLoading, setSnackbar) => {\n  if (recordTab) {\n    !biginConf?.default?.relatedlists?.[biginConf.module] && refreshRelatedList(formID, biginConf, setBiginConf, setIsLoading, setSnackbar)\n  }\n\n  settab(recordTab)\n}\n\nexport const moduleChange = (recordTab, biginConf, formID, setBiginConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...biginConf }\n  const module = recordTab === 0 ? newConf.module : newConf.relatedlists[recordTab - 1].module\n\n  if (recordTab === 0) {\n    newConf.actions = {}\n    newConf.field_map = [{ formField: '', zohoFormField: '' }]\n    newConf.upload_field_map = [{ formField: '', zohoFormField: '' }]\n\n    if (recordTab) newConf.relatedlists[recordTab - 1] = {}\n  } else {\n    newConf.relatedlists[recordTab - 1].field_map = [{ formField: '', zohoFormField: '' }]\n    newConf.relatedlists[recordTab - 1].upload_field_map = [{ formField: '', zohoFormField: '' }]\n    newConf.relatedlists[recordTab - 1].actions = {}\n  }\n\n  if (!newConf.default?.moduleData?.[module]) {\n    getFields(recordTab, formID, newConf, setBiginConf, setIsLoading, setSnackbar)\n  } else if (recordTab === 0) {\n    newConf.field_map = generateMappedField(recordTab, newConf)\n    if (Object.keys(newConf.default.moduleData[module].fileUploadFields).length > 0) {\n      newConf.upload_field_map = generateMappedField(recordTab, newConf, true)\n    }\n  } else {\n    newConf.relatedlists[recordTab - 1].field_map = generateMappedField(recordTab, newConf)\n    if (Object.keys(newConf.default.moduleData[module].fileUploadFields).length > 0) {\n      newConf.relatedlists[recordTab - 1].upload_field_map = generateMappedField(recordTab, newConf, true)\n    }\n  }\n\n  return newConf\n}\n\nexport const refreshModules = (formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshModulesRequestParams = {\n    formID,\n    id: biginConf.id,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(refreshModulesRequestParams, 'zbigin_refresh_modules')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.modules) {\n          newConf.default.modules = result.data.modules\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Modules refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Modules refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Modules refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshPipelinesLayout = (formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshLayoutRequestParams = {\n    formID,\n    id: biginConf.id,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(refreshLayoutRequestParams, 'zbigin_refresh_playouts')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.pLayouts) {\n          newConf.default.pLayouts = result.data.pLayouts\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Pipeline Layouts refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Pipeline Layouts refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Pipeline Layouts refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshRelatedList = (formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  if (!biginConf.module) {\n    return\n  }\n  setIsLoading(true)\n  const relatedListRequestParams = {\n    formID,\n    module: biginConf.module,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(relatedListRequestParams, 'zbigin_refresh_related_lists')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (result.data.related_modules) {\n          if (!newConf.default.relatedlists) {\n            newConf.default.relatedlists = {}\n          }\n          newConf.default.relatedlists[newConf.module] = result.data.related_modules\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('RelatedLists refreshed', 'bit-integrations') })\n      } else if ((result?.data?.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('RelatedLists refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('RelatedLists refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const getFields = (recordTab, formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  const module = recordTab === 0 ? biginConf.module : biginConf.relatedlists[recordTab - 1].module\n  if (!module) {\n    return\n  }\n\n  setIsLoading(true)\n  const getFieldsRequestParams = {\n    formID,\n    module,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(getFieldsRequestParams, 'zbigin_refresh_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (result.data.fieldDetails) {\n          if (!newConf.default.moduleData) {\n            newConf.default.moduleData = {}\n          }\n          newConf.default.moduleData[module] = result.data.fieldDetails\n          if (recordTab === 0) {\n            newConf.field_map = generateMappedField(recordTab, newConf)\n            if (Object.keys(newConf.default.moduleData[module].fileUploadFields).length > 0) {\n              newConf.upload_field_map = generateMappedField(recordTab, newConf, true)\n            }\n          } else {\n            newConf.relatedlists[recordTab - 1].field_map = generateMappedField(recordTab, newConf)\n            if (Object.keys(newConf.default.moduleData[module].fileUploadFields).length > 0) {\n              newConf.relatedlists[recordTab - 1].upload_field_map = generateMappedField(recordTab, newConf, true)\n            }\n          }\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshTags = (recordTab, formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  const module = recordTab === 0 ? biginConf.module : biginConf.relatedlists[recordTab - 1].module\n  if (!module) {\n    return\n  }\n\n  setIsLoading(true)\n  const getTagsRequestParams = {\n    formID,\n    module,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(getTagsRequestParams, 'zbigin_refresh_tags')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (result.data.tags) {\n          if (!newConf.default.moduleData) {\n            newConf.default.moduleData = {}\n          }\n          newConf.default.moduleData[module].tags = result.data.tags\n          setSnackbar({ show: true, msg: __('Tags Refreshed', 'bit-integrations') })\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Tags refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshUsers = (formID, biginConf, setBiginConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const getUsersRequestParams = {\n    formID,\n    dataCenter: biginConf.dataCenter,\n    clientId: biginConf.clientId,\n    clientSecret: biginConf.clientSecret,\n    tokenDetails: biginConf.tokenDetails,\n  }\n  bitsFetch(getUsersRequestParams, 'zbigin_refresh_users')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...biginConf }\n        if (result.data.users) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.users = result.data.users\n          setSnackbar({ show: true, msg: __('Users Refreshed', 'bit-integrations') })\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setBiginConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Users refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const generateMappedField = (recordTab, biginConf, uploadFields) => {\n  const module = recordTab === 0 ? biginConf.module : biginConf.relatedlists[recordTab - 1].module\n  if (uploadFields) {\n    return biginConf.default.moduleData[module].requiredFileUploadFields.length > 0 ? biginConf.default.moduleData[module].requiredFileUploadFields?.map(field => ({ formField: '', zohoFormField: field })) : [{ formField: '', zohoFormField: '' }]\n  }\n  return biginConf.default.moduleData[module].required.length > 0 ? biginConf.default.moduleData[module].required?.map(field => ({ formField: '', zohoFormField: field })) : [{ formField: '', zohoFormField: '' }]\n}\n\nexport const checkMappedFields = (biginConf) => {\n  const mappedFields = biginConf?.field_map ? biginConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.zohoFormField && biginConf?.default?.moduleData?.[biginConf.module]?.required.indexOf(mappedField.zohoFormField) !== -1)) : []\n  const mappedRelatedFields = biginConf.relatedlists.map(relatedlist => relatedlist.field_map.filter(mappedField => !mappedField.formField && mappedField.zohoFormField))\n\n  if (mappedFields.length > 0 || mappedRelatedFields.find(relatedField => relatedField.length)) {\n    return false\n  }\n\n  return true\n}\n\n"],"names":["handleInput","e","recordTab","biginConf","setBiginConf","formID","setIsLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","rmError","moduleChange","handleTabChange","settab","_b","_a","refreshRelatedList","module","generateMappedField","getFields","refreshModules","refreshModulesRequestParams","bitsFetch","result","__","sprintf","refreshPipelinesLayout","refreshLayoutRequestParams","relatedListRequestParams","getFieldsRequestParams","refreshTags","getTagsRequestParams","refreshUsers","getUsersRequestParams","uploadFields","field","checkMappedFields","mappedFields","mappedField","_c","mappedRelatedFields","relatedlist","relatedField"],"mappings":"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"}