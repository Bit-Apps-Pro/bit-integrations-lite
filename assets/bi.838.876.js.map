{"version":3,"file":"bi.838.876.js","sources":["../frontend-dev/src/components/AllIntegrations/CopperCRM/CopperCRMActions.jsx","../frontend-dev/src/components/AllIntegrations/CopperCRM/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/CopperCRM/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/CopperCRM/CopperCRMFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/CopperCRM/CopperCRMIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllOpportunities, getAllOwners, getAllCompanies, getAllPipelineStages } from './CopperCRMCommonFunc'\n\nexport default function CopperCRMActions({ coppercrmConf, setCopperCRMConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const opportunityTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...coppercrmConf }\n\n    if (type === 'opportunity') {\n      if (e.target?.checked) {\n        getAllOpportunities(coppercrmConf, setCopperCRMConf, setLoading)\n        newConf.actions.opportunity = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.opportunity\n      }\n    } else if (type === 'owner') {\n      if (e.target?.checked) {\n        getAllOwners(coppercrmConf, setCopperCRMConf, setLoading)\n        newConf.actions.owner = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.owner\n      }\n    } else if (type === 'company') {\n      if (e.target?.checked) {\n        getAllCompanies(coppercrmConf, setCopperCRMConf, setLoading)\n        newConf.actions.company = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.company\n      }\n    } else if (type === 'pipelineStage') {\n      if (e.target?.checked) {\n        getAllPipelineStages(coppercrmConf, setCopperCRMConf, setLoading)\n        newConf.actions.pipelineStage = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.pipelineStage\n      }\n    } else if (type === 'followUp') {\n      if (e.target?.checked) {\n        newConf.actions.followUp = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.followUp\n      }\n    } else if (type === 'opportunityType') {\n      if (e.target?.checked) {\n        newConf.actions.opportunityType = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.opportunityType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setCopperCRMConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...coppercrmConf }\n    newConf[name] = val\n    setCopperCRMConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {/* {(coppercrmConf.actionName === 'person') && <TableCheckBox checked={coppercrmConf?.selectedCompany?.length || false} onChange={(e) => actionHandler(e, 'company')} className=\"wdt-200 mt-4 mr-2\" value=\"company\" title={__('Add Company', 'bit - integrations')} subTitle={__('Add an company')} />} */}\n      {(coppercrmConf.actionName === 'person' || coppercrmConf.actionName === 'company' || coppercrmConf.actionName === 'opportunity' || coppercrmConf.actionName === 'task') && <TableCheckBox checked={coppercrmConf?.selectedOwner?.length || false} onChange={(e) => actionHandler(e, 'owner')} className=\"wdt-200 mt-4 mr-2\" value=\"owner\" title={__('Add Owner', 'bit - integrations')} subTitle={__('Add an owner')} />}\n      {(coppercrmConf.actionName === 'opportunity') && <TableCheckBox checked={coppercrmConf?.selectedCompany?.length || false} onChange={(e) => actionHandler(e, 'company')} className=\"wdt-200 mt-4 mr-2\" value=\"company\" title={__('Add Company', 'bit - integrations')} subTitle={__('Add an company')} />}\n      {(coppercrmConf.actionName === 'opportunity') && <TableCheckBox checked={coppercrmConf?.selectedPipelineStage?.length || false} onChange={(e) => actionHandler(e, 'pipelineStage')} className=\"wdt-200 mt-4 mr-2\" value=\"pipelineStage\" title={__('Add PipelineStage', 'bit - integrations')} subTitle={__('Add a pipelineStage')} />}\n      {/* {(coppercrmConf.actionName === 'task') && <TableCheckBox checked={coppercrmConf?.selectedOpportunity?.length || false} onChange={(e) => actionHandler(e, 'opportunity')} className=\"wdt-200 mt-4 mr-2\" value=\"opportunity\" title={__('Add Opportunity', 'bit - integrations')} subTitle={__('Add a opportunity')} />} */}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'opportunity'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Opportunities', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Opportunity', 'bit-integrations')}\n        </div>\n        {\n          loading.opportunities ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={coppercrmConf?.opportunities?.map(opportunity => ({ label: opportunity.name, value: opportunity.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={coppercrmConf?.selectedOpportunity}\n                  onChange={val => setChanges(val, 'selectedOpportunity')}\n                  singleSelect\n                />\n                <button onClick={() => getAllOpportunities(coppercrmConf, setCopperCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Opportunities', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'owner'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Owners', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Owner', 'bit-integrations')}\n        </div>\n        {\n          loading.owners ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={coppercrmConf?.owners?.map(owner => ({ label: owner.name, value: owner.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={coppercrmConf?.selectedOwner}\n                  onChange={val => setChanges(val, 'selectedOwner')}\n                  singleSelect\n                />\n                <button onClick={() => getAllOwners(coppercrmConf, setCopperCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Owners', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'company'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Companies', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Company', 'bit-integrations')}\n        </div>\n        {\n          loading.companies ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={coppercrmConf?.companies?.map(company => ({ label: company.name, value: company.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={coppercrmConf?.selectedCompany}\n                  onChange={val => setChanges(val, 'selectedCompany')}\n                  singleSelect\n                />\n                <button onClick={() => getAllCompanies(coppercrmConf, setCopperCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Companies', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'pipelineStage'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('PipelineStages', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select PipelineStage', 'bit-integrations')}\n        </div>\n        {\n          loading.pipelineStages ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={coppercrmConf?.pipelineStages?.map(pipelineStage => ({ label: pipelineStage.name, value: pipelineStage.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={coppercrmConf?.selectedPipelineStage}\n                  onChange={val => setChanges(val, 'selectedPipelineStage')}\n                  singleSelect\n                />\n                <button onClick={() => getAllPipelineStages(coppercrmConf, setCopperCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh PipelineStages', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      {/* <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'status'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Statuses', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Status', 'bit-integrations')}\n        </div>\n        {\n          loading.statuses ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={coppercrmConf?.statuses?.map(status => ({ label: status.name, value: status.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={coppercrmConf?.selectedStatus}\n                  onChange={val => setChanges(val, 'selectedStatus')}\n                  singleSelect\n                />\n                <button onClick={() => getAllStatuses(coppercrmConf, setCopperCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh statuses', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal> */}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'followUp'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Follow Up', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={followUps?.map(followUp => ({ label: followUp.label, value: followUp.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={coppercrmConf?.selectedFollowUp}\n            onChange={val => setChanges(val, 'selectedFollowUp')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'opportunityType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Opportunity types', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={opportunityTypes?.map(opportunityType => ({ label: opportunityType.label, value: opportunityType.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={coppercrmConf?.selectedOpportunityType}\n            onChange={val => setChanges(val, 'selectedOpportunityType')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './CopperCRMCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function CopperCRMFieldMap({ i, formFields, field, coppercrmConf, setCopperCRMConf }) {\n  let allFields = []\n  let newFields = []\n  if (coppercrmConf.actionName === 'company') {\n    allFields = coppercrmConf?.companyFields\n  } else if (coppercrmConf.actionName === 'person') {\n    allFields = coppercrmConf?.personFields\n  } else if (coppercrmConf.actionName === 'opportunity') {\n    allFields = coppercrmConf?.opportunityFields\n  } else if (coppercrmConf.actionName === 'task') {\n    allFields = coppercrmConf?.taskFields\n  }\n  // newFields = [...allFields, ...coppercrmConf?.customFields]\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const nonRequiredFields = allFields.filter(fld => fld.required === false) || []\n  const allNonRequiredFields = coppercrmConf.customFields ? [...nonRequiredFields, ...coppercrmConf?.customFields] : nonRequiredFields\n\n  if (coppercrmConf?.field_map?.length === 1 && field.coppercrmFormField === '') {\n    const newConf = { ...coppercrmConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setCopperCRMConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, coppercrmConf, setCopperCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={coppercrmConf}\n              setConf={setCopperCRMConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"coppercrmFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.coppercrmFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, coppercrmConf, setCopperCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n            {(coppercrmConf.actionName === 'company' || coppercrmConf.actionName === 'person' || coppercrmConf.actionName === 'opportunity' || coppercrmConf.actionName === 'task')\n              && <option value=\"customFieldKey\">{__('Custom Field', 'bit-integrations')}</option>}\n          </select>\n          {field.coppercrmFormField === 'customFieldKey'\n            && (\n              <CustomField\n                field={field}\n                index={i}\n                conf={coppercrmConf}\n                setConf={setCopperCRMConf}\n                fieldValue=\"customFieldKey\"\n                fieldLabel=\"Custom Field Key\"\n                className=\"ml-2\"\n              />\n            )}\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, coppercrmConf, setCopperCRMConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, coppercrmConf, setCopperCRMConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport CopperCRMActions from './CopperCRMActions'\nimport { getAllCRMPeoples, getAllCRMPipelines, getCustomFields } from './CopperCRMCommonFunc'\nimport CopperCRMFieldMap from './CopperCRMFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function CopperCRMIntegLayout({ formFields, handleInput, coppercrmConf, setCopperCRMConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...coppercrmConf }\n    newConf.field_map = [\n      { formField: '', coppercrmFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      getCustomFields(newConf, setCopperCRMConf, setLoading)\n      if (e.target.value === 'opportunity') {\n        getAllCRMPeoples(newConf, setCopperCRMConf, setLoading)\n      }\n    } else {\n      delete newConf[name]\n    }\n    setCopperCRMConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...coppercrmConf }\n    newConf[name] = val\n    if (name === 'selectedCRMPeople' && val !== '' && coppercrmConf.actionName === 'opportunity') {\n      newConf.selectedCRMPipelines = ''\n      getAllCRMPipelines(newConf, setCopperCRMConf, setLoading)\n    }\n    setCopperCRMConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={coppercrmConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"company\">{__('Create Company', 'bit-integrations')}</option>\n        <option value=\"person\">{__('Create Person', 'bit-integrations')}</option>\n        <option value=\"opportunity\">{__('Create Opportunity', 'bit-integrations')}</option>\n        <option value=\"task\">{__('Create Task', 'bit-integrations')}</option>\n      </select>\n      {(loading.CRMPeoples || loading.CRMPipelines) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {(coppercrmConf.actionName === 'opportunity')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select People:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={coppercrmConf?.CRMPeoples?.map(CRMPeople => ({ label: CRMPeople.name, value: CRMPeople.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={coppercrmConf?.selectedCRMPeople}\n                onChange={val => setChanges(val, 'selectedCRMPeople')}\n                disabled={loading.CRMPeoples}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPeoples(coppercrmConf, setCopperCRMConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh peoples', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPeoples}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((coppercrmConf.actionName === 'opportunity') && coppercrmConf.selectedCRMPeople)\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Pipeline:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={coppercrmConf?.CRMPipelines?.map(CRMPipeline => ({ label: CRMPipeline.name, value: CRMPipeline.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={coppercrmConf?.selectedCRMPipelines}\n                onChange={val => setChanges(val, 'selectedCRMPipelines')}\n                disabled={loading.CRMPipelines}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPipelines(coppercrmConf, setCopperCRMConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh Pipelines', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPipelines}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {coppercrmConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              onClick={() => getCustomFields(coppercrmConf, setCopperCRMConf, setLoading)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={loading.CRMPipelines}\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('CopperCRM Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {coppercrmConf?.field_map.map((itm, i) => (\n            <CopperCRMFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              coppercrmConf={coppercrmConf}\n              formFields={formFields}\n              setCopperCRMConf={setCopperCRMConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(coppercrmConf.field_map.length, coppercrmConf, setCopperCRMConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <CopperCRMActions\n            coppercrmConf={coppercrmConf}\n            setCopperCRMConf={setCopperCRMConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["CopperCRMActions","coppercrmConf","setCopperCRMConf","loading","setLoading","actionMdl","setActionMdl","useState","followUps","opportunityTypes","actionHandler","e","type","newConf","__spreadValues","_a","getAllOpportunities","_b","getAllOwners","_c","getAllCompanies","_d","getAllPipelineStages","_e","_f","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","opportunity","owner","company","_g","pipelineStage","followUp","opportunityType","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","CopperCRMFieldMap","formFields","allFields","requiredFields","fld","nonRequiredFields","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","CopperCRMIntegLayout","handleInput","setSnackbar","handleActionInput","getCustomFields","getAllCRMPeoples","getAllCRMPipelines","CRMPeople","CRMPipeline","itm"],"mappings":"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"}