{"version":3,"file":"bi.160.727.js","sources":["../frontend-dev/src/components/AllIntegrations/ActiveCampaign/ActiveCampaignCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from '@wordpress/i18n'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, activeCampaingConf, setActiveCampaingConf) => {\n  const newConf = { ...activeCampaingConf }\n  newConf.name = e.target.value\n  setActiveCampaingConf({ ...newConf })\n}\n\nexport const refreshActiveCampaingList = (\n  activeCampaingConf,\n  setActiveCampaingConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshListsRequestParams = {\n    api_key: activeCampaingConf.api_key,\n    api_url: activeCampaingConf.api_url,\n  }\n  bitsFetch(refreshListsRequestParams, 'aCampaign_lists')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...activeCampaingConf }\n        if (result.data.activeCampaignLists) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.activeCampaignLists = result.data.activeCampaignLists\n          setSnackbar({\n            show: true,\n            msg: __('ActiveCampaign lists refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ActiveCampaign lists found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setActiveCampaingConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ActiveCampaign lists refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n// refreshActiveCampaingTags\nexport const refreshActiveCampaingTags = (\n  activeCampaingConf,\n  setActiveCampaingConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshListsRequestParams = {\n    api_key: activeCampaingConf.api_key,\n    api_url: activeCampaingConf.api_url,\n  }\n  bitsFetch(refreshListsRequestParams, 'aCampaign_tags')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...activeCampaingConf }\n        if (result.data.activeCampaignTags) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.activeCampaignTags = result.data.activeCampaignTags\n          setSnackbar({\n            show: true,\n            msg: __('ActiveCampaign tags refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ActiveCampaign tags found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setActiveCampaingConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ActiveCampaign tags refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\nexport const refreshActiveCampaingHeader = (\n  activeCampaingConf,\n  setActiveCampaingConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshListsRequestParams = {\n    api_key: activeCampaingConf.api_key,\n    api_url: activeCampaingConf.api_url,\n  }\n  bitsFetch(refreshListsRequestParams, 'aCampaign_headers')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...activeCampaingConf }\n        if (result.data.activeCampaignField) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.fields = result.data.activeCampaignField\n          const { fields } = newConf.default\n          newConf.field_map = Object.values(fields)\n            .filter((f) => f.required)\n            .map((f) => ({\n              formField: '',\n              activeCampaignField: f.fieldId,\n              required: true,\n            }))\n          setSnackbar({\n            show: true,\n            msg: __('ActiveCampaign fields refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ActiveCampaign fields found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setActiveCampaingConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ActiveCampaign fields refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = (activeCampaingConf) => {\n  const mappedFields = activeCampaingConf?.field_map\n    ? activeCampaingConf.field_map.filter(\n      (mappedField) => !mappedField.formField\n          && mappedField.activeCampaignField\n          && mappedField.required,\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","activeCampaingConf","setActiveCampaingConf","newConf","__spreadValues","refreshActiveCampaingList","setIsLoading","setSnackbar","refreshListsRequestParams","result","refreshActiveCampaingTags","refreshActiveCampaingHeader","fields","f","checkMappedFields","mappedField"],"mappings":"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"}