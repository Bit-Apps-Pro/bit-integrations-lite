{"version":3,"file":"bi.65.906.js","sources":["../frontend-dev/src/components/AllIntegrations/OneHashCRM/IntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/OneHashCRM/OneHashCRMActions.jsx","../frontend-dev/src/components/AllIntegrations/OneHashCRM/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/OneHashCRM/OneHashCRMFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/OneHashCRM/OneHashCRMIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\n\nexport default function OneHashCRMActions({ oneHashCRMConf, setOneHashCRMConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...oneHashCRMConf }\n    if (type === 'organizationLead') {\n      if (e.target?.checked) {\n        newConf.actions.organizationLead = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.organizationLead\n      }\n    } else if (type === 'leadSource') {\n      if (e.target?.checked) {\n        newConf.actions.leadSource = true\n        newConf.leadSources = ['Advertisement', 'Campaign', 'Cold Calling', \"Customer's Vendor\", 'Exhibition', 'Existing Cutomer', 'Mass Mailing', 'Reference', 'Supplier Reference', 'Walk In']\n      } else {\n        delete newConf.actions.leadSource\n      }\n    } else if (type === 'LeadAddressType') {\n      if (e.target?.checked) {\n        newConf.actions.LeadAddressType = true\n        newConf.LeadAddressTypes = ['Billing', 'Shipping', 'Office', \"Personal\", 'Plant', 'Postal', 'Shop', 'SubsiDiary', 'Warehouse', 'Current', 'Permanent', 'Other']\n      } else {\n        delete newConf.actions.LeadAddressType\n      }\n    } else if (type === 'LeadType') {\n      if (e.target?.checked) {\n        newConf.actions.LeadType = true\n        newConf.LeadTypes = ['Client', 'Channel Partner', 'Consultant']\n      } else {\n        delete newConf.actions.LeadType\n      }\n    } else if (type === 'RequestType') {\n      if (e.target?.checked) {\n        newConf.actions.RequestType = true\n        newConf.RequestTypes = ['Product Enquiry', 'Request For Information', 'Suggestions', 'Other']\n      } else {\n        delete newConf.actions.RequestType\n      }\n    } else if (type === 'MarketSegment') {\n      if (e.target?.checked) {\n        newConf.actions.MarketSegment = true\n        newConf.MarketSegments = ['Lower Income', 'Middle Income', 'Upper Income']\n      } else {\n        delete newConf.actions.MarketSegment\n      }\n    } else if (type === 'ContactStatus') {\n      if (e.target?.checked) {\n        newConf.actions.ContactStatus = true\n        newConf.ContactStatus = ['Passive', 'Open', 'Replied']\n      } else {\n        delete newConf.actions.ContactStatus\n      }\n    }\n\n    setActionMdl({ show: type })\n    setOneHashCRMConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...oneHashCRMConf }\n    newConf[name] = val\n    setOneHashCRMConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf.actions?.organizationLead || false} onChange={(e) => actionHandler(e, 'organizationLead')} className=\"wdt-200 mt-4 mr-2\" value=\"organizationLead\" title={__('Lead is an Organization', 'bit-integrations')} subTitle={__('Lead is an Organization', 'bit-integrations')} />}\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf?.selectedLeadSource || false} onChange={(e) => actionHandler(e, 'leadSource')} className=\"wdt-200 mt-4 mr-2\" value=\"leadSource\" title={__('Add Source', 'bit - integrations')} subTitle={__('Add Source')} />}\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf?.selectedLeadAddressType || false} onChange={(e) => actionHandler(e, 'LeadAddressType')} className=\"wdt-200 mt-4 mr-2\" value=\"LeadAddressType\" title={__('Add Address Type', 'bit - integrations')} subTitle={__('Add Address Type')} />}\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf?.selectedLeadType || false} onChange={(e) => actionHandler(e, 'LeadType')} className=\"wdt-200 mt-4 mr-2\" value=\"LeadType\" title={__('Add Lead Type', 'bit - integrations')} subTitle={__('Add Lead Type')} />}\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf?.selectedRequestType || false} onChange={(e) => actionHandler(e, 'RequestType')} className=\"wdt-200 mt-4 mr-2\" value=\"RequestType\" title={__('Add Request Type', 'bit - integrations')} subTitle={__('Add Request Type')} />}\n      {oneHashCRMConf.actionName === 'lead' && <TableCheckBox checked={oneHashCRMConf?.selectedMarketSegment || false} onChange={(e) => actionHandler(e, 'MarketSegment')} className=\"wdt-200 mt-4 mr-2\" value=\"MarketSegment\" title={__('Add Market Segment', 'bit - integrations')} subTitle={__('Add Market Segment')} />}\n      {oneHashCRMConf.actionName === 'contact' && <TableCheckBox checked={oneHashCRMConf?.selectedContactStatus || false} onChange={(e) => actionHandler(e, 'ContactStatus')} className=\"wdt-200 mt-4 mr-2\" value=\"ContactStatus\" title={__('Add Status', 'bit - integrations')} subTitle={__('Add Status')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'leadSource'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Source', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Source', 'bit-integrations')}\n        </div>\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.leadSources?.map(source => ({ label: source, value: source }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedLeadSource}\n            onChange={val => setChanges(val, 'selectedLeadSource')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'LeadAddressType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Address Type', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Address Type', 'bit-integrations')}\n        </div>\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.LeadAddressTypes?.map(type => ({ label: type, value: type }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedLeadAddressType}\n            onChange={val => setChanges(val, 'selectedLeadAddressType')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'LeadType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Lead Type', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Lead Type', 'bit-integrations')}\n        </div>\n\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.LeadTypes?.map(type => ({ label: type, value: type }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedLeadType}\n            onChange={val => setChanges(val, 'selectedLeadType')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'RequestType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Request Type', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Request Type', 'bit-integrations')}\n        </div>\n\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.RequestTypes?.map(type => ({ label: type, value: type }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedRequestType}\n            onChange={val => setChanges(val, 'selectedRequestType')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'MarketSegment'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Market Segment', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Market Segment', 'bit-integrations')}\n        </div>\n\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.MarketSegments?.map(segment => ({ label: segment, value: segment }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedMarketSegment}\n            onChange={val => setChanges(val, 'selectedMarketSegment')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'ContactStatus'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Industry', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Industry', 'bit-integrations')}\n        </div>\n\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={oneHashCRMConf?.ContactStatus?.map(status => ({ label: status, value: status }))}\n            className=\"msl-wrp-options\"\n            defaultValue={oneHashCRMConf?.selectedContactStatus}\n            onChange={val => setChanges(val, 'selectedContactStatus')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n    </div>\n  )\n}\n\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport CustomField from './CustomField'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function OneHashCRMFieldMap({ i, formFields, field, oneHashCRMConf, setOneHashCRMConf }) {\n  const requiredFields = oneHashCRMConf?.oneHashCRMFields && oneHashCRMConf?.oneHashCRMFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = oneHashCRMConf?.oneHashCRMFields && oneHashCRMConf?.oneHashCRMFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, oneHashCRMConf, setOneHashCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={oneHashCRMConf}\n              setConf={setOneHashCRMConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"oneHashCRMFormField\" value={i < requiredFields.length ? (requiredFields[i].key || '') : (field.oneHashCRMFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, oneHashCRMConf, setOneHashCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, oneHashCRMConf, setOneHashCRMConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, oneHashCRMConf, setOneHashCRMConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable no-unused-vars */\nimport { create } from 'mutative'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from './IntegrationHelpers'\nimport OneHashCRMActions from './OneHashCRMActions'\nimport { generateMappedField } from './OneHashCRMCommonFunc'\nimport OneHashCRMFieldMap from './OneHashCRMFieldMap'\n\nexport default function OneHashCRMIntegLayout({ formFields, handleInput, oneHashCRMConf, setOneHashCRMConf, loading, setLoading, isLoading, setIsLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    setOneHashCRMConf(prevConf => create(prevConf, (draftConf) => {\n      const { name } = e.target\n\n      if (e.target.value !== '') {\n        draftConf.actionName = e.target.value\n\n        if (draftConf.actionName === \"customer\") {\n          draftConf.oneHashCRMFields = draftConf.customerFields\n        } else if (draftConf.actionName === \"contact\") {\n          draftConf.oneHashCRMFields = draftConf.contactFields\n        } else if (draftConf.actionName === \"lead\") {\n          draftConf.oneHashCRMFields = draftConf.leadFields\n          draftConf.leadStatus = ['Lead', 'Open', 'Replied', 'Opportunity', 'Quotation', 'Lost Quotation', 'Interested', 'Converted', 'Do Not Contact']\n        }\n        draftConf.field_map = generateMappedField(draftConf)\n\n      } else {\n        delete draftConf[name]\n      }\n    }))\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...oneHashCRMConf }\n    newConf[name] = val\n\n    setOneHashCRMConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={oneHashCRMConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"lead\" data-action_name=\"lead\">{__('Create Lead', 'bit-integrations')}</option>\n        <option value=\"customer\" data-action_name=\"customer\">{__('Create Customer', 'bit-integrations')}</option>\n        <option value=\"contact\" data-action_name=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n      </select>\n      <br />\n      {oneHashCRMConf.actionName === 'lead'\n        && (\n          <>\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Lead Status:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={oneHashCRMConf?.leadStatus.map(status => ({ label: status, value: status }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={oneHashCRMConf?.selectedLeadStatus}\n                onChange={val => setChanges(val, 'selectedLeadStatus')}\n                disabled={isLoading}\n                singleSelect\n                closeOnSelect\n              />\n            </div>\n          </>\n        )}\n      {oneHashCRMConf.actionName === 'customer'\n        && (\n          <>\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Customer Type:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={['Company', 'Individual']?.map(type => ({ label: type, value: type }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={oneHashCRMConf?.selectedCustomerType}\n                onChange={val => setChanges(val, 'selectedCustomerType')}\n                disabled={isLoading}\n                singleSelect\n                closeOnSelect\n              />\n            </div>\n          </>\n        )}\n\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {oneHashCRMConf.actionName && !isLoading && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('OneHashCRM Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {oneHashCRMConf?.field_map.map((itm, i) => (\n            <OneHashCRMFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              oneHashCRMConf={oneHashCRMConf}\n              formFields={formFields}\n              setOneHashCRMConf={setOneHashCRMConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(oneHashCRMConf.field_map.length, oneHashCRMConf, setOneHashCRMConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <OneHashCRMActions\n            oneHashCRMConf={oneHashCRMConf}\n            setOneHashCRMConf={setOneHashCRMConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\n"],"names":["reactExports","jsxRuntimeExports","Recoil_index_18","Loader","TableCheckBox","__","ConfirmModal","u","$btcbi","create","generateMappedField","SmartTagField","MtInput","addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","OneHashCRMActions","oneHashCRMConf","setOneHashCRMConf","loading","setLoading","_a","_b","_c","_d","_e","_f","_g","actionMdl","setActionMdl","useState","actionHandler","e","type","clsActionMdl","setChanges","val","name","jsxs","jsx","MultiSelect","source","segment","status","CustomField","field","conf","fieldLabel","className","OneHashCRMFieldMap","formFields","requiredFields","fld","allNonRequiredFields","btcbi","useRecoilValue","isPro","ev","f","key","label","Fragment","OneHashCRMIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","handleActionInput","prevConf","draftConf","itm"],"mappings":"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"}