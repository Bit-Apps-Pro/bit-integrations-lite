{"version":3,"file":"bi.788.911.js","sources":["../frontend-dev/src/components/AllIntegrations/MoxieCRM/MoxieCRMActions.jsx","../frontend-dev/src/components/AllIntegrations/MoxieCRM/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/MoxieCRM/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/MoxieCRM/MoxieCRMFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/MoxieCRM/MoxieCRMIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllClients, getAllPipelineStages } from './MoxieCRMCommonFunc'\n\nexport default function MoxieCRMActions({ moxiecrmConf, setMoxieCRMConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const opportunityTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const recordTypes = [\n    { label: 'Client', value: 'Client' },\n    { label: 'Prospect', value: 'Prospect' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...moxiecrmConf }\n\n    if (type === 'opportunity') {\n      if (e.target?.checked) {\n        getAllOpportunities(moxiecrmConf, setMoxieCRMConf, setLoading)\n        newConf.actions.opportunity = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.opportunity\n      }\n    } else if (type === 'client') {\n      if (e.target?.checked) {\n        getAllClients(moxiecrmConf, setMoxieCRMConf, setLoading)\n        newConf.actions.client = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.client\n      }\n    } else if (type === 'pipelineStage') {\n      if (e.target?.checked) {\n        getAllPipelineStages(moxiecrmConf, setMoxieCRMConf, setLoading)\n        newConf.actions.pipelineStage = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.pipelineStage\n      }\n    } else if (type === 'followUp') {\n      if (e.target?.checked) {\n        newConf.actions.followUp = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.followUp\n      }\n    } else if (type === 'opportunityType') {\n      if (e.target?.checked) {\n        newConf.actions.opportunityType = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.opportunityType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setMoxieCRMConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...moxiecrmConf }\n    newConf[name] = val\n    setMoxieCRMConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {((moxiecrmConf.actionName === 'contact') || (moxiecrmConf.actionName === 'opportunity')) && <TableCheckBox checked={moxiecrmConf?.selectedClient?.length || false} onChange={(e) => actionHandler(e, 'client')} className=\"wdt-200 mt-4 mr-2\" value=\"client\" title={__('Add Client', 'bit - integrations')} subTitle={__('Add an client')} />}\n      {(moxiecrmConf.actionName === 'opportunity') && <TableCheckBox checked={moxiecrmConf?.selectedPipelineStage?.length || false} onChange={(e) => actionHandler(e, 'pipelineStage')} className=\"wdt-200 mt-4 mr-2\" value=\"pipelineStage\" title={__('Add PipelineStage', 'bit - integrations')} subTitle={__('Add a pipelineStage')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'client'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Clients', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Client', 'bit-integrations')}\n        </div>\n        {\n          loading.clients ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={moxiecrmConf?.clients?.map(client => ({ label: client.name, value: client.name }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={moxiecrmConf?.selectedClient}\n                  onChange={val => setChanges(val, 'selectedClient')}\n                  singleSelect\n                />\n                <button onClick={() => getAllClients(moxiecrmConf, setMoxieCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Clients', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'pipelineStage'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('PipelineStages', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select PipelineStage', 'bit-integrations')}\n        </div>\n        {\n          loading.pipelineStages ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={moxiecrmConf?.pipelineStages?.map(pipelineStage => ({ label: pipelineStage.name, value: pipelineStage.name }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={moxiecrmConf?.selectedPipelineStage}\n                  onChange={val => setChanges(val, 'selectedPipelineStage')}\n                  singleSelect\n                />\n                <button onClick={() => getAllPipelineStages(moxiecrmConf, setMoxieCRMConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh PipelineStages', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './MoxieCRMCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function MoxieCRMFieldMap({ i, formFields, field, moxiecrmConf, setMoxieCRMConf }) {\n  let allFields = []\n  let newFields = []\n  if (moxiecrmConf.actionName === 'client') {\n    allFields = moxiecrmConf?.clientFields\n  } else if (moxiecrmConf.actionName === 'contact') {\n    allFields = moxiecrmConf?.contactFields\n  } else if (moxiecrmConf.actionName === 'opportunity') {\n    allFields = moxiecrmConf?.opportunityFields\n  }\n  // newFields = [...allFields, ...moxiecrmConf?.customFields]\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const nonRequiredFields = allFields.filter(fld => fld.required === false) || []\n  const allNonRequiredFields = moxiecrmConf.customFields ? [...nonRequiredFields, ...moxiecrmConf?.customFields] : nonRequiredFields\n\n  if (moxiecrmConf?.field_map?.length === 1 && field.moxiecrmFormField === '') {\n    const newConf = { ...moxiecrmConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setMoxieCRMConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, moxiecrmConf, setMoxieCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={moxiecrmConf}\n              setConf={setMoxieCRMConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"moxiecrmFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.moxiecrmFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, moxiecrmConf, setMoxieCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, moxiecrmConf, setMoxieCRMConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, moxiecrmConf, setMoxieCRMConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport MoxieCRMActions from './MoxieCRMActions'\n// import { getCustomFields } from './MoxieCRMCommonFunc'\nimport MoxieCRMFieldMap from './MoxieCRMFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function MoxieCRMIntegLayout({ formFields, handleInput, moxiecrmConf, setMoxieCRMConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...moxiecrmConf }\n    newConf.field_map = [\n      { formField: '', moxiecrmFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      // getCustomFields(newConf, setMoxieCRMConf, setLoading)\n    } else {\n      delete newConf[name]\n    }\n    setMoxieCRMConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...moxiecrmConf }\n    newConf[name] = val\n    if (name === 'selectedCRMPeople' && val !== '' && moxiecrmConf.actionName === 'opportunity') {\n      newConf.selectedCRMPipelines = ''\n      getAllCRMPipelines(newConf, setMoxieCRMConf, setLoading)\n    }\n    setMoxieCRMConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={moxiecrmConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"client\">{__('Create Client', 'bit-integrations')}</option>\n        <option value=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"opportunity\">{__('Create Opportunity', 'bit-integrations')}</option>\n      </select>\n      {(moxiecrmConf.actionName === 'client')\n        && (\n          <>\n            <br />\n            <br />\n            <b className=\"wdt-200 d-in-b\">{__('Select Record Type:', 'bit-integrations')}</b>\n            <select onChange={handleActionInput} name=\"recordType\" value={moxiecrmConf.recordType} className=\"btcd-paper-inp w-5\">\n              <option value=\"Client\">{__('Client', 'bit-integrations')}</option>\n              <option value=\"Prospect\">{__('Prospect', 'bit-integrations')}</option>\n            </select>\n          </>\n        )}\n\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {moxiecrmConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            {/* <button\n              onClick={() => getCustomFields(moxiecrmConf, setMoxieCRMConf, setLoading)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={loading.CRMPipelines}\n            >\n              &#x21BB;\n            </button> */}\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('MoxieCRM Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {moxiecrmConf?.field_map.map((itm, i) => (\n            <MoxieCRMFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              moxiecrmConf={moxiecrmConf}\n              formFields={formFields}\n              setMoxieCRMConf={setMoxieCRMConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(moxiecrmConf.field_map.length, moxiecrmConf, setMoxieCRMConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <MoxieCRMActions\n            moxiecrmConf={moxiecrmConf}\n            setMoxieCRMConf={setMoxieCRMConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["MoxieCRMActions","moxiecrmConf","setMoxieCRMConf","loading","setLoading","actionMdl","setActionMdl","useState","actionHandler","e","type","newConf","__spreadValues","_a","_b","getAllClients","_c","getAllPipelineStages","_d","_e","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","client","pipelineStage","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","MoxieCRMFieldMap","formFields","allFields","requiredFields","fld","nonRequiredFields","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","MoxieCRMIntegLayout","handleInput","setSnackbar","handleActionInput","itm"],"mappings":"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"}