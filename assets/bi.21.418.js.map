{"version":3,"file":"bi.21.418.js","sources":["../frontend-dev/src/components/AllIntegrations/SendGrid/SendGrid.jsx"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport SendGridAuthorization from './SendGridAuthorization'\nimport { checkMappedFields } from './SendGridCommonFunc'\nimport SendGridIntegLayout from './SendGridIntegLayout'\n\nfunction SendGrid({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({\n    auth: false,\n    customFields: false,\n    lists: false,\n  })\n\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const staticFields = [\n    { key: 'email', label: 'Email', required: true },\n    { key: 'first_name', label: 'First Name', required: false },\n    { key: 'last_name', label: 'Last Name', required: false },\n    { key: 'alternate_emails', label: 'Alternate Emails', required: false },\n    { key: 'address_line_1', label: 'Address Line 1', required: false },\n    { key: 'address_line_2', label: 'Address Line 2', required: false },\n    { key: 'city', label: 'City', required: false },\n    { key: 'state_province_region', label: 'State Province Region', required: false },\n    { key: 'postal_code', label: 'Postal Code', required: false },\n    { key: 'country', label: 'Country', required: false },\n    { key: 'phone_number', label: 'Phone Number', required: false },\n    { key: 'whatsapp', label: 'Whatsapp', required: false },\n    { key: 'line', label: 'Line', required: false },\n    { key: 'facebook', label: 'Facebook', required: false },\n    { key: 'unique_name', label: 'Unique Name', required: false },\n  ]\n\n  const [sendGridConf, setSendGridConf] = useState({\n    name: 'SendGrid',\n    type: 'SendGrid',\n    apiKey: process.env.NODE_ENV === 'development' ? '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' : '',\n    field_map: [\n      { formField: '', sendGridFormField: '' },\n    ],\n    staticFields,\n    lists: [],\n    customFields: [],\n    selectedLists: '',\n    groups: [],\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(flow, setFlow, allIntegURL, sendGridConf, navigate, '', '', setIsLoading)\n    resp.then(res => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(sendGridConf)) {\n      toast.error('Please map mandatory fields')\n      return\n    }\n    sendGridConf.field_map.length > 0 && setStep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <SendGridAuthorization\n        sendGridConf={sendGridConf}\n        setSendGridConf={setSendGridConf}\n        step={step}\n        setStep={setStep}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <SendGridIntegLayout\n          formFields={formFields}\n          sendGridConf={sendGridConf}\n          setSendGridConf={setSendGridConf}\n          loading={loading}\n          setLoading={setLoading}\n          setSnackbar={setSnackbar}\n        />\n        <button\n          onClick={() => nextPage(3)}\n          disabled={!checkMappedFields(sendGridConf)}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={sendGridConf}\n        setDataConf={setSendGridConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default SendGrid\n"],"names":["SendGrid","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","loading","setLoading","step","setStep","snack","setSnackbar","staticFields","sendGridConf","setSendGridConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","checkMappedFields","jsx","SnackMsg","Steps","SendGridAuthorization","__spreadValues","SendGridIntegLayout","jsxs","__","IntegrationStepThree"],"mappings":"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"}