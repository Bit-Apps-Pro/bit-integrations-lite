{"version":3,"file":"bi.652.910.js","sources":["../frontend-dev/src/components/AllIntegrations/MoxieCRM/MoxieCRMCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\nimport { __ } from \"../../../Utils/i18nwrap\";\n\nexport const handleInput = (e, moxiecrmConf, setMoxieCRMConf) => {\n  const newConf = { ...moxiecrmConf };\n  const { name } = e.target;\n  if (e.target.value !== \"\") {\n    newConf[name] = e.target.value;\n  } else {\n    delete newConf[name];\n  }\n  setMoxieCRMConf({ ...newConf });\n};\n\nexport const generateMappedField = (moxiecrmConf) => {\n  let allRequiredFields = [];\n  if (moxiecrmConf.actionName === \"client\") {\n    allRequiredFields = moxiecrmConf?.clientFields;\n  } else if (moxiecrmConf.actionName === \"contact\") {\n    allRequiredFields = moxiecrmConf?.contactFields;\n  } else if (moxiecrmConf.actionName === \"opportunity\") {\n    allRequiredFields = moxiecrmConf?.opportunityFields;\n  }\n  const requiredFlds = allRequiredFields?.filter(\n    (fld) => fld.required === true\n  );\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n        formField: \"\",\n        moxiecrmFormField: field.key,\n      }))\n    : [{ formField: \"\", moxiecrmFormField: \"\" }];\n};\n\nexport const checkMappedFields = (moxiecrmConf) => {\n  const mappedFields = moxiecrmConf?.field_map\n    ? moxiecrmConf.field_map.filter(\n        (mappedField) =>\n          !mappedField.formField ||\n          !mappedField.moxiecrmFormField ||\n          (mappedField.formField === \"custom\" && !mappedField.customValue) ||\n          (mappedField.moxiecrmFormField === \"customFieldKey\" &&\n            !mappedField.customFieldKey)\n      )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const moxiecrmAuthentication = (\n  confTmp,\n  setConf,\n  setError,\n  setIsAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!confTmp.api_url || !confTmp.api_key) {\n    setError({\n      api_url: !confTmp.api_url\n        ? __(\"API Url can't be empty\", \"bit-integrations\")\n        : \"\",\n      api_key: !confTmp.api_key\n        ? __(\"Api Key can't be empty\", \"bit-integrations\")\n        : \"\",\n    });\n    return;\n  }\n\n  setError({});\n  setLoading({ ...loading, auth: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    api_url: confTmp.api_url,\n  };\n\n  bitsFetch(requestParams, \"moxiecrm_authentication\").then((result) => {\n    if (result && result.success) {\n      setIsAuthorized(true);\n      setLoading({ ...loading, auth: false });\n      toast.success(__(\"Authorized successfully\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...loading, auth: false });\n    toast.error(\n      __(\n        \"Authorized failed, Please enter valid api_url name & API key\",\n        \"bit-integrations\"\n      )\n    );\n  });\n};\n\n// export const getCustomFields = (confTmp, setConf, setLoading) => {\n//   setLoading({ ...setLoading, customFields: true });\n\n//   const requestParams = {\n//     api_key: confTmp.api_key,\n//     api_url: confTmp.api_url,\n//     action: confTmp.actionName,\n//   };\n\n//   bitsFetch(requestParams, \"moxiecrm_fetch_custom_fields\").then((result) => {\n//     if (result && result.success) {\n//       const newConf = { ...confTmp };\n//       if (result.data) {\n//         newConf.customFields = result.data;\n//       }\n//       setConf(newConf);\n//       setLoading({ ...setLoading, customFields: false });\n//       if (!result.data) {\n//         toast.error(__(\"No custom fields found\", \"bit-integrations\"));\n//       } else {\n//         toast.success(\n//           __(\"Custom fields also fetched successfully\", \"bit-integrations\")\n//         );\n//       }\n//       return;\n//     }\n//     setLoading({ ...setLoading, customFields: false });\n//     toast.error(__(\"Custom fields fetching failed\", \"bit-integrations\"));\n//   });\n// };\n\n\nexport const getAllClients = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, clients: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    api_url: confTmp.api_url,\n  };\n\n  bitsFetch(requestParams, \"moxiecrm_fetch_all_clients\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.clients = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, clients: false });\n\n      toast.success(__(\"Clients fetched successfully\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...setLoading, clients: false });\n    toast.error(__(\"Clients fetching failed\", \"bit-integrations\"));\n  });\n};\n\n\nexport const getAllPipelineStages = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, pipelineStages: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    api_url: confTmp.api_url,\n    action_name: confTmp.actionName,\n  };\n\n  bitsFetch(requestParams, \"moxiecrm_fetch_all_pipelineStages\").then(\n    (result) => {\n      if (result && result.success) {\n        const newConf = { ...confTmp };\n        if (result.data) {\n          newConf.pipelineStages = result.data;\n        }\n        setConf(newConf);\n        setLoading({ ...setLoading, pipelineStages: false });\n\n        toast.success(\n          __(\"PipelineStages fetched successfully\", \"bit-integrations\")\n        );\n        return;\n      }\n      setLoading({ ...setLoading, pipelineStages: false });\n      toast.error(__(\"PipelineStages fetching failed\", \"bit-integrations\"));\n    }\n  );\n};\n\n"],"names":["__","bitsFetch","_t","handleInput","moxiecrmConf","setMoxieCRMConf","newConf","__spreadValues","name","generateMappedField","allRequiredFields","requiredFlds","fld","field","checkMappedFields","mappedField","moxiecrmAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","__spreadProps","requestParams","result","toast","getAllClients","getAllPipelineStages"],"mappings":"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"}