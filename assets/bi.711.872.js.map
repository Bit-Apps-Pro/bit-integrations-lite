{"version":3,"file":"bi.711.872.js","sources":["../frontend-dev/src/components/AllIntegrations/Clickup/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/Clickup/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/Clickup/ClickupFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Clickup/ClickupIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './ClickupCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function ClickupFieldMap({ i, formFields, field, clickupConf, setClickupConf }) {\n  let allFields = []\n  let newFields = []\n  if (clickupConf.actionName === 'task') {\n    allFields = clickupConf?.taskFields\n  }\n  // newFields = [...allFields, ...clickupConf?.customFields]\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const nonRequiredFields = allFields.filter(fld => fld.required === false) || []\n  const allNonRequiredFields = [...nonRequiredFields, ...clickupConf?.customFields || []]\n\n  if (clickupConf?.field_map?.length === 1 && field.clickupFormField === '') {\n    const newConf = { ...clickupConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setClickupConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, clickupConf, setClickupConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={clickupConf}\n              setConf={setClickupConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"clickupFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.clickupFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, clickupConf, setClickupConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n            {(clickupConf.actionName === 'task')\n              && <option value=\"customFieldKey\">{__('Custom Field', 'bit-integrations')}</option>}\n          </select>\n          {field.clickupFormField === 'customFieldKey'\n            && (\n              <CustomField\n                field={field}\n                index={i}\n                conf={clickupConf}\n                setConf={setClickupConf}\n                fieldValue=\"customFieldKey\"\n                fieldLabel=\"Custom Field Key\"\n                className=\"ml-2\"\n              />\n            )}\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, clickupConf, setClickupConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, clickupConf, setClickupConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { getAllTeams, getAllSpaces, getAllFolders, getAllLists, getCustomFields } from './ClickupCommonFunc'\nimport ClickupFieldMap from './ClickupFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport ClickupActions from './ClickupActions'\n\nexport default function ClickupIntegLayout({ formFields, handleInput, clickupConf, setClickupConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...clickupConf }\n    newConf.field_map = [\n      { formField: '', clickupFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n\n      if (e.target.value === 'task' && (newConf.selectedTeam != '' || newConf.selectedTeam != null)) {\n        getAllTeams(newConf, setClickupConf, setLoading)\n      }\n\n    } else {\n      delete newConf[name]\n    }\n    setClickupConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...clickupConf }\n    newConf[name] = val\n\n    if ((name === 'selectedList') && val !== '' && (clickupConf.actionName === 'task')) {\n      getCustomFields(newConf, setClickupConf, setLoading)\n\n    } else if ((name === 'selectedFolder') && val !== '' && (clickupConf.actionName === 'task')) {\n      // newConf.selectedSections = ''\n      getAllLists(newConf, setClickupConf, setLoading)\n      // getCustomFields(newConf, setClickupConf, setLoading)\n    } else if ((name === 'selectedSpace') && val !== '' && (clickupConf.actionName === 'task')) {\n      // newConf.selectedSections = ''\n      getAllFolders(newConf, setClickupConf, setLoading)\n      // getCustomFields(newConf, setClickupConf, setLoading)\n    } else if ((name === 'selectedTeam') && val !== '' && (clickupConf.actionName === 'task')) {\n      // newConf.selectedSections = ''\n      getAllSpaces(newConf, setClickupConf, setLoading)\n    }\n\n    setClickupConf({ ...newConf })\n  }\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={clickupConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"task\">{__('Create Task', 'bit-integrations')}</option>\n      </select>\n\n      {(clickupConf.actionName === 'task')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Team:', 'bit-integrations')}</b>\n\n              <MultiSelect\n                options={clickupConf?.Teams?.map(Team => ({ label: Team.name, value: Team.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={clickupConf?.selectedTeam}\n                onChange={val => setChanges(val, 'selectedTeam')}\n                disabled={loading.Teams}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllTeams(clickupConf, setClickupConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh teams', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.Teams}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((clickupConf.actionName === 'task') && (clickupConf.selectedTeam))\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Space:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={clickupConf?.Spaces?.map(Space => ({ label: Space.name, value: Space.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={clickupConf?.selectedSpace}\n                onChange={val => setChanges(val, 'selectedSpace')}\n                disabled={loading.Spaces}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllSpaces(clickupConf, setClickupConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh spaces', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.Spaces}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((clickupConf.actionName === 'task') && (clickupConf.selectedSpace))\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Folder:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={clickupConf?.Folders?.map(Folder => ({ label: Folder.name, value: Folder.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={clickupConf?.selectedFolder}\n                onChange={val => setChanges(val, 'selectedFolder')}\n                disabled={loading.Folders}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllFolders(clickupConf, setClickupConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh folders', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.Folders}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((clickupConf.actionName === 'task') && (clickupConf.selectedFolder))\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select List:', 'bit-integrations')}</b>\n\n              <MultiSelect\n                options={clickupConf?.Lists?.map(List => ({ label: List.name, value: List.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={clickupConf?.selectedList}\n                onChange={val => setChanges(val, 'selectedList')}\n                disabled={loading.Lists}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllLists(clickupConf, setClickupConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh lists', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.Lists}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n\n      {(loading.Teams || loading.Spaces || loading.Folders || loading.Lists || loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n\n      {(clickupConf.actionName === 'task') && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              onClick={() => getCustomFields(clickupConf, setClickupConf, setLoading)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={loading.Lists}\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Clickup Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {clickupConf?.field_map.map((itm, i) => (\n            <ClickupFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              clickupConf={clickupConf}\n              formFields={formFields}\n              setClickupConf={setClickupConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(clickupConf.field_map.length, clickupConf, setClickupConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          {/* <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <ClickupActions\n            clickupConf={clickupConf}\n            setClickupConf={setClickupConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          /> */}\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","jsx","MtInput","e","__","ClickupFieldMap","formFields","clickupConf","setClickupConf","allFields","requiredFields","fld","allNonRequiredFields","_a","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","jsxs","ev","f","_b","SmartTagField","key","label","Fragment","ClickupIntegLayout","handleInput","loading","setLoading","setSnackbar","handleActionInput","name","getAllTeams","setChanges","val","getCustomFields","getAllLists","getAllFolders","getAllSpaces","MultiSelect","Team","Space","_c","Folder","_d","List","Loader","itm"],"mappings":"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"}