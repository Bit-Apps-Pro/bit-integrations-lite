{"version":3,"file":"bi.620.874.js","sources":["../frontend-dev/src/components/AllIntegrations/ClinchPad/ClinchPadActions.jsx","../frontend-dev/src/components/AllIntegrations/ClinchPad/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/ClinchPad/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/ClinchPad/ClinchPadFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/ClinchPad/ClinchPadIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllParentOrganizations, getAllCRMContacts, } from './ClinchPadCommonFunc'\n\nexport default function ClinchPadActions({ clinchPadConf, setClinchPadConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const leadTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...clinchPadConf }\n    if (type === 'parentOrganization') {\n      if (e.target?.checked) {\n        getAllParentOrganizations(clinchPadConf, setClinchPadConf, setLoading)\n        newConf.actions.parentOrganization = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.parentOrganization\n      }\n    } else if (type === 'contact') {\n      if (e.target?.checked) {\n        getAllCRMContacts(clinchPadConf, setClinchPadConf, setLoading)\n        newConf.actions.contact = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.contact\n      }\n    }\n\n    setActionMdl({ show: type })\n    setClinchPadConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...clinchPadConf }\n    newConf[name] = val\n    setClinchPadConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {(clinchPadConf.actionName === 'contact') && <TableCheckBox checked={clinchPadConf?.selectedParentOrganization?.length || false} onChange={(e) => actionHandler(e, 'parentOrganization')} className=\"wdt-200 mt-4 mr-2\" value=\"parentOrganization\" title={__('Add ParentOrganization', 'bit - integrations')} subTitle={__('Add an parentOrganization')} />}\n      {/* {(clinchPadConf.actionName === 'deal') && <TableCheckBox checked={clinchPadConf?.selectedTeam?.length || false} onChange={(e) => actionHandler(e, 'team')} className=\"wdt-200 mt-4 mr-2\" value=\"team\" title={__('Add Team', 'bit - integrations')} subTitle={__('Add an team')} />} */}\n      {/* {(clinchPadConf.actionName === 'lead') && <TableCheckBox checked={clinchPadConf?.selectedCurrency?.length || false} onChange={(e) => actionHandler(e, 'currency')} className=\"wdt-200 mt-4 mr-2\" value=\"currency\" title={__('Add Currency', 'bit - integrations')} subTitle={__('Add a currency')} />} */}\n      {(clinchPadConf.actionName === 'lead') && <TableCheckBox checked={clinchPadConf?.selectedContact?.length || false} onChange={(e) => actionHandler(e, 'contact')} className=\"wdt-200 mt-4 mr-2\" value=\"contact\" title={__('Add Contacts', 'bit - integrations')} subTitle={__('Add a contact')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'parentOrganization'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('ParentOrganizations', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select ParentOrganization', 'bit-integrations')}\n        </div>\n        {\n          loading.parentOrganizations ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={clinchPadConf?.parentOrganizations?.map(parentOrganization => ({ label: parentOrganization.name, value: parentOrganization.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={clinchPadConf?.selectedParentOrganization}\n                  onChange={val => setChanges(val, 'selectedParentOrganization')}\n                  singleSelect\n                />\n                <button onClick={() => getAllParentOrganizations(clinchPadConf, setClinchPadConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh ParentOrganizations', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'contact'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Contacts', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Contact', 'bit-integrations')}\n        </div>\n        {\n          loading.CRMContacts ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={clinchPadConf?.CRMContacts?.map(contact => ({ label: contact.name, value: contact.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={clinchPadConf?.selectedContact}\n                  onChange={val => setChanges(val, 'selectedContact')}\n                  singleSelect\n                />\n                <button onClick={() => getAllCRMContacts(clinchPadConf, setClinchPadConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Contacts', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { generateMappedField } from './ClinchPadCommonFunc'\nimport CustomField from './CustomField'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function ClinchPadFieldMap({ i, formFields, field, clinchPadConf, setClinchPadConf }) {\n  let allFields = []\n  let newFields = []\n  if (clinchPadConf.actionName === 'organization') {\n    allFields = clinchPadConf?.organizationFields\n  } else if (clinchPadConf.actionName === 'contact') {\n    allFields = clinchPadConf?.contactFields\n  } else if (clinchPadConf.actionName === 'lead') {\n    allFields = clinchPadConf?.leadFields\n  }\n  // newFields = [...allFields, ...clinchPadConf?.customFields]\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const nonRequiredFields = allFields.filter(fld => fld.required === false) || []\n  const allNonRequiredFields = [...nonRequiredFields, ...clinchPadConf?.customFields || []]\n\n  if (clinchPadConf?.field_map?.length === 1 && field.clinchPadFormField === '') {\n    const newConf = { ...clinchPadConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setClinchPadConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, clinchPadConf, setClinchPadConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={clinchPadConf}\n              setConf={setClinchPadConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"clinchPadFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.clinchPadFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, clinchPadConf, setClinchPadConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, clinchPadConf, setClinchPadConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, clinchPadConf, setClinchPadConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ClinchPadActions from './ClinchPadActions'\nimport { getAllCRMPipelines, getAllCRMContacts } from './ClinchPadCommonFunc'\nimport ClinchPadFieldMap from './ClinchPadFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function ClinchPadIntegLayout({ formFields, handleInput, clinchPadConf, setClinchPadConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...clinchPadConf }\n    newConf.field_map = [\n      { formField: '', clinchPadFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      if (e.target.value === 'lead') {\n        getAllCRMPipelines(newConf, setClinchPadConf, setLoading)\n      }\n    } else {\n      delete newConf[name]\n    }\n    setClinchPadConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...clinchPadConf }\n    newConf[name] = val\n    setClinchPadConf({ ...newConf })\n  }\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={clinchPadConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"organization\">{__('Create Organization', 'bit-integrations')}</option>\n        <option value=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"lead\">{__('Create Lead', 'bit-integrations')}</option>\n      </select>\n      {(loading.CRMPipelines) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {(clinchPadConf.actionName === 'lead')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Pipeline:', 'bit-integrations')}</b>\n\n              <MultiSelect\n                options={clinchPadConf?.CRMPipelines?.map(CRMPipeline => ({ label: CRMPipeline.name, value: CRMPipeline.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={clinchPadConf?.selectedCRMPipeline}\n                onChange={val => setChanges(val, 'selectedCRMPipeline')}\n                disabled={loading.CRMPipelines}\n                singleSelect\n              />\n            </div>\n          </>\n        )}\n\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {clinchPadConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              onClick={() => getCustomFields(clinchPadConf, setClinchPadConf, setLoading)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={loading.CRMPipelines}\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('ClinchPad Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {clinchPadConf?.field_map.map((itm, i) => (\n            <ClinchPadFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              clinchPadConf={clinchPadConf}\n              formFields={formFields}\n              setClinchPadConf={setClinchPadConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(clinchPadConf.field_map.length, clinchPadConf, setClinchPadConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <ClinchPadActions\n            clinchPadConf={clinchPadConf}\n            setClinchPadConf={setClinchPadConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["ClinchPadActions","clinchPadConf","setClinchPadConf","loading","setLoading","actionMdl","setActionMdl","useState","actionHandler","e","type","newConf","__spreadValues","_a","getAllParentOrganizations","_b","getAllCRMContacts","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","_c","parentOrganization","_d","contact","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","ClinchPadFieldMap","formFields","allFields","requiredFields","fld","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","ClinchPadIntegLayout","handleInput","setSnackbar","handleActionInput","getAllCRMPipelines","CRMPipeline","itm"],"mappings":"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"}