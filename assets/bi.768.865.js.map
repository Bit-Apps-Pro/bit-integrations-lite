{"version":3,"file":"bi.768.865.js","sources":["../frontend-dev/src/components/AllIntegrations/Zendesk/ZendeskActions.jsx","../frontend-dev/src/components/AllIntegrations/Zendesk/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/Zendesk/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/Zendesk/ZendeskFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Zendesk/ZendeskIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllLeads, getAllParentOrganizations, getAllTeams, getAllCurrencies, getAllStages } from './ZendeskCommonFunc'\n\nexport default function ZendeskActions({ zendeskConf, setZendeskConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const leadTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...zendeskConf }\n\n    if (type === 'lead') {\n      if (e.target?.checked) {\n        getAllLeads(zendeskConf, setZendeskConf, setLoading)\n        newConf.actions.lead = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.lead\n      }\n    } else if (type === 'parentOrganization') {\n      if (e.target?.checked) {\n        getAllParentOrganizations(zendeskConf, setZendeskConf, setLoading)\n        newConf.actions.parentOrganization = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.parentOrganization\n      }\n    } else if (type === 'team') {\n      if (e.target?.checked) {\n        getAllTeams(zendeskConf, setZendeskConf, setLoading)\n        newConf.actions.team = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.team\n      }\n    } else if (type === 'currency') {\n      if (e.target?.checked) {\n        getAllCurrencies(zendeskConf, setZendeskConf, setLoading)\n        newConf.actions.currency = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.currency\n      }\n    } else if (type === 'stage') {\n      if (e.target?.checked) {\n        getAllStages(zendeskConf, setZendeskConf, setLoading)\n        newConf.actions.stage = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.stage\n      }\n    } else if (type === 'followUp') {\n      if (e.target?.checked) {\n        newConf.actions.followUp = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.followUp\n      }\n    } else if (type === 'leadType') {\n      if (e.target?.checked) {\n        newConf.actions.leadType = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.leadType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setZendeskConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...zendeskConf }\n    newConf[name] = val\n    setZendeskConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {(zendeskConf.actionName === 'organization') && <TableCheckBox checked={zendeskConf?.selectedParentOrganization?.length || false} onChange={(e) => actionHandler(e, 'parentOrganization')} className=\"wdt-200 mt-4 mr-2\" value=\"parentOrganization\" title={__('Add ParentOrganization', 'bit - integrations')} subTitle={__('Add an parentOrganization')} />}\n      {/* {(zendeskConf.actionName === 'deal') && <TableCheckBox checked={zendeskConf?.selectedTeam?.length || false} onChange={(e) => actionHandler(e, 'team')} className=\"wdt-200 mt-4 mr-2\" value=\"team\" title={__('Add Team', 'bit - integrations')} subTitle={__('Add an team')} />} */}\n      {/* {(zendeskConf.actionName === 'lead') && <TableCheckBox checked={zendeskConf?.selectedCurrency?.length || false} onChange={(e) => actionHandler(e, 'currency')} className=\"wdt-200 mt-4 mr-2\" value=\"currency\" title={__('Add Currency', 'bit - integrations')} subTitle={__('Add a currency')} />} */}\n      {(zendeskConf.actionName === 'deal') && <TableCheckBox checked={zendeskConf?.selectedStage?.length || false} onChange={(e) => actionHandler(e, 'stage')} className=\"wdt-200 mt-4 mr-2\" value=\"stage\" title={__('Add Stage', 'bit - integrations')} subTitle={__('Add a stage')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'lead'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Leads', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Lead', 'bit-integrations')}\n        </div>\n        {\n          loading.leads ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.leads?.map(lead => ({ label: lead.name, value: lead.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedLead}\n                  onChange={val => setChanges(val, 'selectedLead')}\n                  singleSelect\n                />\n                <button onClick={() => getAllLeads(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Leads', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'parentOrganization'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('ParentOrganizations', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select ParentOrganization', 'bit-integrations')}\n        </div>\n        {\n          loading.parentOrganizations ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.parentOrganizations?.map(parentOrganization => ({ label: parentOrganization.name, value: parentOrganization.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedParentOrganization}\n                  onChange={val => setChanges(val, 'selectedParentOrganization')}\n                  singleSelect\n                />\n                <button onClick={() => getAllParentOrganizations(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh ParentOrganizations', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'team'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Teams', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Team', 'bit-integrations')}\n        </div>\n        {\n          loading.teams ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.teams?.map(team => ({ label: team.name, value: team.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedTeam}\n                  onChange={val => setChanges(val, 'selectedTeam')}\n                  singleSelect\n                />\n                <button onClick={() => getAllTeams(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Teams', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'currency'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Currencies', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Currency', 'bit-integrations')}\n        </div>\n        {\n          loading.currencies ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.currencies?.map(currency => ({ label: currency.name, value: currency.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedCurrency}\n                  onChange={val => setChanges(val, 'selectedCurrency')}\n                  singleSelect\n                />\n                <button onClick={() => getAllCurrencies(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Currencies', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'stage'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Stages', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Stage', 'bit-integrations')}\n        </div>\n        {\n          loading.stages ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.stages?.map(stage => ({ label: stage.name, value: stage.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedStage}\n                  onChange={val => setChanges(val, 'selectedStage')}\n                  singleSelect\n                />\n                <button onClick={() => getAllStages(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Stages', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      {/* <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'status'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Statuses', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Status', 'bit-integrations')}\n        </div>\n        {\n          loading.statuses ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={zendeskConf?.statuses?.map(status => ({ label: status.name, value: status.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={zendeskConf?.selectedStatus}\n                  onChange={val => setChanges(val, 'selectedStatus')}\n                  singleSelect\n                />\n                <button onClick={() => getAllStatuses(zendeskConf, setZendeskConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh statuses', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal> */}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'followUp'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Follow Up', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={followUps?.map(followUp => ({ label: followUp.label, value: followUp.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={zendeskConf?.selectedFollowUp}\n            onChange={val => setChanges(val, 'selectedFollowUp')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'leadType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Lead types', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={leadTypes?.map(leadType => ({ label: leadType.label, value: leadType.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={zendeskConf?.selectedLeadType}\n            onChange={val => setChanges(val, 'selectedLeadType')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './ZendeskCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function ZendeskFieldMap({ i, formFields, field, zendeskConf, setZendeskConf }) {\n  let allFields = []\n  let newFields = []\n  if (zendeskConf.actionName === 'organization') {\n    allFields = zendeskConf?.organizationFields\n  } else if (zendeskConf.actionName === 'contact') {\n    allFields = zendeskConf?.contactFields\n  } else if (zendeskConf.actionName === 'lead') {\n    allFields = zendeskConf?.leadFields\n  } else if (zendeskConf.actionName === 'deal') {\n    allFields = zendeskConf?.dealFields\n  }\n  // newFields = [...allFields, ...zendeskConf?.customFields]\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const nonRequiredFields = allFields.filter(fld => fld.required === false) || []\n  const allNonRequiredFields = [...nonRequiredFields, ...zendeskConf?.customFields || []]\n\n  if (zendeskConf?.field_map?.length === 1 && field.zendeskFormField === '') {\n    const newConf = { ...zendeskConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setZendeskConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, zendeskConf, setZendeskConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={zendeskConf}\n              setConf={setZendeskConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"zendeskFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.zendeskFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, zendeskConf, setZendeskConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n            {(zendeskConf.actionName === 'organization' || zendeskConf.actionName === 'contact' || zendeskConf.actionName === 'lead' || zendeskConf.actionName === 'deal')\n              && <option value=\"customFieldKey\">{__('Custom Field', 'bit-integrations')}</option>}\n          </select>\n          {field.zendeskFormField === 'customFieldKey'\n            && (\n              <CustomField\n                field={field}\n                index={i}\n                conf={zendeskConf}\n                setConf={setZendeskConf}\n                fieldValue=\"customFieldKey\"\n                fieldLabel=\"Custom Field Key\"\n                className=\"ml-2\"\n              />\n            )}\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, zendeskConf, setZendeskConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, zendeskConf, setZendeskConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ZendeskActions from './ZendeskActions'\nimport { getAllCRMCompanies, getAllCRMContacts, getAllCRMSources, getCustomFields } from './ZendeskCommonFunc'\nimport ZendeskFieldMap from './ZendeskFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function ZendeskIntegLayout({ formFields, handleInput, zendeskConf, setZendeskConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...zendeskConf }\n    newConf.field_map = [\n      { formField: '', zendeskFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      getCustomFields(newConf, setZendeskConf, setLoading)\n      if (e.target.value === 'lead') {\n        getAllCRMCompanies(newConf, setZendeskConf, setLoading)\n      } else if (e.target.value === 'deal') {\n        getAllCRMContacts(newConf, setZendeskConf, setLoading)\n      }\n    } else {\n      delete newConf[name]\n    }\n    setZendeskConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...zendeskConf }\n    newConf[name] = val\n    if ((name === 'selectedCRMCompany' || name === 'selectedCRMContact') && val !== '' && (zendeskConf.actionName === 'lead' || zendeskConf.actionName === 'deal')) {\n      newConf.selectedCRMSources = ''\n      getAllCRMSources(newConf, setZendeskConf, setLoading)\n    }\n    setZendeskConf({ ...newConf })\n  }\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={zendeskConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"organization\">{__('Create Organization', 'bit-integrations')}</option>\n        <option value=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"lead\">{__('Create Lead', 'bit-integrations')}</option>\n        <option value=\"deal\">{__('Create Deal', 'bit-integrations')}</option>\n      </select>\n      {(loading.CRMCompanies || loading.CRMContacts || loading.CRMSources) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {(zendeskConf.actionName === 'lead')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Company:', 'bit-integrations')}</b>\n\n              <MultiSelect\n                options={zendeskConf?.CRMCompanies?.map(CRMCompany => ({ label: CRMCompany.name, value: CRMCompany.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={zendeskConf?.selectedCRMCompany}\n                onChange={val => setChanges(val, 'selectedCRMCompany')}\n                disabled={loading.CRMCompanies}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMCompanies(zendeskConf, setZendeskConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh companies', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMCompanies}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(zendeskConf.actionName === 'deal')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Contact:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={zendeskConf?.CRMContacts?.map(CRMContact => ({ label: CRMContact.name, value: CRMContact.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={zendeskConf?.selectedCRMContact}\n                onChange={val => setChanges(val, 'selectedCRMContact')}\n                disabled={loading.CRMContacts}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMContacts(zendeskConf, setZendeskConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh contacts', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMContacts}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((zendeskConf.actionName === 'lead' || zendeskConf.actionName === 'deal') && (zendeskConf.selectedCRMCompany || zendeskConf.selectedCRMContact))\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Source:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={zendeskConf?.CRMSources?.map(CRMSource => ({ label: CRMSource.name, value: CRMSource.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={zendeskConf?.selectedCRMSources}\n                onChange={val => setChanges(val, 'selectedCRMSources')}\n                disabled={loading.CRMSources}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMSources(zendeskConf, setZendeskConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh Sources', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMSources}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {zendeskConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              onClick={() => getCustomFields(zendeskConf, setZendeskConf, setLoading)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={loading.CRMSources}\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Zendesk Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {zendeskConf?.field_map.map((itm, i) => (\n            <ZendeskFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              zendeskConf={zendeskConf}\n              formFields={formFields}\n              setZendeskConf={setZendeskConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(zendeskConf.field_map.length, zendeskConf, setZendeskConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <ZendeskActions\n            zendeskConf={zendeskConf}\n            setZendeskConf={setZendeskConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["ZendeskActions","zendeskConf","setZendeskConf","loading","setLoading","actionMdl","setActionMdl","useState","followUps","leadTypes","actionHandler","e","type","newConf","__spreadValues","_a","getAllLeads","_b","getAllParentOrganizations","_c","getAllTeams","_d","getAllCurrencies","_e","getAllStages","_f","_g","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","lead","parentOrganization","team","currency","stage","followUp","leadType","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","ZendeskFieldMap","formFields","allFields","requiredFields","fld","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","ZendeskIntegLayout","handleInput","setSnackbar","handleActionInput","getCustomFields","getAllCRMCompanies","getAllCRMContacts","getAllCRMSources","CRMCompany","CRMContact","CRMSource","itm"],"mappings":"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"}