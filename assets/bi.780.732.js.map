{"version":3,"file":"bi.780.732.js","sources":["../frontend-dev/src/components/AllIntegrations/Telegram/TelegramCommonFunc.js"],"sourcesContent":["import { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const refreshGetUpdates = (telegramConf, setTelegramConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...telegramConf }\n  const requestParams = { bot_api_key: newConf.bot_api_key }\n  setIsLoading(true)\n  bitsFetch(requestParams, 'refresh_get_updates')\n    .then(result => {\n      if (result && result.success) {\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n\n        if (result.data.telegramChatLists) {\n          newConf.default.telegramChatLists = result.data.telegramChatLists\n        }\n        setSnackbar({ show: true, msg: __('Chat list refreshed', 'bit-integrations') })\n        setTelegramConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Chat list refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Chat list refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const handleInput = (e, telegramConf, setTelegramConf) => {\n  const newConf = { ...telegramConf }\n  newConf.name = e.target.value\n  setTelegramConf({ ...newConf })\n}\n// export const checkMappedFields = telegramConf => {\n//   const mappedFields = telegramConf?.field_map ? telegramConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.mailPoetField && mappedField.required)) : []\n//   if (mappedFields.length > 0) {\n//     return false\n//   }\n//   return true\n// }\n"],"names":["refreshGetUpdates","telegramConf","setTelegramConf","setIsLoading","setSnackbar","newConf","__spreadValues","requestParams","bitsFetch","result","__","handleInput"],"mappings":"mYAGY,MAACA,EAAoB,CAACC,EAAcC,EAAiBC,EAAcC,IAAgB,CAC7F,MAAMC,EAAUC,EAAA,GAAKL,GACfM,EAAgB,CAAE,YAAaF,EAAQ,WAAa,EAC1DF,EAAa,EAAI,EACjBK,EAAUD,EAAe,qBAAqB,EAC3C,KAAKE,GAAU,CACVA,GAAUA,EAAO,SACdJ,EAAQ,UACXA,EAAQ,QAAU,CAAE,GAGlBI,EAAO,KAAK,oBACdJ,EAAQ,QAAQ,kBAAoBI,EAAO,KAAK,mBAElDL,EAAY,CAAE,KAAM,GAAM,IAAKM,EAAG,sBAAuB,kBAAkB,EAAG,EAC9ER,EAAgBI,EAAA,GAAKD,EAAS,GACpBI,GAAUA,EAAO,MAAQA,EAAO,KAAK,MAAU,CAACA,EAAO,SAAW,OAAOA,EAAO,MAAS,SACnGL,EAAY,CAAE,KAAM,GAAM,IAAK,GAAGM,EAAG,kCAAmC,kBAAkB,CAAC,GAAGD,EAAO,KAAK,MAAQA,EAAO,IAAI,KAAKC,EAAG,mBAAoB,kBAAkB,CAAC,GAAI,EAEhLN,EAAY,CAAE,KAAM,GAAM,IAAKM,EAAG,6CAA8C,kBAAkB,EAAG,EAEvGP,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAEaQ,EAAc,CAAC,EAAGV,EAAcC,IAAoB,CAC/D,MAAMG,EAAUC,EAAA,GAAKL,GACrBI,EAAQ,KAAO,EAAE,OAAO,MACxBH,EAAgBI,EAAA,GAAKD,EAAS,CAChC"}