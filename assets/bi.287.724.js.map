{"version":3,"file":"bi.287.724.js","sources":["../frontend-dev/src/components/AllIntegrations/SendinBlue/SendinBlueCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { sprintf, __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, sendinBlueConf, setSendinBlueConf) => {\n  const newConf = { ...sendinBlueConf }\n  newConf.name = e.target.value\n  setSendinBlueConf({ ...newConf })\n}\nexport const refreshLists = (sendinBlueConf, setSendinBlueConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = { api_key: sendinBlueConf.api_key }\n  bitsFetch(refreshListsRequestParams, 'sblue_refresh_lists')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sendinBlueConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.sblueList) {\n          newConf.default.sblueList = result.data.sblueList\n        }\n        setSnackbar({ show: true, msg: __('List refreshed', 'bit-integrations') })\n        setSendinBlueConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('List refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('List failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshTemplate = (sendinBlueConf, setSendinBlueConf, setSnackbar) => {\n  // setIsLoading(true)\n  const refreshListsRequestParams = { api_key: sendinBlueConf.api_key }\n  bitsFetch(refreshListsRequestParams, 'sblue_refresh_template')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sendinBlueConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.sblueTemplates) {\n          newConf.default.sblueTemplates = result.data.sblueTemplates\n        }\n        setSnackbar({ show: true, msg: __('Templates refreshed', 'bit-integrations') })\n        setSendinBlueConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Templates refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Templates failed. please try again', 'bit-integrations') })\n      }\n      // setIsLoading(false)\n    })\n  // .catch(() => setIsLoading(false))\n}\n\nexport const refreshSendinBlueHeader = (sendinBlueConf, setSendinBlueConf, setIsLoading, setSnackbar) => {\n  const refreshListsRequestParams = { api_key: sendinBlueConf.api_key }\n  bitsFetch(refreshListsRequestParams, 'sblue_headers')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sendinBlueConf }\n        if (result.data.sendinBlueField) {\n          newConf.default.fields = result.data.sendinBlueField\n          const { fields } = newConf.default\n          newConf.field_map = Object.values(fields).filter(f => f.required).map(f => ({ formField: '', sendinBlueField: f.fieldId, required: true }))\n          setSnackbar({ show: true, msg: __('Sendinblue fields refreshed', 'bit-integrations') })\n        } else {\n          setSnackbar({ show: true, msg: __('No Sendinblue fields found. Try changing the header row number or try again', 'bit-integrations') })\n        }\n\n        setSendinBlueConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Sendinblue fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = sendinBlueConf => {\n  const mappedFields = sendinBlueConf?.field_map ? sendinBlueConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.sendinBlueField && mappedField.required)) : []\n  if (sendinBlueConf.lists && sendinBlueConf.lists?.length === undefined) return false\n  if (mappedFields.length > 0) return false\n  return true\n}\n"],"names":["bitsFetch","__","sprintf","handleInput","e","sendinBlueConf","setSendinBlueConf","newConf","__spreadValues","refreshLists","setIsLoading","setSnackbar","refreshListsRequestParams","result","refreshTemplate","refreshSendinBlueHeader","fields","f","checkMappedFields","_a","mappedFields","mappedField"],"mappings":"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"}