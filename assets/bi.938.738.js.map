{"version":3,"file":"bi.938.738.js","sources":["../frontend-dev/src/components/AllIntegrations/Encharge/EnchargeCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, enchargeConf, setEnchargeConf) => {\n  const newConf = { ...enchargeConf }\n  newConf.name = e.target.value\n  setEnchargeConf({ ...newConf })\n}\n\nexport const refreshEnchargeHeader = (enchargeConf, setEnchargeConf, setIsLoading, setSnackbar) => {\n  const refreshEnchargeHeaderData = { api_key: enchargeConf.api_key }\n  const newConf = { ...enchargeConf }\n  bitsFetch(refreshEnchargeHeaderData, 'encharge_headers')\n    .then(result => {\n      if (result && result.success) {\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.enChargeFields) {\n          newConf.default.fields = result.data.enChargeFields\n          const { fields } = newConf.default\n          newConf.field_map = Object.values(fields).filter(f => f.required).map(f => ({ formField: '', enChargeFields: f.fieldId, required: true }))\n          setSnackbar({ show: true, msg: __('Encharge fields refreshed', 'bit-integrations') })\n        } else {\n          setSnackbar({ show: true, msg: __('No Encharge fields found. Try changing the header row number or try again', 'bit-integrations') })\n        }\n\n        setEnchargeConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Encharge fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = enChargeFields => {\n  const mappedFields = enChargeFields?.field_map ? enChargeFields.field_map.filter(mappedField => (!mappedField.formField && mappedField.enChargeFields && mappedField.required)) : []\n  if (mappedFields.length > 0) return false\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","enchargeConf","setEnchargeConf","newConf","__spreadValues","refreshEnchargeHeader","setIsLoading","setSnackbar","refreshEnchargeHeaderData","result","fields","f","checkMappedFields","enChargeFields","mappedField"],"mappings":"yVAAA,OAAA,KAAAA,EAAA,KAAAC,MAAA,iBAIY,MAACC,EAAc,CAACC,EAAGC,EAAcC,IAAoB,CAC/D,MAAMC,EAAUC,EAAA,GAAKH,GACrBE,EAAQ,KAAOH,EAAE,OAAO,MACxBE,EAAgBE,EAAA,GAAKD,EAAS,CAChC,EAEaE,EAAwB,CAACJ,EAAcC,EAAiBI,EAAcC,IAAgB,CACjG,MAAMC,EAA4B,CAAE,QAASP,EAAa,OAAS,EAC7DE,EAAUC,EAAA,GAAKH,GACrBJ,EAAUW,EAA2B,kBAAkB,EACpD,KAAKC,GAAU,CACd,GAAIA,GAAUA,EAAO,QAAS,CAI5B,GAHKN,EAAQ,UACXA,EAAQ,QAAU,CAAE,GAElBM,EAAO,KAAK,eAAgB,CAC9BN,EAAQ,QAAQ,OAASM,EAAO,KAAK,eACrC,KAAM,CAAE,OAAAC,GAAWP,EAAQ,QAC3BA,EAAQ,UAAY,OAAO,OAAOO,CAAM,EAAE,OAAOC,GAAKA,EAAE,QAAQ,EAAE,IAAIA,IAAM,CAAE,UAAW,GAAI,eAAgBA,EAAE,QAAS,SAAU,EAAI,EAAG,EACzIJ,EAAY,CAAE,KAAM,GAAM,IAAKT,EAAG,4BAA6B,kBAAkB,EAAG,CAC9F,MACUS,EAAY,CAAE,KAAM,GAAM,IAAKT,EAAG,4EAA6E,kBAAkB,EAAG,EAGtII,EAAgBE,EAAA,GAAKD,EAAS,CACtC,MACQI,EAAY,CAAE,KAAM,GAAM,IAAKT,EAAG,mDAAoD,kBAAkB,EAAG,EAE7GQ,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAEaM,EAAoBC,GAE3B,GADiBA,GAAA,MAAAA,EAAgB,UAAYA,EAAe,UAAU,OAAOC,GAAgB,CAACA,EAAY,WAAaA,EAAY,gBAAkBA,EAAY,QAAS,EAAI,CAAE,GACnK,OAAS"}