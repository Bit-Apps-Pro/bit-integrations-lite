{"version":3,"file":"bi.704.90.js","sources":["../frontend-dev/src/components/AllIntegrations/Twilio/EditTwilio.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, handleInput } from './TwilioCommonFunc'\nimport TwilioIntegLayout from './TwilioIntegLayout'\n\nfunction EditTwilio({ allIntegURL }) {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [twilioConf, setTwilioConf] = useRecoilState($actionConf)\n  const [isLoading, setIsLoading] = useState(false)\n  const [snack, setSnackbar] = useState({ show: false })\n  const formField = useRecoilValue($formFields)\n\n  const saveConfig = () => {\n    if (twilioConf.to === '' && twilioConf.body === '') {\n      setSnackbar({ show: true, msg: __('Please select To and Body field , it is required', 'bit-integrations') })\n      return\n    }\n    saveActionConf({ flow, allIntegURL, conf: twilioConf, navigate, edit: 1, setIsLoading, setSnackbar })\n  }\n\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 d-in-b\">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, twilioConf, setTwilioConf)} name=\"name\" value={twilioConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n      <TwilioIntegLayout\n        formID={flow.triggered_entity_id}\n        formFields={formField}\n        handleInput={(e) => handleInput(e, twilioConf, setTwilioConf, setIsLoading, setSnackbar)}\n        twilioConf={twilioConf}\n        setTwilioConf={setTwilioConf}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={isLoading || (twilioConf.to === '' && twilioConf.body === '')}\n        isLoading={isLoading}\n        dataConf={twilioConf}\n        setDataConf={setTwilioConf}\n        formFields={formField}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditTwilio\n"],"names":["useNavigate","useParams","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$newFlow","$actionConf","$formFields","SnackMsg","__","EditFormInteg","EditWebhookInteg","checkWebhookIntegrationsExist","saveActionConf","IntegrationStepThree","handleInput","TwilioIntegLayout","EditTwilio","allIntegURL","navigate","flow","setFlow","useRecoilState","twilioConf","setTwilioConf","isLoading","setIsLoading","useState","snack","setSnackbar","formField","useRecoilValue","saveConfig","jsx","jsxs","e"],"mappings":"AAgBA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,gBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,SAASC,EAAW,CAAE,YAAAC,GAAe,CACnC,MAAMC,EAAWpB,IACFC,EAAU,EACzB,KAAM,CAACoB,EAAMC,CAAO,EAAIC,EAAejB,CAAQ,EACzC,CAACkB,EAAYC,CAAa,EAAIF,EAAehB,CAAW,EACxD,CAACmB,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAOC,CAAW,EAAIF,WAAS,CAAE,KAAM,GAAO,EAC/CG,EAAYC,EAAexB,CAAW,EAEtCyB,EAAa,IAAM,CACvB,GAAIT,EAAW,KAAO,IAAMA,EAAW,OAAS,GAAI,CACtCM,EAAA,CAAE,KAAM,GAAM,IAAKpB,EAAG,mDAAoD,kBAAkB,EAAG,EAC3G,MACF,CACeI,EAAA,CAAE,KAAAO,EAAM,YAAAF,EAAa,KAAMK,EAAY,SAAAJ,EAAU,KAAM,EAAG,aAAAO,EAAc,YAAAG,CAAa,CAAA,CAAA,EAGtG,cACG,MAAI,CAAA,MAAO,CAAE,MAAO,GACnB,EAAA,SAAA,CAACI,EAAAA,IAAAzB,EAAA,CAAS,MAAAoB,EAAc,YAAAC,CAA0B,CAAA,EAElDK,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAD,MAAC,KAAE,UAAU,iBAAkB,SAAGxB,EAAA,oBAAqB,kBAAkB,EAAE,EAC3EwB,EAAAA,IAAC,SAAM,UAAU,qBAAqB,SAAeE,GAAApB,EAAYoB,EAAGZ,EAAYC,CAAa,EAAG,KAAK,OAAO,MAAOD,EAAW,KAAM,KAAK,OAAO,YAAad,EAAG,sBAAuB,kBAAkB,CAAG,CAAA,CAAA,EAC9M,QACC,KAAG,EAAA,EACH,CAACG,EAA8BQ,EAAK,gBAAgB,GAAKa,EAAAA,IAACvB,GAAc,YAAAmB,EAA0B,EAClGjB,EAA8BQ,EAAK,gBAAgB,GAAKa,EAAA,IAACtB,GAAiB,YAAAkB,EAA0B,EACrGI,EAAA,IAACjB,EAAA,CACC,OAAQI,EAAK,oBACb,WAAYU,EACZ,YAAcK,GAAMpB,EAAYoB,EAAGZ,EAAYC,CAAwC,EACvF,WAAAD,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,EACA,YAAAG,CAAA,CACF,EAEAI,EAAA,IAACnB,EAAA,CACC,KAAI,GACJ,WAAAkB,EACA,SAAUP,GAAcF,EAAW,KAAO,IAAMA,EAAW,OAAS,GACpE,UAAAE,EACA,SAAUF,EACV,YAAaC,EACb,WAAYM,CAAA,CACd,QACC,KAAG,EAAA,CACN,CAAA,CAAA,CAEJ"}