{"version":3,"file":"bi.640.796.js","sources":["../frontend-dev/src/components/AllIntegrations/GoogleContacts/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/GoogleContacts/GoogleContactsFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/GoogleContacts/GoogleContactsActions.jsx","../frontend-dev/src/components/AllIntegrations/GoogleContacts/GoogleContactsIntegLayout.jsx"],"sourcesContent":["export const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n  setConf({ ...newConf })\n}\n\nexport const addReminderFieldMap = (i, confTmp, setConf) => {\n  if (confTmp.reminder_field_map.length >= 5) return\n  const newConf = { ...confTmp }\n  newConf.reminder_field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delReminderFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.reminder_field_map.length > 1) {\n    newConf.reminder_field_map.splice(i, 1)\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './GoogleContactsCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function GoogleContactsFieldMap({ i, formFields, field, googleContactsConf, setGoogleContactsConf }) {\n  if (googleContactsConf?.field_map?.length === 1 && field.googleContactsFormField === '') {\n    const newConf = { ...googleContactsConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setGoogleContactsConf(newConf)\n  }\n\n  const requiredFlds = googleContactsConf?.default.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = googleContactsConf?.default.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, googleContactsConf, setGoogleContactsConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, googleContactsConf, setGoogleContactsConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"googleContactsFormField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.googleContactsFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, googleContactsConf, setGoogleContactsConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, googleContactsConf, setGoogleContactsConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, googleContactsConf, setGoogleContactsConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable no-param-reassign */\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport Modal from '../../Utilities/Modal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport TitleModal from '../../Utilities/TitleModal'\nimport Loader from '../../Loaders/Loader'\n\nexport default function GoogleContactsActions({ googleContactsConf, setGoogleContactsConf, formFields }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n  const actionHandler = (e, type) => {\n    const newConf = { ...googleContactsConf }\n    if (type === 'Attachments') {\n      if (e.target.value !== '') {\n        newConf.actions.attachments = e.target.value\n      } else {\n        delete newConf.actions.attachments\n      }\n    }\n\n    setGoogleContactsConf({ ...newConf })\n  }\n\n  return (\n\n    <div className=\"d-flx wdt-200\">\n      <div className=\"pos-rel d-flx w-8l\">\n        <div className=\"d-flx flx-wrp\">\n          <TableCheckBox onChange={() => setActionMdl({ show: 'attachments' })} checked={'attachments' in googleContactsConf.actions} className=\"wdt-200 mt-4 mr-2\" value=\"Attachment\" title={__('Photo', 'bit-integrations')} subTitle={__('Add picture on google contact account.', 'bit-integrations')} />\n        </div>\n\n        <ConfirmModal\n          className=\"custom-conf-mdl\"\n          mainMdlCls=\"o-v\"\n          btnClass=\"blue\"\n          btnTxt=\"Ok\"\n          show={actionMdl.show === 'attachments'}\n          close={() => setActionMdl({ show: false })}\n          action={() => setActionMdl({ show: false })}\n          title={__('Select Attachment', 'bit-integrations')}\n        >\n          <div className=\"btcd-hr mt-2\" />\n          <div className=\"mt-2\">{__('Please select file upload fields', 'bit-integrations')}</div>\n          <select onChange={(e) => actionHandler(e, 'Attachments')} name=\"attachments\" value={googleContactsConf.actions?.attachments} className=\"btcd-paper-inp w-10 mt-2\">\n            <option value=\"\">{__('Select file upload field', 'bit-integrations')}</option>\n            {\n              formFields?.filter(itm => (itm.type === 'file')).map(itm => (\n                <option key={itm.name + 1} value={itm.name}>\n                  {itm.label}\n                </option>\n              ))\n            }\n          </select>\n        </ConfirmModal>\n      </div>\n\n    </div>\n  )\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap } from './IntegrationHelpers'\n// import GoogleContactsActions from './GoogleContactsActions'\nimport GoogleContactsFieldMap from './GoogleContactsFieldMap'\nimport GoogleContactsActions from './GoogleContactsActions'\n\nexport default function GoogleContactsIntegLayout({ flowID, formFields, googleContactsConf, setGoogleContactsConf }) {\n  const inputHandler = (e) => {\n    const newConf = { ...googleContactsConf }\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n    } else {\n      delete newConf[name]\n    }\n\n    newConf[e.target.name] = e.target.value\n    setGoogleContactsConf({ ...newConf })\n  }\n\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Actions:', 'bit-integrations')}</b>\n      <select onChange={inputHandler} name=\"mainAction\" value={googleContactsConf?.mainAction} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Actions', 'bit-integrations')}</option>\n        {\n          googleContactsConf?.allActions && googleContactsConf.allActions.map(({ key, label }) => (\n            <option key={key} value={key}>\n              {label}\n            </option>\n          ))\n        }\n      </select>\n      <br />\n      <br />\n      <div className=\"mt-5\">\n        <b className=\"wdt-100\">{__('Field Map', 'bit-integrations')}</b>\n      </div>\n      <div className=\"btcd-hr mt-1\" />\n      <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n        <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n        <div className=\"txt-dp\"><b>{__('Google Contacts Fields', 'bit-integrations')}</b></div>\n      </div>\n\n      {googleContactsConf?.field_map.map((itm, i) => (\n        <GoogleContactsFieldMap\n          key={`rp-m-${i + 9}`}\n          i={i}\n          field={itm}\n          formFields={formFields}\n          googleContactsConf={googleContactsConf}\n          setGoogleContactsConf={setGoogleContactsConf}\n        />\n      ))}\n      <div className=\"txt-center btcbi-field-map-button mt-2\">\n        <button onClick={() => addFieldMap(googleContactsConf.field_map.length, googleContactsConf, setGoogleContactsConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button>\n      </div>\n      <br />\n      <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n      <div className=\"btcd-hr mt-1\" />\n      <GoogleContactsActions\n        googleContactsConf={googleContactsConf}\n        setGoogleContactsConf={setGoogleContactsConf}\n        formFields={formFields}\n      />\n    </>\n  )\n}\n"],"names":["addFieldMap","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","GoogleContactsFieldMap","formFields","field","googleContactsConf","setGoogleContactsConf","_a","tmp","generateMappedField","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","$btcbi","isPro","jsx","jsxs","ev","__","f","_b","SmartTagField","TagifyInput","e","handleCustomValue","key","label","Fragment","GoogleContactsActions","useState","actionMdl","setActionMdl","actionHandler","type","TableCheckBox","ConfirmModal","itm","GoogleContactsIntegLayout","flowID","inputHandler","name","i"],"mappings":"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"}