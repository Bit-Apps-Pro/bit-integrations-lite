{"version":3,"file":"bi.879.759.js","sources":["../frontend-dev/src/components/AllIntegrations/Trello/TrelloActions.jsx","../frontend-dev/src/components/AllIntegrations/Trello/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/Trello/TrelloFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Trello/TrelloIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function TrelloActions({ trelloConf, setTrelloConf, formFields }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n  const actionHandler = (e, type) => {\n    const newConf = { ...trelloConf }\n    if (type === 'tag') {\n      if (e.target?.checked) {\n        newConf.actions.tag = true\n        setActionMdl({ show: 'tag' })\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.tag\n      }\n    }\n\n    setTrelloConf({ ...newConf })\n  }\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n  const onSelectHandler = (val) => {\n    const newConf = { ...trelloConf }\n    newConf.pos = val\n    setTrelloConf(newConf)\n  }\n\n  const options = [\n    { label: 'Top', value: 'top' },\n    { label: 'Bottom', value: 'bottom' },\n  ]\n\n  return (\n\n    <div className=\"pos-rel d-flx w-8\">\n      <TableCheckBox checked={trelloConf?.actions?.tag || false} onChange={(e) => actionHandler(e, 'tag')} className=\"wdt-200 mt-4 mr-2\" value=\"tag\" title={__('Add Position', 'bit-integrations')} subTitle={__('Add Card Position', 'bit-integrations')} />\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'tag'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Position', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">{__('Select Card Position', 'bit-integrations')}</div>\n        {isLoading\n          ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n          : (\n            <div className=\"flx flx-between mt-2\">\n              <MultiSelect\n                options={options}\n                className=\"msl-wrp-options\"\n                singleSelect\n                defaultValue={trelloConf.pos}\n                onChange={val => onSelectHandler(val)}\n              />\n            </div>\n          )}\n\n      </ConfirmModal>\n\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n \n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event\n  setConf({ ...newConf })\n}\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleCustomValue, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './TrelloCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\n\nexport default function TrelloFieldMap({ i, formFields, field, trelloConf, setTrelloConf }) {\n  if (trelloConf?.field_map?.length === 1 && field.trelloFormField === '') {\n    const newConf = { ...trelloConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setTrelloConf(newConf)\n  }\n  const requiredFlds = trelloConf?.cardFields.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = trelloConf?.cardFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, trelloConf, setTrelloConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, trelloConf, setTrelloConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"trelloFormField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.trelloFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, trelloConf, setTrelloConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, trelloConf, setTrelloConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, trelloConf, setTrelloConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from '../IntegrationHelpers/IntegrationHelpers'\nimport TrelloActions from './TrelloActions'\n// import { addFieldMap } from './IntegrationHelpers'\nimport { fetchAllBoard, fetchAllList } from './TrelloCommonFunc'\nimport TrelloFieldMap from './TrelloFieldMap'\n\nexport default function TrelloIntegLayout({ formFields, handleInput, trelloConf, setTrelloConf, isLoading, setIsLoading, setSnackbar }) {\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-expressions\n    trelloConf?.boardId && fetchAllList(trelloConf, setTrelloConf, setIsLoading, setSnackbar)\n  }, [trelloConf?.boardId])\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Boards:', 'bit-integrations')}</b>\n      <select onChange={handleInput} name=\"boardId\" value={trelloConf.boardId} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Board', 'bit-integrations')}</option>\n        {\n          trelloConf?.default?.allBoardlist && trelloConf.default.allBoardlist.map(({ boardId, boardName }) => (\n            <option key={boardId} value={boardId}>\n              {boardName}\n            </option>\n          ))\n        }\n      </select>\n      <button onClick={() => fetchAllBoard(trelloConf, setTrelloConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Recipients', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n      <br />\n      {\n        trelloConf?.default?.alllists && (\n          <>\n            <br />\n            <b className=\"wdt-200 d-in-b\">{__('Lists:', 'bit-integrations')}</b>\n            <select onChange={handleInput} name=\"listId\" value={trelloConf.listId} className=\"btcd-paper-inp w-5\">\n              <option value=\"\">{__('Select List', 'bit-integrations')}</option>\n              {\n                trelloConf?.default?.alllists && trelloConf.default.alllists.map(({ listId, listName }) => (\n                  <option key={listId} value={listId}>\n                    {listName}\n                  </option>\n                ))\n              }\n            </select>\n            <button onClick={() => fetchAllList(trelloConf, setTrelloConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Recipients', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n            <br />\n          </>\n        )\n      }\n      <br />\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      <div className=\"mt-5\"><b className=\"wdt-100\">{__('Field Map', 'bit-integrations')}</b></div>\n      <div className=\"btcd-hr mt-1\" />\n      <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n        <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n        <div className=\"txt-dp\"><b>{__('Trello Fields', 'bit-integrations')}</b></div>\n      </div>\n\n      {trelloConf?.listId && trelloConf?.field_map.map((itm, i) => (\n        <TrelloFieldMap\n          key={`rp-m-${i + 9}`}\n          i={i}\n          field={itm}\n          trelloConf={trelloConf}\n          formFields={formFields}\n          setTrelloConf={setTrelloConf}\n          setSnackbar={setSnackbar}\n        />\n      ))}\n      <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(trelloConf.field_map.length, trelloConf, setTrelloConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n\n      <br />\n      <br />\n      <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n      <div className=\"btcd-hr mt-1\" />\n      <TrelloActions\n        trelloConf={trelloConf}\n        setTrelloConf={setTrelloConf}\n        formFields={formFields}\n      />\n\n    </>\n  )\n}\n"],"names":["TrelloActions","trelloConf","setTrelloConf","formFields","isLoading","setIsLoading","useState","actionMdl","setActionMdl","actionHandler","e","type","newConf","__spreadValues","_a","clsActionMdl","onSelectHandler","val","options","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomValue","TrelloFieldMap","field","tmp","generateMappedField","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","$btcbi","isPro","ev","f","_b","SmartTagField","TagifyInput","key","label","Fragment","TrelloIntegLayout","handleInput","setSnackbar","useEffect","fetchAllList","boardId","boardName","fetchAllBoard","_c","listId","listName","itm"],"mappings":"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"}