{"version":3,"file":"bi.475.908.js","sources":["../frontend-dev/src/components/AllIntegrations/Salesflare/IntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/Salesflare/SalesflareActions.jsx","../frontend-dev/src/components/AllIntegrations/Salesflare/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/Salesflare/SalesflareFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Salesflare/SalesflareIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport { getAllTags } from './SalesflareCommonFunc'\n\nexport default function SalesflareActions({ salesflareConf, setSalesflareConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...salesflareConf }\n    if (type === 'tags') {\n      if (e.target?.checked) {\n        newConf.actions.tags = true\n        getAllTags(salesflareConf, setSalesflareConf, setLoading)\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.tags\n      }\n    }\n\n    setActionMdl({ show: type })\n    setSalesflareConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...salesflareConf }\n    newConf[name] = val\n    setSalesflareConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {salesflareConf.actionName && <TableCheckBox checked={salesflareConf?.selectedTags || false} onChange={(e) => actionHandler(e, 'tags')} className=\"wdt-200 mt-4 mr-2\" value=\"tags\" title={__('Add Tags', 'bit-integrations')} subTitle={__('Add Tags', 'bit-integrations')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'tags'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Tags', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Tags', 'bit-integrations')}\n        </div>\n\n        {\n          loading.tags ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={salesflareConf?.tags?.map(tag => ({ label: tag, value: tag }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={salesflareConf?.selectedTags}\n                  onChange={val => setChanges(val, 'selectedTags')}\n                />\n                <button onClick={() => getAllTags(salesflareConf, setSalesflareConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Tags', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n    </div>\n  )\n}\n\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport CustomField from './CustomField'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function SalesflareFieldMap({ i, formFields, field, salesflareConf, setSalesflareConf }) {\n  const requiredFields = salesflareConf?.salesflareAllFields && salesflareConf?.salesflareAllFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = salesflareConf?.salesflareAllFields && salesflareConf?.salesflareAllFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, salesflareConf, setSalesflareConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={salesflareConf}\n              setConf={setSalesflareConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"salesflareFormField\" value={i < requiredFields.length ? (requiredFields[i].key || '') : (field.salesflareFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, salesflareConf, setSalesflareConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, salesflareConf, setSalesflareConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, salesflareConf, setSalesflareConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable no-unused-vars */\nimport { create } from 'mutative'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from './IntegrationHelpers'\nimport SalesflareActions from './SalesflareActions'\nimport { getallAccounts, getallPipelines, salesflareFields } from './SalesflareCommonFunc'\nimport SalesflareFieldMap from './SalesflareFieldMap'\n\nexport default function SalesflareIntegLayout({ formFields, handleInput, salesflareConf, setSalesflareConf, loading, setLoading, isLoading, setIsLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    setSalesflareConf(prevConf => create(prevConf, (draftConf) => {\n      const { name } = e.target\n\n      if (e.target.value !== '') {\n        draftConf.actionName = e.target.value\n\n        if (draftConf.actionName === \"accounts\") {\n          draftConf.salesflareFields = draftConf.accountFields\n        } else if (draftConf.actionName === \"contacts\") {\n          draftConf.salesflareFields = draftConf.contactFields\n        } else if (draftConf.actionName === \"opportunities\") {\n          draftConf.salesflareFields = draftConf.opportunitiyFields\n          getallAccounts(draftConf, setSalesflareConf, loading, setLoading)\n          getallPipelines(draftConf, setSalesflareConf, loading, setLoading)\n        }\n        salesflareFields(draftConf, setSalesflareConf, setIsLoading, setSnackbar)\n\n      } else {\n        delete draftConf[name]\n      }\n    }))\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...salesflareConf }\n    newConf[name] = val\n\n    if (name === 'selectedPipeline') {\n      salesflareConf?.pipelines.forEach(pipeline => {\n        if (pipeline.id.toString() === val) {\n          newConf.stages = pipeline.stages\n        }\n      })\n    }\n\n    setSalesflareConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={salesflareConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"accounts\" data-action_name=\"accounts\">{__('Create Account', 'bit-integrations')}</option>\n        <option value=\"contacts\" data-action_name=\"contacts\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"opportunities\" data-action_name=\"opportunities\">{__('Create Opportunity', 'bit-integrations')}</option>\n      </select>\n      <br />\n      {(loading.account || loading.pipeline) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {salesflareConf.actionName === 'opportunities' && salesflareConf?.accounts\n        && (\n          <>\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Account:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={salesflareConf?.accounts.map(account => ({ label: account.name, value: account.id.toString() }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={salesflareConf?.selectedAccount}\n                onChange={val => setChanges(val, 'selectedAccount')}\n                disabled={loading.account}\n                singleSelect\n                closeOnSelect\n              />\n              <button\n                onClick={() => getallAccounts(salesflareConf, setSalesflareConf, loading, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh Stages', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.account}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {salesflareConf.actionName === 'opportunities' && salesflareConf?.pipelines\n        && (\n          <>\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Pipeline:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={salesflareConf?.pipelines.map(pipeline => ({ label: pipeline.name, value: pipeline.id.toString() }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={salesflareConf?.selectedPipeline}\n                onChange={val => setChanges(val, 'selectedPipeline')}\n                disabled={loading.pipeline}\n                singleSelect\n                closeOnSelect\n              />\n              <button\n                onClick={() => getallPipelines(salesflareConf, setSalesflareConf, loading, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh Pipelines', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.pipeline}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {salesflareConf.actionName === 'opportunities' && salesflareConf?.stages\n        && (\n          <>\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Stage:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={salesflareConf?.stages.map(stage => ({ label: stage.name, value: stage.id.toString() }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={salesflareConf?.selectedStage}\n                onChange={val => setChanges(val, 'selectedStage')}\n                disabled={loading.stage}\n                singleSelect\n                closeOnSelect\n              />\n            </div>\n          </>\n        )}\n\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {salesflareConf.actionName && !isLoading && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              onClick={() => salesflareFields(salesflareConf, setSalesflareConf, setIsLoading, setSnackbar)}\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Custom Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n              disabled={isLoading}\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Salesflare Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {salesflareConf?.field_map.map((itm, i) => (\n            <SalesflareFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              salesflareConf={salesflareConf}\n              formFields={formFields}\n              setSalesflareConf={setSalesflareConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(salesflareConf.field_map.length, salesflareConf, setSalesflareConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <SalesflareActions\n            salesflareConf={salesflareConf}\n            setSalesflareConf={setSalesflareConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\n"],"names":["reactExports","jsxRuntimeExports","Loader","Recoil_index_18","TableCheckBox","__","ConfirmModal","u","$btcbi","create","getAllTags","getallAccounts","getallPipelines","salesflareFields","SmartTagField","MtInput","addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","SalesflareActions","salesflareConf","setSalesflareConf","loading","setLoading","_a","actionMdl","setActionMdl","useState","actionHandler","e","type","clsActionMdl","setChanges","val","name","jsxs","jsx","MultiSelect","tag","CustomField","field","conf","fieldLabel","className","SalesflareFieldMap","formFields","requiredFields","fld","allNonRequiredFields","btcbi","useRecoilValue","isPro","ev","f","key","label","Fragment","SalesflareIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","handleActionInput","prevConf","draftConf","pipeline","account","stage","itm"],"mappings":"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"}