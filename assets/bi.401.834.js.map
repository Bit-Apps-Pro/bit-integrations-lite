{"version":3,"file":"bi.401.834.js","sources":["../frontend-dev/src/components/AllIntegrations/EmailOctopus/EmailOctopusCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, emailOctopusConf, setEmailOctopusConf) => {\n  const newConf = { ...emailOctopusConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setEmailOctopusConf({ ...newConf })\n}\n\nexport const generateMappedField = (emailOctopusConf) => {\n  const requiredFlds = emailOctopusConf?.emailOctopusFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', emailOctopusFormField: field.key })) : [{ formField: '', emailOctopusFormField: '' }]\n}\n\nexport const checkMappedFields = (emailOctopusConf) => {\n  const mappedFields = emailOctopusConf?.field_map ? emailOctopusConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.emailOctopusFormField || (!mappedField.formField === 'custom' && !mappedField.customValue))) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const emailOctopusAuthentication = (confTmp, setConf, setError, setIsAuthorized, loading, setLoading, type) => {\n  if (!confTmp.auth_token) {\n    setError({ auth_token: !confTmp.auth_token ? __('Api Key can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n\n  setError({})\n\n  if (type === 'authentication') {\n    setLoading({ ...loading, auth: true })\n  }\n  if (type === 'refreshLists') {\n    setLoading({ ...loading, lists: true })\n  }\n  const requestParams = { auth_token: confTmp.auth_token }\n\n  bitsFetch(requestParams, 'emailOctopus_authentication')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        setIsAuthorized(true)\n        if (type === 'authentication') {\n          if (result.data) {\n            newConf.lists = result.data\n          }\n          setLoading({ ...loading, auth: false })\n          toast.success(__('Authorized successfully', 'bit-integrations'))\n        } else if (type === 'refreshLists') {\n          if (result.data) {\n            newConf.lists = result.data\n          }\n          setLoading({ ...loading, lists: false })\n          toast.success(__('All lists fectched successfully', 'bit-integrations'))\n        }\n        setConf(newConf)\n        return\n      }\n      setLoading({ ...loading, auth: false })\n      toast.error(__('Authorized failed, Please enter valid domain name & API key', 'bit-integrations'))\n    })\n}\n\nexport const getAllFields = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, customFields: true })\n  const requestParams = { auth_token: confTmp.auth_token, listId: confTmp.selectedList }\n\n  bitsFetch(requestParams, 'emailOctopus_fetch_all_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.emailOctopusFields = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, customFields: false })\n        setLoading({ ...setLoading, emailOctopusFields: true })\n\n        toast.success(__('Fields fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, customFields: false })\n      toast.error(__('Fields fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllTags = (confTmp, setConf, setLoading) => {\n  setLoading({ tags: true, emailOctopusFields: true })\n\n  const requestParams = { auth_token: confTmp.auth_token, listId: confTmp.selectedList }\n\n  bitsFetch(requestParams, 'emailOctopus_fetch_all_tags')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.tags = result.data\n        }\n        setConf(newConf)\n        setLoading({ tags: false, emailOctopusFields: true })\n\n        toast.success(__('Tags fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ tags: false, emailOctopusFields: true })\n      toast.error(__('Tags fetching failed', 'bit-integrations'))\n    })\n}\n"],"names":["__","bitsFetch","_t","handleInput","e","emailOctopusConf","setEmailOctopusConf","newConf","__spreadValues","name","generateMappedField","requiredFlds","fld","field","checkMappedFields","mappedField","emailOctopusAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","type","__spreadProps","requestParams","result","toast","getAllFields","getAllTags"],"mappings":"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"}