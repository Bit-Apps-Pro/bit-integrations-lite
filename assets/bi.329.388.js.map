{"version":3,"file":"bi.329.388.js","sources":["../frontend-dev/src/components/AllIntegrations/ZoomWebinar/ZoomIntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/ZoomWebinar/ZoomWebinar.jsx"],"sourcesContent":["import { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const saveIntegConfig = async (flow, setFlow, allIntegURL, confTmp, navigate, index, edit) => {\n  let action = 'flow/save'\n  const data = {\n    name: confTmp.name,\n    trigger: flow.triggered_entity,\n    triggered_entity_id: flow?.triggerData?.formID ? flow.triggerData.formID : (flow.triggered_entity_id || 0),\n    flow_details: confTmp,\n  }\n  if (flow.id) {\n    data.id = flow.id\n  }\n  if (flow.triggered_entity === 'Webhook') {\n    data.flow_details.fields = flow.triggerDetail.data\n  }\n  if (edit) {\n    action = 'flow/update'\n    // integs[index] = { ...allintegs[index], ...confTmp }\n  }\n  try {\n    const res = await bitsFetch(data, action)\n    if (res.success) {\n      navigate(allIntegURL)\n    }\n    return res\n  } catch (e) {\n    return __('Failed to save integration', 'bit-integrations')\n  }\n}\n\nexport const setGrantTokenResponse = (integ) => {\n  const grantTokenResponse = {}\n  const authWindowLocation = window.location.href\n  const queryParams = authWindowLocation.replace(`${window.opener.location.href}`, '').split('&')\n  if (queryParams) {\n    queryParams.forEach(element => {\n      const gtKeyValue = element.split('=')\n      if (gtKeyValue[1]) {\n        // eslint-disable-next-line prefer-destructuring\n        grantTokenResponse[gtKeyValue[0]] = gtKeyValue[1]\n      }\n    })\n  }\n  localStorage.setItem(`__${integ}`, JSON.stringify(grantTokenResponse))\n  window.close()\n}\n\nexport const addFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    uploadFields ? newConf.relatedlists[tab - 1].upload_field_map.splice(i, 0, {}) : newConf.relatedlists[tab - 1].field_map.splice(i, 0, {})\n  } else {\n    uploadFields ? newConf.upload_field_map.splice(i, 0, {}) : newConf.field_map.splice(i, 0, {})\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    if (uploadFields) {\n      if (newConf.relatedlists[tab - 1].upload_field_map.length > 1) {\n        newConf.relatedlists[tab - 1].upload_field_map.splice(i, 1)\n      }\n    } else if (newConf.relatedlists[tab - 1].field_map.length > 1) {\n      newConf.relatedlists[tab - 1].field_map.splice(i, 1)\n    }\n  } else if (uploadFields) {\n    if (newConf.upload_field_map.length > 1) {\n      newConf.upload_field_map.splice(i, 1)\n    }\n  } else if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...conftTmp }\n  if (tab) {\n    if (uploadFields) newConf.relatedlists[tab - 1].upload_field_map[index][event.target.name] = event.target.value\n    else newConf.relatedlists[tab - 1].field_map[index][event.target.name] = event.target.value\n  } else if (uploadFields) newConf.upload_field_map[index][event.target.name] = event.target.value\n  else newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    if (tab) {\n      newConf.relatedlists[tab - 1].field_map[index].customValue = ''\n    } else newConf.field_map[index].customValue = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf, tab) => {\n  const newConf = { ...conftTmp }\n  if (tab) {\n    newConf.relatedlists[tab - 1].field_map[index].customValue = event.target.value\n  } else {\n    newConf.field_map[index].customValue = event.target.value\n  }\n  setConf({ ...newConf })\n}\n","import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport ZoomWebinarAuthorization from './ZoomWebinarAuthorization'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { handleInput, checkMappedFields } from './ZoomCommonFunc'\nimport { setGrantTokenResponse } from './ZoomIntegrationHelpers'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport ZoomWebinarIntegLayout from './ZoomWebinarIntegLayout'\n\nfunction ZoomWebinar({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const zoomWebinarFields = [\n    { key: 'first_name', label: 'First Name', required: true },\n    { key: 'last_name', label: 'Last Name', required: true },\n    { key: 'email', label: 'Email', required: true },\n    { key: 'city', label: 'City', required: false },\n    { key: 'country', label: 'Country', required: false },\n    { key: 'phone', label: 'Phone', required: false },\n    { key: 'job_title', label: 'Job Title', required: false },\n    { key: 'zip', label: 'Zip', required: false },\n  ]\n  const [zoomWebinarConf, setZoomWebinarConf] = useState({\n    name: 'Zoom Webinar',\n    type: 'Zoom Webinar',\n    clientId: process.env.NODE_ENV === 'development' ? 'SMn59eOiR5KCdijvBpp8uA' : '',\n    clientSecret: process.env.NODE_ENV === 'development' ? 'naiIsG7ZmVV5ecf3NyGqTT64U0rnIp4n' : '',\n    zoomId: '',\n    field_map: [\n      { formField: '', zoomField: '' },\n    ],\n    zoomWebinarFields,\n    allActions: [\n      { value: 'Create Attendee', key: 1 },\n      { value: 'Delete Attendee', key: 2 },\n      { value: 'Create User', key: 3 },\n      { value: 'Delete User', key: 4 },\n    ],\n    selectedActions: null,\n    actions: {},\n  })\n\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-expressions\n    window.opener && setGrantTokenResponse('zoom')\n  }, [])\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (!checkMappedFields(zoomWebinarConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (zoomWebinarConf.field_map.length > 0) {\n      setStep(3)\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center w-9 mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <ZoomWebinarAuthorization\n        formID={formID}\n        zoomWebinarConf={zoomWebinarConf}\n        setZoomWebinarConf={setZoomWebinarConf}\n        step={step}\n        setStep={setStep}\n        setSnackbar={setSnackbar}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n      />\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ width: step === 2 && 900, height: step === 2 && `${100}%` }}>\n\n        <ZoomWebinarIntegLayout\n          formID={formID}\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, zoomWebinarConf, setZoomWebinarConf, formID, setIsLoading, setSnackbar)}\n          zoomWebinarConf={zoomWebinarConf}\n          setZoomWebinarConf={setZoomWebinarConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={zoomWebinarConf.field_map.length < 2 || isLoading || !zoomWebinarConf.id || !checkMappedFields(zoomWebinarConf) || zoomWebinarConf.selectedActions == null}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: zoomWebinarConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={zoomWebinarConf}\n        setDataConf={setZoomWebinarConf}\n        formFields={formFields}\n      />\n\n    </div>\n  )\n}\n\nexport default ZoomWebinar\n"],"names":["useNavigate","useParams","reactExports","jsxRuntimeExports","SnackMsg","__","BackIcn","Steps","ZoomWebinarAuthorization","IntegrationStepThree","handleInput","checkMappedFields","saveActionConf","ZoomWebinarIntegLayout","setGrantTokenResponse","integ","grantTokenResponse","queryParams","element","gtKeyValue","ZoomWebinar","formFields","setFlow","flow","allIntegURL","navigate","formID","isLoading","setIsLoading","useState","step","setStep","snack","setSnackbar","zoomWebinarFields","zoomWebinarConf","setZoomWebinarConf","useEffect","nextPage","jsx","e","jsxs"],"mappings":"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"}