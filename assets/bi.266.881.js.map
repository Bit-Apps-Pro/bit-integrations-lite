{"version":3,"file":"bi.266.881.js","sources":["../frontend-dev/src/components/AllIntegrations/Lemlist/LemlistCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from \"@wordpress/i18n\"\nimport bitsFetch from \"../../../Utils/bitsFetch\"\n\nexport const handleInput = (e, lemlistConf, setLemlistConf) => {\n  const newConf = { ...lemlistConf }\n  newConf.name = e.target.value\n  setLemlistConf({ ...newConf })\n}\n\n// refreshMappedLists\nexport const refreshLemlistCampaign = (\n  lemlistConf,\n  setLemlistConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const refreshListsRequestParams = {\n    account_id: lemlistConf.account_id,\n    api_key: lemlistConf.api_key,\n  }\n  bitsFetch(refreshListsRequestParams, \"lemlist_campaigns\")\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...lemlistConf }\n        if (result.data) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.lemlistCampaigns = result.data\n          setSnackbar({\n            show: true,\n            msg: __(\"Lemlist Campaigns refreshed\", \"bit-integrations\"),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              \"No Lemlist campaigns found. Try changing the header row number or try again\",\n              \"bit-integrations\"\n            ),\n          })\n        }\n\n        setLemlistConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"Lemlist campaigns refresh failed. please try again\",\n            \"bit-integrations\"\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\n// refreshMappedFields\nexport const refreshLemlistHeader = (\n  lemlistConf,\n  setLemlistConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  const leadFields = [\n    { fieldValue: 'email', fieldName: 'Email', required: true },\n    { fieldValue: 'firstName', fieldName: 'First Name', required: false },\n    { fieldValue: 'lastName', fieldName: 'Last Name', required: false },\n    { fieldValue: 'companyName', fieldName: 'Company Name', required: false },\n    { fieldValue: 'phone', fieldName: 'Phone', required: false },\n  ]\n\n  const newConf = { ...lemlistConf }\n  if (!newConf.default) {\n    newConf.default = {}\n  }\n\n  newConf.default.fields = leadFields\n  const { fields } = newConf.default\n  newConf.field_map = Object.values(fields)\n    .filter((f) => f.required)\n    .map((f) => ({\n      formField: \"\",\n      lemlistField: f.fieldValue,\n      required: true,\n    }))\n\n  setSnackbar({\n    show: true,\n    msg: __(\"Lemlist fields refreshed\", \"bit-integrations\"),\n  })\n  setLemlistConf({ ...newConf })\n  setIsLoading(false)\n}\n\nexport const checkMappedFields = (lemlistConf) => {\n  const mappedFields = lemlistConf?.field_map\n    ? lemlistConf.field_map.filter(\n      (mappedField) => !mappedField.formField\n        && mappedField.lemlistField\n        && mappedField.required\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","lemlistConf","setLemlistConf","newConf","__spreadValues","refreshLemlistCampaign","setIsLoading","setSnackbar","refreshListsRequestParams","result","refreshLemlistHeader","leadFields","fields","f","checkMappedFields","mappedField"],"mappings":"yVAAA,OAAA,KAAAA,EAAA,KAAAC,MAAA,iBAIY,MAACC,EAAc,CAACC,EAAGC,EAAaC,IAAmB,CAC7D,MAAMC,EAAUC,EAAA,GAAKH,GACrBE,EAAQ,KAAOH,EAAE,OAAO,MACxBE,EAAeE,EAAA,GAAKD,EAAS,CAC/B,EAGaE,EAAyB,CACpCJ,EACAC,EACAI,EACAC,IACG,CACH,MAAMC,EAA4B,CAChC,WAAYP,EAAY,WACxB,QAASA,EAAY,OACtB,EACDJ,EAAUW,EAA2B,mBAAmB,EACrD,KAAMC,GAAW,CAChB,GAAIA,GAAUA,EAAO,QAAS,CAC5B,MAAMN,EAAUC,EAAA,GAAKH,GACjBQ,EAAO,MACJN,EAAQ,UACXA,EAAQ,QAAU,CAAE,GAEtBA,EAAQ,QAAQ,iBAAmBM,EAAO,KAC1CF,EAAY,CACV,KAAM,GACN,IAAKT,EAAG,8BAA+B,kBAAkB,CACrE,CAAW,GAEDS,EAAY,CACV,KAAM,GACN,IAAKT,EACH,8EACA,kBACD,CACb,CAAW,EAGHI,EAAeE,EAAA,GAAKD,EAAS,CACrC,MACQI,EAAY,CACV,KAAM,GACN,IAAKT,EACH,qDACA,kBACD,CACX,CAAS,EAEHQ,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAGaI,EAAuB,CAClCT,EACAC,EACAI,EACAC,IACG,CACH,MAAMI,EAAa,CACjB,CAAE,WAAY,QAAS,UAAW,QAAS,SAAU,EAAM,EAC3D,CAAE,WAAY,YAAa,UAAW,aAAc,SAAU,EAAO,EACrE,CAAE,WAAY,WAAY,UAAW,YAAa,SAAU,EAAO,EACnE,CAAE,WAAY,cAAe,UAAW,eAAgB,SAAU,EAAO,EACzE,CAAE,WAAY,QAAS,UAAW,QAAS,SAAU,EAAO,CAC7D,EAEKR,EAAUC,EAAA,GAAKH,GAChBE,EAAQ,UACXA,EAAQ,QAAU,CAAE,GAGtBA,EAAQ,QAAQ,OAASQ,EACzB,KAAM,CAAE,OAAAC,GAAWT,EAAQ,QAC3BA,EAAQ,UAAY,OAAO,OAAOS,CAAM,EACrC,OAAQC,GAAMA,EAAE,QAAQ,EACxB,IAAKA,IAAO,CACX,UAAW,GACX,aAAcA,EAAE,WAChB,SAAU,EAChB,EAAM,EAEJN,EAAY,CACV,KAAM,GACN,IAAKT,EAAG,2BAA4B,kBAAkB,CAC1D,CAAG,EACDI,EAAeE,EAAA,GAAKD,EAAS,EAC7BG,EAAa,EAAK,CACpB,EAEaQ,EAAqBb,GAQ5B,GAPiBA,GAAA,MAAAA,EAAa,UAC9BA,EAAY,UAAU,OACrBc,GAAgB,CAACA,EAAY,WACzBA,EAAY,cACZA,EAAY,QAClB,EACC,CAAE,GACW,OAAS"}