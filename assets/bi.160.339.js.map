{"version":3,"file":"bi.160.339.js","sources":["../frontend-dev/src/components/AllIntegrations/SliceWp/SliceWpAuthorization.jsx","../frontend-dev/src/components/AllIntegrations/SliceWp/SliceWp.jsx"],"sourcesContent":["import { useState } from 'react'\nimport BackIcn from '../../../Icons/BackIcn'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { deepCopy } from '../../../Utils/Helpers'\nimport { __ } from '../../../Utils/i18nwrap'\nimport LoaderSm from '../../Loaders/LoaderSm'\nimport tutorialLinks from '../../../Utils/StaticData/tutorialLinks'\nimport TutorialLink from '../../Utilities/TutorialLink'\n\nexport default function SliceWpAuthorization({ formID,\n  sliceWpConf,\n  setSliceWpConf,\n  step,\n  setStep,\n  isLoading,\n  setIsLoading,\n  setSnackbar }) {\n  const [isAuthorized, setisAuthorized] = useState(false)\n  const [showAuthMsg, setShowAuthMsg] = useState(false)\n  const { sliceWp } = tutorialLinks\n\n  const authorizeHandler = () => {\n    setIsLoading('auth')\n    bitsFetch({}, 'slicewp_authorize').then((result) => {\n      if (result?.success) {\n        setisAuthorized(true)\n        setSnackbar({ show: true, msg: __('Connected with SliceWp affiliate Successfully', 'bit-integrations') })\n      }\n      setIsLoading(false)\n      setShowAuthMsg(true)\n    })\n  }\n\n  const handleInput = (e) => {\n    const newConf = deepCopy(sliceWpConf)\n    newConf[e.target.name] = e.target.value\n    setSliceWpConf(newConf)\n  }\n\n  return (\n    <div\n      className=\"btcd-stp-page\"\n      style={{\n        width: step === 1 && 900,\n        height: step === 1 && 'auto',\n      }}\n    >\n      {sliceWp?.youTubeLink && (\n        <TutorialLink\n          title={sliceWp?.title}\n          youTubeLink={sliceWp?.youTubeLink}\n        />\n      )}\n      {sliceWp?.docLink && (\n        <TutorialLink\n          title={sliceWp?.title}\n          docLink={sliceWp?.docLink}\n        />\n      )}\n\n      <div className=\"mt-3\">\n        <b>{__('Integration Name:', 'bit-integrations')}</b>\n      </div>\n      <input\n        className=\"btcd-paper-inp w-6 mt-1\"\n        onChange={handleInput}\n        name=\"name\"\n        value={sliceWpConf.name}\n        type=\"text\"\n        placeholder={__('Integration Name...', 'bit-integrations')}\n      />\n\n      {isLoading === 'auth' && (\n        <div className=\"flx mt-5\">\n          <LoaderSm size={25} clr=\"#022217\" className=\"mr-2\" />\n          Checking if SliceWp affiliate is active!!!\n        </div>\n      )}\n\n      {showAuthMsg && !isAuthorized && !isLoading && (\n        <div className=\"flx mt-5\" style={{ color: 'red' }}>\n          <span className=\"btcd-icn mr-2\" style={{ fontSize: 30, marginTop: -5 }}>\n            &times;\n          </span>\n          SliceWp affiliate plugin must be activated to integrate with Bit Integrations.\n        </div>\n      )}\n\n      {!isAuthorized && (\n        <button onClick={authorizeHandler} className=\"btn btcd-btn-lg green sh-sm flx mt-5\" type=\"button\">\n          {__('Connect', 'bit-integrations')}\n        </button>\n      )}\n\n      {isAuthorized && (\n        <button onClick={() => setStep(2)} className=\"btn btcd-btn-lg green sh-sm flx mt-5\" type=\"button\" disabled={!isAuthorized}>\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n      )}\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, handleInput } from './SliceWpCommonFunc'\nimport SliceWpAuthorization from './SliceWpAuthorization'\nimport SliceWpIntegLayout from './SliceWpIntegLayout'\n\nfunction SliceWp({ formFields, setFlow, flow, allIntegURL, isInfo, edit }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const allActions = [\n    { key: '1', label: 'Add commission to user\\'s affiliate' },\n    // { key: '2', label: 'Remove the user from a membership' },\n  ]\n\n  // for action 1\n  const sliceWpFields = [\n    { key: 'commission_date', label: 'commission_date', required: true },\n    { key: 'reference', label: 'Reference', required: false },\n    { key: 'amount', label: 'Amount', required: false },\n  ]\n\n  const [sliceWpConf, setSliceWpConf] = useState({\n    name: 'SliceWp',\n    type: 'SliceWp',\n    mainAction: '',\n    field_map: [\n      { formField: '', slicewpFormField: '' },\n    ],\n    allActions,\n    sliceWpFields,\n    actions: {},\n  })\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(sliceWpConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    if (sliceWpConf.mainAction !== '') {\n      setStep(3)\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <SliceWpAuthorization\n        formID={formID}\n        sliceWpConf={sliceWpConf}\n        setSliceWpConf={setSliceWpConf}\n        step={step}\n        setStep={setStep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <SliceWpIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, sliceWpConf, setSliceWpConf, setIsLoading, setSnackbar, formID)}\n          sliceWpConf={sliceWpConf}\n          setSliceWpConf={setSliceWpConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n          allIntegURL={allIntegURL}\n          isInfo={isInfo}\n          edit={edit}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={!sliceWpConf.mainAction || isLoading || sliceWpConf.statusId === undefined}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n\n      </div>\n      {/* STEP 3 */}\n\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: sliceWpConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={sliceWpConf}\n        setDataConf={setSliceWpConf}\n        formFields={formFields}\n      />\n\n    </div>\n  )\n}\n\nexport default SliceWp\n"],"names":["reactExports","jsxRuntimeExports","useNavigate","useParams","__","LoaderSm","bitsFetch","deepCopy","SnackMsg","Steps","saveActionConf","IntegrationStepThree","SliceWpIntegLayout","handleInput","checkMappedFields","BackIcn","TutorialLink","tutorialLinks","SliceWpAuthorization","formID","sliceWpConf","setSliceWpConf","step","setStep","isLoading","setIsLoading","setSnackbar","isAuthorized","setisAuthorized","useState","showAuthMsg","setShowAuthMsg","sliceWp","authorizeHandler","result","e","newConf","jsxs","jsx","SliceWp","formFields","setFlow","flow","allIntegURL","isInfo","edit","navigate","snack","allActions","sliceWpFields","nextPage","__spreadValues"],"mappings":"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"}