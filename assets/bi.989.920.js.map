{"version":3,"file":"bi.989.920.js","sources":["../frontend-dev/src/components/AllIntegrations/ZagoMail/ZagoMailCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from '@wordpress/i18n'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, zagoMailConf, setZagoMailConf) => {\n  const newConf = { ...zagoMailConf }\n  newConf.name = e.target.value\n  setZagoMailConf({ ...newConf })\n}\n\nexport const refreshZagoMailList = (\n  zagoMailConf,\n  setZagoMailConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = {\n    api_public_key: zagoMailConf.api_public_key,\n  }\n  bitsFetch(refreshListsRequestParams, 'zagoMail_lists')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...zagoMailConf }\n        if (result.data.zagoMailLists) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.zagoMailLists = result.data.zagoMailLists\n          setSnackbar({\n            show: true,\n            msg: __('ZagoMail lists refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ZagoMail lists found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setZagoMailConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ZagoMail lists refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n// refreshZagoMailTags\nexport const refreshZagoMailTags = (\n  zagoMailConf,\n  setZagoMailConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  setIsLoading( {tags : true})\n  const refreshListsRequestParams = {\n    api_public_key: zagoMailConf.api_public_key,\n  }\n  bitsFetch(refreshListsRequestParams, 'zagoMail_tags')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...zagoMailConf }\n        if (result.data.zagoMailTags) {\n          if (!newConf.tags) {\n            newConf.tags = {}\n          }\n          newConf.tags = result.data.zagoMailTags\n          setZagoMailConf({ ...newConf })\n          setSnackbar({\n            show: true,\n            msg: __('ZagoMail tags refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ZagoMail tags found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        // console.log('newConf', newConf)\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ZagoMail tags refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n// refreshMappedFields\nexport const refreshZagoMailFields = (\n  zagoMailConf,\n  setZagoMailConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = {\n    api_public_key: zagoMailConf.api_public_key,\n    listId: zagoMailConf.listId,\n  }\n  // console.log('zagoMailConf', zagoMailConf)\n  bitsFetch(refreshListsRequestParams, 'zagoMail_refresh_fields')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...zagoMailConf }\n        if (result.data.zagoMailField) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.fields = result.data.zagoMailField\n          const { fields } = newConf.default\n          newConf.field_map = Object.values(fields)\n            .filter((f) => f.required)\n            .map((f) => ({\n              formField: '',\n              zagoMailField: f.fieldId,\n              required: true,\n            }))\n          setSnackbar({\n            show: true,\n            msg: __('ZagoMail fields refreshed', 'bit-integrations'),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              'No ZagoMail fields found. Try changing the header row number or try again',\n              'bit-integrations',\n            ),\n          })\n        }\n\n        setZagoMailConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            'ZagoMail fields refresh failed. please try again',\n            'bit-integrations',\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = (zagoMailConf) => {\n  const mappedFields = zagoMailConf?.field_map\n    ? zagoMailConf.field_map.filter(\n      (mappedField) => !mappedField.formField\n          && mappedField.zagoMailField\n          && mappedField.required,\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","zagoMailConf","setZagoMailConf","newConf","__spreadValues","refreshZagoMailList","setIsLoading","setSnackbar","refreshListsRequestParams","result","refreshZagoMailTags","refreshZagoMailFields","fields","f","checkMappedFields","mappedField"],"mappings":"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"}