{"version":3,"file":"bi.196.707.js","sources":["../frontend-dev/src/components/AllIntegrations/Rapidmail/RapidmailCommonFunc.js"],"sourcesContent":["/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, rapidmailConf, setRapidmailConf, setIsLoading, setSnackbar, isNew, error, setError) => {\n  const newConf = { ...rapidmailConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setRapidmailConf({ ...newConf })\n}\n\nexport const getAllRecipient = (rapidmailConf, setRapidmailConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const queryParams = {\n    username: rapidmailConf.username,\n    password: rapidmailConf.password,\n  }\n  const loadPostTypes = bitsFetch(null, 'rapidmail_get_all_recipients', queryParams, 'GET')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...rapidmailConf }\n        if (!newConf.default) newConf.default = {}\n        if (result.data.recipientlists) {\n          newConf.default.recipientlists = result.data.recipientlists\n        }\n        setRapidmailConf({ ...newConf })\n        setIsLoading(false)\n        return 'Recipientlist refreshed successfully'\n      } else {\n        setIsLoading(false)\n        return 'Recipientlist refresh failed. please try again'\n      }\n    })\n  toast.promise(loadPostTypes, {\n    success: data => data,\n    error: __('Error Occurred', 'bit-integrations'),\n    loading: __('Loading Recipientslist...'),\n  })\n  // .catch(() => setIsLoading(false))\n}\n\nexport const generateMappedField = (rapidmailConf) => {\n  const requiredFlds = rapidmailConf?.recipientsFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', rapidmailFormField: field.key })) : [{ formField: '', rapidmailFormField: '' }]\n}\n\nexport const checkMappedFields = (rapidmailConf) => {\n  const mappedFields = rapidmailConf?.field_map ? rapidmailConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.rapidmailFormField || (!mappedField.formField === 'custom' && !mappedField.customValue))) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\nexport const handleAuthorize = (confTmp, setConf, setError, setisAuthorized, setIsLoading, setSnackbar) => {\n  if (!confTmp.username || !confTmp.password) {\n    setError({\n      username: !confTmp.username ? __('Username can\\'t be empty', 'bit-integrations') : '',\n      password: !confTmp.password ? __('Password can\\'t be empty', 'bit-integrations') : '',\n    })\n    return\n  }\n\n  setError({})\n  setIsLoading(true)\n\n  const tokenRequestParams = {\n    username: confTmp.username,\n    password: confTmp.password,\n  }\n\n  bitsFetch(tokenRequestParams, 'rapidmail_authorization')\n    .then(result => result)\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        newConf.tokenDetails = result.data\n        setConf(newConf)\n        setisAuthorized(true)\n        setSnackbar({ show: true, msg: __('Authorized Successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Authorization failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Authorization failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n}\n"],"names":["__","bitsFetch","_t","handleInput","rapidmailConf","setRapidmailConf","setIsLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","name","getAllRecipient","queryParams","loadPostTypes","result","toast","data","generateMappedField","requiredFlds","fld","field","checkMappedFields","mappedField","handleAuthorize","confTmp","setConf","setisAuthorized","tokenRequestParams"],"mappings":"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"}