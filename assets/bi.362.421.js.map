{"version":3,"file":"bi.362.421.js","sources":["../frontend-dev/src/components/AllIntegrations/Smaily/Smaily.jsx"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport SmailyAuthorization from './SmailyAuthorization'\nimport { checkMappedFields, handleInput } from './SmailyCommonFunc'\nimport SmailyIntegLayout from './SmailyIntegLayout'\n\nfunction Smaily({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({ auth: false })\n\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const staticFields = [\n    { key: 'email', label: 'Email', required: true },\n    { key: 'birthday', label: 'Birthday', required: false },\n  ]\n\n  const [smailyConf, setSmailyConf] = useState({\n    name: 'Smaily',\n    type: 'Smaily',\n    subdomain: process.env.NODE_ENV === 'development' ? 'b5bmlbqw' : '',\n    api_user_name: process.env.NODE_ENV === 'development' ? 'iyl32h' : '',\n    api_user_password: process.env.NODE_ENV === 'development' ? '6jlqbV3OnLTTy1iiHjGcOsi01sP2iJKQ' : '',\n    field_map: [\n      { formField: '', smailyFormField: '' },\n    ],\n    staticFields,\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(flow, setFlow, allIntegURL, smailyConf, navigate, '', '', setIsLoading)\n    resp.then(res => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(smailyConf)) {\n      toast.error('Please map mandatory fields')\n      return\n    }\n    smailyConf.field_map.length > 0 && setStep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <SmailyAuthorization\n        smailyConf={smailyConf}\n        setSmailyConf={setSmailyConf}\n        step={step}\n        setStep={setStep}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <SmailyIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, smailyConf, setSmailyConf, setLoading, setSnackbar)}\n          smailyConf={smailyConf}\n          setSmailyConf={setSmailyConf}\n          loading={loading}\n          setLoading={setLoading}\n          setSnackbar={setSnackbar}\n        />\n        <button\n          onClick={() => nextPage(3)}\n          disabled={!checkMappedFields(smailyConf)}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={smailyConf}\n        setDataConf={setSmailyConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default Smaily\n"],"names":["Smaily","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","loading","setLoading","step","setStep","snack","setSnackbar","staticFields","smailyConf","setSmailyConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","checkMappedFields","jsx","SnackMsg","Steps","SmailyAuthorization","__spreadValues","SmailyIntegLayout","e","handleInput","jsxs","__","IntegrationStepThree"],"mappings":"+uBAeA,SAASA,EAAO,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC1D,MAAMC,EAAWC,IACX,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAASC,CAAU,EAAIF,WAAS,CAAE,KAAM,GAAO,EAEhD,CAACG,EAAMC,CAAO,EAAIJ,WAAS,CAAC,EAC5B,CAACK,EAAOC,CAAW,EAAIN,WAAS,CAAE,KAAM,GAAO,EAC/CO,EAAe,CACnB,CAAE,IAAK,QAAS,MAAO,QAAS,SAAU,EAAK,EAC/C,CAAE,IAAK,WAAY,MAAO,WAAY,SAAU,EAAM,CAAA,EAGlD,CAACC,EAAYC,CAAa,EAAIT,WAAS,CAC3C,KAAM,SACN,KAAM,SACN,UAAiE,GACjE,cAAmE,GACnE,kBAAiG,GACjG,UAAW,CACT,CAAE,UAAW,GAAI,gBAAiB,EAAG,CACvC,EACA,aAAAO,EACA,QAAS,CAAC,CAAA,CACX,EAEKG,EAAa,IAAM,CACvBX,EAAa,EAAI,EACJY,EAAgBjB,EAAMD,EAASE,EAAaa,EAAYZ,EAAU,GAAI,GAAIG,CAAY,EAC9F,KAAYa,GAAA,OACXA,EAAI,SACAC,EAAA,SAAQC,EAAAF,EAAI,OAAJ,YAAAE,EAAU,GAAG,EAC3BlB,EAASD,CAAW,GAEdkB,EAAA,MAAMD,EAAI,MAAQA,CAAG,CAC7B,CACD,CAAA,EAGGG,EAAYC,GAAW,CAKvB,GAJJ,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,EAEF,CAACC,EAAkBT,CAAU,EAAG,CAClCK,EAAM,MAAM,6BAA6B,EACzC,MACF,CACAL,EAAW,UAAU,OAAS,GAAKJ,EAAQY,CAAM,CAAA,EAGnD,cACG,MACC,CAAA,SAAA,CAACE,EAAAA,IAAAC,EAAA,CAAS,MAAAd,EAAc,YAAAC,CAA0B,CAAA,EAClDY,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQjB,CAAA,CAAM,CAAE,CAAA,EAGjEe,EAAA,IAACG,EAAA,CACC,WAAAb,EACA,cAAAC,EACA,KAAAN,EACA,QAAAC,EACA,QAAAH,EACA,WAAAC,EACA,YAAAI,CAAA,CACF,SAGC,MAAI,CAAA,UAAU,gBAAgB,MAAOgB,EAAA,GAAMnB,IAAS,GAAK,CAAE,MAAO,IAAK,OAAQ,OAAQ,SAAU,SAAA,GAEhG,SAAA,CAAAe,EAAA,IAACK,EAAA,CACC,WAAA/B,EACA,YAAcgC,GAAMC,EAAYD,EAAGhB,EAAYC,CAAsC,EACrF,WAAAD,EACA,cAAAC,EACA,QAAAR,EACA,WAAAC,EACA,YAAAI,CAAA,CACF,EACAoB,EAAA,KAAC,SAAA,CACC,QAAS,IAAMX,EAAS,CAAC,EACzB,SAAU,CAACE,EAAkBT,CAAU,EACvC,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAmB,EAAG,OAAQ,kBAAkB,EAC7B,IAAI,IAELT,EAAAA,IAAC,MAAI,CAAA,UAAU,wCAAyC,CAAA,CAAA,CAAA,CAC1D,CAAA,EACF,EAGAA,EAAA,IAACU,EAAA,CACC,KAAAzB,EACA,WAAY,IAAMO,EAAW,EAC7B,UAAAZ,EACA,SAAUU,EACV,YAAaC,EACb,WAAAjB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}