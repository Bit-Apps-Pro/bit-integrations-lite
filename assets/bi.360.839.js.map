{"version":3,"file":"bi.360.839.js","sources":["../frontend-dev/src/components/AllIntegrations/SureCart/SureCartIntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/SureCart/SureCartFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/SureCart/SureCartIntegLayout.jsx"],"sourcesContent":["import { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const addFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    uploadFields ? newConf.relatedlists[tab - 1].upload_field_map.splice(i, 0, {}) : newConf.relatedlists[tab - 1].field_map.splice(i, 0, {})\n  } else {\n    uploadFields ? newConf.upload_field_map.splice(i, 0, {}) : newConf.field_map.splice(i, 0, {})\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const addContactFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n\n  newConf.field_map_contact.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    if (uploadFields) {\n      if (newConf.relatedlists[tab - 1].upload_field_map.length > 1) {\n        newConf.relatedlists[tab - 1].upload_field_map.splice(i, 1)\n      }\n    } else if (newConf.relatedlists[tab - 1].field_map.length > 1) {\n      newConf.relatedlists[tab - 1].field_map.splice(i, 1)\n    }\n  } else if (uploadFields) {\n    if (newConf.upload_field_map.length > 1) {\n      newConf.upload_field_map.splice(i, 1)\n    }\n  } else if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const delContactFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map_contact.length > 1) {\n    newConf.field_map_contact.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...conftTmp }\n  if (tab) {\n    if (uploadFields) newConf.relatedlists[tab - 1].upload_field_map[index][event.target.name] = event.target.value\n    else newConf.relatedlists[tab - 1].field_map[index][event.target.name] = event.target.value\n  } else if (uploadFields) newConf.upload_field_map[index][event.target.name] = event.target.value\n  else newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    if (tab) {\n      newConf.relatedlists[tab - 1].field_map[index].customValue = ''\n    } else newConf.field_map[index].customValue = ''\n  }\n\n  setConf({ ...newConf })\n}\n\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './SureCartIntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './SureCartCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function SureCartFieldMap({ i, field, formFields, sureCartConf, setSureCartConf }) {\n  if (sureCartConf?.field_map?.length === 1 && field.SureCartFormField === '') {\n    const newConf = { ...sureCartConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setSureCartConf(newConf)\n  }\n\n  const requiredFlds = sureCartConf?.customerFields?.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = sureCartConf?.customerFields?.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, sureCartConf, setSureCartConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, sureCartConf, setSureCartConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"SureCartFormField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.SureCartFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, sureCartConf, setSureCartConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, sureCartConf, setSureCartConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, sureCartConf, setSureCartConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { useState } from 'react'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from './SureCartIntegrationHelpers'\nimport SureCartFieldMap from './SureCartFieldMap'\n\nexport default function SureCartIntegLayout({ formID, formFields, handleInput, sureCartConf, setSureCartConf, isLoading, setIsLoading, setSnackbar, a }) {\n  const inputHandler = (e) => {\n    const newConf = { ...sureCartConf }\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n    } else {\n      delete newConf[name]\n    }\n\n    newConf[e.target.name] = e.target.value\n    setSureCartConf({ ...newConf })\n  }\n\n  const changeHandler = (val, name) => {\n    const newConf = { ...sureCartConf }\n    if (name === 'listId') {\n      if (val !== '') {\n        newConf[name] = val\n      } else {\n        delete newConf[name]\n      }\n    }\n\n    setSureCartConf({ ...newConf })\n  }\n  return (\n    <>\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      <>\n        <br />\n        <b className=\"wdt-200 d-in-b\">{__('Actions:', 'bit-integrations')}</b>\n        <select onChange={inputHandler} name=\"mainAction\" value={sureCartConf?.mainAction} className=\"btcd-paper-inp w-5\">\n          <option value=\"\">{__('Select Actions', 'bit-integrations')}</option>\n          {\n            sureCartConf?.allActions && sureCartConf.allActions.map(({ key, label }) => (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            ))\n          }\n        </select>\n        <br />\n        <div className=\"mt-4\">\n          <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n        </div>\n        <div className=\"btcd-hr mt-1\" />\n        <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n          <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n          <div className=\"txt-dp\"><b>{__('SureCart Fields', 'bit-integrations')}</b></div>\n        </div>\n\n        {sureCartConf.field_map.map((itm, i) => (\n          <SureCartFieldMap\n            key={`keap-m-${i + 9}`}\n            i={i}\n            field={itm}\n            formFields={formFields}\n            sureCartConf={sureCartConf}\n            setSureCartConf={setSureCartConf}\n          />\n        ))}\n        <br />\n        <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(sureCartConf.field_map.length, sureCartConf, setSureCartConf)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n      </>\n\n    </>\n  )\n}\n"],"names":["Recoil_index_18","jsxRuntimeExports","Loader","$btcbi","__","SmartTagField","generateMappedField","TagifyInput","handleCustomValue","addFieldMap","i","confTmp","setConf","uploadFields","tab","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","SureCartFieldMap","field","formFields","sureCartConf","setSureCartConf","_a","_b","_c","_d","tmp","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","isPro","jsx","jsxs","ev","f","e","key","label","Fragment","SureCartIntegLayout","formID","handleInput","isLoading","setIsLoading","setSnackbar","a","inputHandler","name","itm"],"mappings":"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"}