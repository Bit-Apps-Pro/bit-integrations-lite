{"version":3,"file":"bi.424.162.js","sources":["../frontend-dev/src/components/AllIntegrations/MailRelay/EditMailRelay.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, handleInput } from './MailRelayCommonFunc'\nimport MailRelayIntegLayout from './MailRelayIntegLayout'\n\nfunction EditMailRelay({ allIntegURL }) {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [mailRelayConf, setMailRelayConf] = useRecoilState($actionConf)\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({\n    list: false,\n    field: false,\n    auth: false,\n    tags: false,\n  })\n  const [snack, setSnackbar] = useState({ show: false })\n  const formField = useRecoilValue($formFields)\n\n  const saveConfig = () => {\n    if (!checkMappedFields(mailRelayConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    saveActionConf({ flow, allIntegURL, conf: mailRelayConf, navigate, edit: 1, setLoading, setSnackbar })\n  }\n\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 d-in-b\">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, mailRelayConf, setMailRelayConf)} name=\"name\" value={mailRelayConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n      <MailRelayIntegLayout\n        formID={flow.triggered_entity_id}\n        formFields={formField}\n        handleInput={(e) => handleInput(e, mailRelayConf, setMailRelayConf, setLoading, setSnackbar)}\n        mailRelayConf={mailRelayConf}\n        setMailRelayConf={setMailRelayConf}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={!mailRelayConf?.status}\n        isLoading={isLoading}\n        dataConf={mailRelayConf}\n        setDataConf={setMailRelayConf}\n        formFields={formField}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditMailRelay\n"],"names":["useNavigate","useParams","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$newFlow","$actionConf","$formFields","SnackMsg","__","EditFormInteg","EditWebhookInteg","saveActionConf","IntegrationStepThree","handleInput","checkMappedFields","MailRelayIntegLayout","EditMailRelay","allIntegURL","navigate","flow","setFlow","useRecoilState","mailRelayConf","setMailRelayConf","isLoading","setIsLoading","useState","loading","setLoading","snack","setSnackbar","formField","useRecoilValue","saveConfig","jsx","jsxs","e","checkWebhookIntegrationsExist"],"mappings":"AAeA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,gBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,iBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,iBAAA,MAAA,kBAAA,SAASC,EAAc,CAAE,YAAAC,GAAe,CACtC,MAAMC,EAAWpB,IACFC,EAAU,EACzB,KAAM,CAACoB,EAAMC,CAAO,EAAIC,EAAejB,CAAQ,EACzC,CAACkB,EAAeC,CAAgB,EAAIF,EAAehB,CAAW,EAC9D,CAACmB,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAASC,CAAU,EAAIF,WAAS,CACrC,KAAM,GACN,MAAO,GACP,KAAM,GACN,KAAM,EAAA,CACP,EACK,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAC/CK,EAAYC,EAAe1B,CAAW,EAEtC2B,EAAa,IAAM,CACnB,GAAA,CAACnB,EAAkBQ,CAAa,EAAG,CACzBQ,EAAA,CAAE,KAAM,GAAM,IAAKtB,EAAG,8BAA+B,kBAAkB,EAAG,EACtF,MACF,CACeG,EAAA,CAAE,KAAAQ,EAAM,YAAAF,EAAa,KAAMK,EAAe,SAAAJ,EAAU,KAAM,EAAG,WAAAU,EAAY,YAAAE,CAAa,CAAA,CAAA,EAGvG,cACG,MAAI,CAAA,MAAO,CAAE,MAAO,GACnB,EAAA,SAAA,CAACI,EAAAA,IAAA3B,EAAA,CAAS,MAAAsB,EAAc,YAAAC,CAA0B,CAAA,EAElDK,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAD,MAAC,KAAE,UAAU,iBAAkB,SAAG1B,EAAA,oBAAqB,kBAAkB,EAAE,EAC3E0B,EAAAA,IAAC,SAAM,UAAU,qBAAqB,SAAeE,GAAAvB,EAAYuB,EAAGd,EAAeC,CAAgB,EAAG,KAAK,OAAO,MAAOD,EAAc,KAAM,KAAK,OAAO,YAAad,EAAG,sBAAuB,kBAAkB,CAAG,CAAA,CAAA,EACvN,QACC,KAAG,EAAA,EACH,CAAC6B,EAA8BlB,EAAK,gBAAgB,GAAKe,EAAAA,IAACzB,GAAc,YAAAqB,EAA0B,EAClGO,EAA8BlB,EAAK,gBAAgB,GAAKe,EAAA,IAACxB,GAAiB,YAAAoB,EAA0B,EACrGI,EAAA,IAACnB,EAAA,CACC,OAAQI,EAAK,oBACb,WAAYY,EACZ,YAAcK,GAAMvB,EAAYuB,EAAGd,EAAeC,CAAyC,EAC3F,cAAAD,EACA,iBAAAC,EACA,QAAAI,EACA,WAAAC,EACA,YAAAE,CAAA,CACF,EAEAI,EAAA,IAACtB,EAAA,CACC,KAAI,GACJ,WAAAqB,EACA,SAAU,EAACX,GAAA,MAAAA,EAAe,QAC1B,UAAAE,EACA,SAAUF,EACV,YAAaC,EACb,WAAYQ,CAAA,CACd,QACC,KAAG,EAAA,CACN,CAAA,CAAA,CAEJ"}