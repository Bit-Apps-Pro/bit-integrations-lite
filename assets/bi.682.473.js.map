{"version":3,"file":"bi.682.473.js","sources":["../frontend-dev/src/components/AllIntegrations/NutshellCRM/NutshellCRM.jsx"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport toast from 'react-hot-toast'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport NutshellCRMAuthorization from './NutshellCRMAuthorization'\nimport { checkMappedFields, handleInput } from './NutshellCRMCommonFunc'\nimport NutshellCRMIntegLayout from './NutshellCRMIntegLayout'\n\nfunction NutshellCRM({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({})\n\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const peopleFields = [\n    { key: 'first_name', label: 'First Name', required: true },\n    { key: 'email', label: 'Email Address', required: true },\n    { key: 'last_name', label: 'Last Name', required: false },\n    { key: 'phone', label: 'Phone Number', required: false },\n    { key: 'address_1', label: 'Address 1', required: false },\n    { key: 'city', label: 'City', required: false },\n    { key: 'state', label: 'State', required: false },\n    { key: 'postalCode', label: 'Postal Code', required: false },\n    { key: 'country', label: 'Country', required: false },\n  ]\n\n  const companyFields = [\n    { key: 'name', label: 'Name', required: true },\n    { key: 'url', label: 'URL', required: false },\n    { key: 'phone', label: 'Phone Number', required: false },\n    { key: 'address_1', label: 'Address 1', required: false },\n    { key: 'city', label: 'City', required: false },\n    { key: 'state', label: 'State', required: false },\n    { key: 'postalCode', label: 'Postal Code', required: false },\n    { key: 'country', label: 'Country', required: false },\n  ]\n\n  const leadFields = [\n    { key: 'description', label: 'Lead Description', required: true },\n    { key: 'dueTime', label: 'Due Time', required: false },\n    { key: 'confidence', label: 'Confidence', required: false },\n  ]\n\n  const [nutshellCRMConf, setNutshellCRMConf] = useState({\n    name: 'NutshellCRM',\n    type: 'NutshellCRM',\n    user_name: process.env.NODE_ENV === 'development' ? 'niloy@bitcode.pro' : '',\n    api_token: process.env.NODE_ENV === 'development' ? '040b25bff9834b573b51c500e6489ca714d8bcf6' : '',\n    field_map: [\n      { formField: '', nutshellCRMFormField: '' },\n    ],\n    actionName: '',\n    actionId: '',\n    peopleFields,\n    companyFields,\n    leadFields,\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(flow, setFlow, allIntegURL, nutshellCRMConf, navigate, '', '', setIsLoading)\n    resp.then(res => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(nutshellCRMConf)) {\n      toast.error('Please map mandatory fields')\n      return\n    }\n\n    nutshellCRMConf.field_map.length > 0 && setStep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <NutshellCRMAuthorization\n        nutshellCRMConf={nutshellCRMConf}\n        setNutshellCRMConf={setNutshellCRMConf}\n        step={step}\n        setStep={setStep}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <NutshellCRMIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, nutshellCRMConf, setNutshellCRMConf, setLoading, setSnackbar)}\n          nutshellCRMConf={nutshellCRMConf}\n          setNutshellCRMConf={setNutshellCRMConf}\n          loading={loading}\n          setLoading={setLoading}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        {nutshellCRMConf?.actionName && (\n          <button\n            onClick={() => nextPage(3)}\n            disabled={!(checkMappedFields(nutshellCRMConf))}\n            className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n            type=\"button\"\n          >\n            {__('Next', 'bit-integrations')}\n            {' '}\n            &nbsp;\n            <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n          </button>\n        )}\n      </div>\n\n      {/* STEP 3 */}\n      {nutshellCRMConf?.actionName && (\n        <IntegrationStepThree\n          step={step}\n          saveConfig={() => saveConfig()}\n          isLoading={isLoading}\n          dataConf={nutshellCRMConf}\n          setDataConf={setNutshellCRMConf}\n          formFields={formFields}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default NutshellCRM\n"],"names":["NutshellCRM","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","loading","setLoading","step","setStep","snack","setSnackbar","peopleFields","companyFields","leadFields","nutshellCRMConf","setNutshellCRMConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","checkMappedFields","jsx","SnackMsg","Steps","NutshellCRMAuthorization","__spreadValues","NutshellCRMIntegLayout","e","handleInput","jsxs","__","IntegrationStepThree"],"mappings":"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"}