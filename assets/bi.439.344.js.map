{"version":3,"file":"bi.439.344.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoCampaigns/ZohoCampaigns.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig, setGrantTokenResponse } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport ZohoCampaignsAuthorization from './ZohoCampaignsAuthorization'\nimport { checkMappedFields, handleInput } from './ZohoCampaignsCommonFunc'\nimport ZohoCampaignsIntegLayout from './ZohoCampaignsIntegLayout'\n\nfunction ZohoCampaigns({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [campaignsConf, setCampaignsConf] = useState({\n    name: 'Zoho Campaigns',\n    type: 'Zoho Campaigns',\n    clientId: process.env.NODE_ENV === 'development' ? '1000.K11WD288GBYU18O09VZRC6T782Y06H' : '',\n    clientSecret: process.env.NODE_ENV === 'development' ? '553f29ae63658dcc604fa90fa36f28be4fd4222c87' : '',\n    list: '',\n    field_map: [\n      { formField: '', zohoFormField: '' },\n    ],\n  })\n\n  useEffect(() => {\n    window.opener && setGrantTokenResponse('zohoCampaigns')\n  }, [])\n\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (!checkMappedFields(campaignsConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n\n    if (campaignsConf.list !== '' && campaignsConf.table !== '' && campaignsConf.field_map.length > 0) {\n      setstep(3)\n    }\n  }\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <ZohoCampaignsAuthorization\n        formID={formID}\n        campaignsConf={campaignsConf}\n        setCampaignsConf={setCampaignsConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ width: step === 2 && 900, height: step === 2 && 'auto' }}>\n        <ZohoCampaignsIntegLayout\n          formID={formID}\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar)}\n          campaignsConf={campaignsConf}\n          setCampaignsConf={setCampaignsConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={campaignsConf.list === '' || campaignsConf.table === '' || campaignsConf.field_map.length < 1}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveIntegConfig(flow, setFlow, allIntegURL, campaignsConf, navigate, '', '', setIsLoading)}\n        isLoading={isLoading}\n        dataConf={campaignsConf}\n        setDataConf={setCampaignsConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default ZohoCampaigns\n"],"names":["ZohoCampaigns","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","campaignsConf","setCampaignsConf","useEffect","setGrantTokenResponse","nextPage","checkMappedFields","__","jsx","SnackMsg","Steps","ZohoCampaignsAuthorization","jsxs","ZohoCampaignsIntegLayout","e","handleInput","BackIcn","IntegrationStepThree","saveIntegConfig"],"mappings":"ofAaA,SAASA,EAAc,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CACjE,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACb,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAC/C,CAACK,EAAeC,CAAgB,EAAIN,WAAS,CACjD,KAAM,iBACN,KAAM,iBACN,SAA2F,GAC3F,aAAsG,GACtG,KAAM,GACN,UAAW,CACT,CAAE,UAAW,GAAI,cAAe,EAAG,CACrC,CAAA,CACD,EAEDO,EAAAA,UAAU,IAAM,CACP,OAAA,QAAUC,EAAsB,eAAe,CACxD,EAAG,CAAE,CAAA,EAEL,MAAMC,EAAW,IAAM,CAIjB,GAHJ,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,EACF,CAACC,EAAkBL,CAAa,EAAG,CACzBD,EAAA,CAAE,KAAM,GAAM,IAAKO,EAAG,8BAA+B,kBAAkB,EAAG,EACtF,MACF,CAEIN,EAAc,OAAS,IAAMA,EAAc,QAAU,IAAMA,EAAc,UAAU,OAAS,GAC9FH,EAAQ,CAAC,CACX,EAEF,cACG,MACC,CAAA,SAAA,CAACU,EAAAA,IAAAC,EAAA,CAAS,MAAAV,EAAc,YAAAC,CAA0B,CAAA,EAClDQ,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQb,CAAA,CAAM,CAAE,CAAA,EAGjEW,EAAA,IAACG,EAAA,CACC,OAAAnB,EACA,cAAAS,EACA,iBAAAC,EACA,KAAAL,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAGCY,EAAA,KAAA,MAAA,CAAI,UAAU,gBAAgB,MAAO,CAAE,MAAOf,IAAS,GAAK,IAAK,OAAQA,IAAS,GAAK,MACtF,EAAA,SAAA,CAAAW,EAAA,IAACK,EAAA,CACC,OAAArB,EACA,WAAAN,EACA,YAAc4B,GAAMC,EAAYD,EAAGtB,EAAQS,EAAeC,EAAkBP,EAAcK,CAAW,EACrG,cAAAC,EACA,iBAAAC,EACA,UAAAR,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAEAY,EAAA,KAAC,SAAA,CACC,QAAS,IAAMP,EAAU,EACzB,SAAUJ,EAAc,OAAS,IAAMA,EAAc,QAAU,IAAMA,EAAc,UAAU,OAAS,EACtG,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAM,EAAG,OAAQ,kBAAkB,EAC9BC,EAAAA,IAACQ,EAAQ,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACpC,CAAA,EAEF,EAGAR,EAAA,IAACS,EAAA,CACC,KAAApB,EACA,WAAY,IAAMqB,EAAgB9B,EAAMD,EAASE,EAAaY,EAAeX,EAAU,GAAI,GAAIK,CAAY,EAC3G,UAAAD,EACA,SAAUO,EACV,YAAaC,EACb,WAAAhB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}