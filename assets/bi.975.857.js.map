{"version":3,"file":"bi.975.857.js","sources":["../frontend-dev/src/components/AllIntegrations/FreshSales/FreshSalesCommonFunc.js"],"sourcesContent":["/* eslint-disable radix */\n/* eslint-disable no-unused-expressions */\nimport toast from 'react-hot-toast'\nimport { __, sprintf } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, recordTab, freshSalesConf, setFreshSalesConf, formID, setIsLoading, setSnackbar, isNew, error, setError) => {\n  let newConf = { ...freshSalesConf }\n  if (recordTab === 0) {\n    if (isNew) {\n      const rmError = { ...error }\n      rmError[e.target.name] = ''\n      setError({ ...rmError })\n    }\n    if (e.target.value !== '') {\n      if (e.target.name !== 'module') {\n        newConf.moduleData[e.target.name] = parseInt(e.target.value)\n      } else {\n        newConf.moduleData = {}\n        newConf.moduleData[e.target.name] = e.target.value\n      }\n    } else {\n      delete newConf.moduleData[e.target.name]\n    }\n  } else {\n    if (!newConf.relatedlists) {\n      newConf.relatedlists = []\n    }\n    if (e.target.value !== '') {\n      if (e.target.name !== 'module') {\n        newConf.relatedlists[recordTab - 1][e.target.name] = parseInt(e.target.value)\n      } else {\n        newConf.relatedlists[recordTab - 1].moduleData = {}\n        newConf.relatedlists[recordTab - 1][e.target.name] = e.target.value\n      }\n    } else {\n      delete newConf.relatedlists[recordTab - 1][e.target.name]\n    }\n  }\n\n  switch (e.target.name) {\n    case 'module':\n      newConf = moduleChange(recordTab, formID, newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n      break\n    case 'contact_view_id':\n      newConf = contactViewChange(recordTab, formID, newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n      break\n    case 'account_view_id':\n      newConf = accountViewChange(recordTab, formID, newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n      break\n    default:\n      break\n  }\n  setFreshSalesConf({ ...newConf })\n}\n\nexport const handleTabChange = (recordTab, settab) => {\n  settab(recordTab)\n}\n\nexport const moduleChange = (recordTab, formID, freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...freshSalesConf }\n  \n  if (!newConf.relatedlists[recordTab - 1]) newConf.relatedlists[recordTab - 1] = {}\n  const module = recordTab === 0 ? newConf.moduleData.module : newConf.relatedlists[recordTab - 1].module\n\n  if (recordTab === 0) {\n    newConf.actions = {}\n    newConf.field_map = [{ formField: '', freshSalesFormField: '' }]\n    newConf.relatedlists = []\n    if ([ 'Contact'].includes(module)) {\n      !newConf.default.views && accountRefreshViews(newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n    }\n    if (['Deal'].includes(module)) {\n      !newConf.default.views && contactRefreshViews(newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n    }\n\n    if (!newConf.default.modules?.[module]?.fields && module !== '' && module !== undefined) {\n      setTimeout(() => {\n         refreshFields(module, newConf, setFreshSalesConf, recordTab)\n      }, 1000)\n    } else {\n      newConf.field_map = newConf.default.modules?.[module]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n    }\n  } else {\n    newConf.relatedlists[recordTab - 1].actions = {}\n    newConf.relatedlists[recordTab - 1].field_map = [{ formField: '', freshSalesFormField: '' }]\n    if (!newConf.default.modules?.[module]?.fields && module !== '' && module !== undefined) {\n      setTimeout(() => {\n        refreshFields(module, newConf, setFreshSalesConf, recordTab)\n      }, 1000)\n    } else {\n      newConf.relatedlists[recordTab - 1].field_map = newConf.default.modules?.[module]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n    }\n  }\n\n  return newConf\n}\n\nexport const accountViewChange = (recordTab, formID, freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...freshSalesConf }\n  if (!newConf.relatedlists[recordTab - 1]) newConf.relatedlists[recordTab - 1] = {}\n  const view = recordTab === 0 ? newConf.moduleData.module : newConf.relatedlists[recordTab - 1].module\n\n  if (recordTab === 0) {\n    newConf.actions = {}\n    newConf.field_map = [{ formField: '', freshSalesFormField: '' }]\n    newConf.relatedlists = []\n    if (['Deal', 'Contact'].includes(view)) {\n       refreshAccounts(newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n       if (!newConf.default.modules?.[view]?.fields && view !== '' && view !== undefined) {\n        setTimeout(() => {\n           refreshFields(view, newConf, setFreshSalesConf, recordTab)\n        }, 1000)\n      } else {\n        newConf.field_map = newConf.default.modules?.[view]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n      }\n    }\n  } else {\n    newConf.relatedlists[recordTab - 1].actions = {}\n    newConf.relatedlists[recordTab - 1].field_map = [{ formField: '', freshSalesFormField: '' }]\n    if (!newConf.default.modules?.[view]?.fields && view !== '' && view !== undefined) {\n      setTimeout(() => {\n        refreshFields(view, newConf, setFreshSalesConf, recordTab)\n      }, 1000)\n    } else {\n      newConf.relatedlists[recordTab - 1].field_map = newConf.default.modules?.[view]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n    }\n  }\n  return newConf\n}\n\nexport const contactViewChange = (recordTab, formID, freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...freshSalesConf }\n  if (!newConf.relatedlists[recordTab - 1]) newConf.relatedlists[recordTab - 1] = {}\n  const view = recordTab === 0 ? newConf.moduleData.module : newConf.relatedlists[recordTab - 1].module\n  if (recordTab === 0) {\n    newConf.actions = {}\n    newConf.field_map = [{ formField: '', freshSalesFormField: '' }]\n    newConf.relatedlists = []\n    if (['Deal'].includes(view)) {\n      !newConf.default.contacts && refreshContacts(newConf, setFreshSalesConf, setIsLoading, setSnackbar)\n      if (!newConf.default.modules?.[view]?.fields && view !== '' && view !== undefined) {\n        setTimeout(() => {\n           refreshFields(view, newConf, setFreshSalesConf, recordTab)\n        }, 1000)\n      } else {\n        newConf.field_map = newConf.default.modules?.[view]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n      }\n    }\n  } else {\n    newConf.relatedlists[recordTab - 1].actions = {}\n    newConf.relatedlists[recordTab - 1].field_map = [{ formField: '', freshSalesFormField: '' }]\n    if (!newConf.default.modules?.[view]?.fields && view !== '' && view !== undefined) {\n      setTimeout(() => {\n        refreshFields(view, newConf, setFreshSalesConf, recordTab)\n      }, 1000)\n    } else {\n      newConf.relatedlists[recordTab - 1].field_map = newConf.default.modules?.[view]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n    }\n  }\n  return newConf\n}\n\nexport const refreshFields = (module, freshSalesConf, setFreshSalesConf, recordTab) => {\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module}\n  bitsFetch(requestParams, 'FreshSales_refresh_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.modules[module].fields) newConf.default.modules[module].fields = {}\n        if (result.data) {\n          newConf.default.modules[module].fields = result.data\n          if (recordTab === 0) {\n            newConf.field_map = newConf.default.modules?.[module]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n          } else {\n            newConf.relatedlists[recordTab - 1].field_map = newConf.default.modules?.[module]?.requiredFields ? generateMappedField(recordTab, newConf) : [{ formField: '', freshSalesFormField: '' }]\n          }\n        }\n        setFreshSalesConf({ ...newConf })\n      }\n    })\n}\n\nexport const accountRefreshViews = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'filters' , type: 'sales_accounts' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.accountViews) newConf.default.accountViews = {}\n        if (result.data) {\n          newConf.default.accountViews = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Account views refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Account views refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Account views refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const contactRefreshViews = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'filters' , type: 'contacts' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.contactViews) newConf.default.contactViews = {}\n        if (result.data) {\n          newConf.default.contactViews = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Contact views refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Contact views refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Contact views refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshAccounts = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , account_view_id: freshSalesConf.moduleData.account_view_id ,contact_view_id: freshSalesConf.moduleData.contact_view_id  ,module: 'sales_accounts' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.accounts) newConf.default.accounts = {}\n        if (result.data) {\n          newConf.default.accounts = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Accounts refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Accounts refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Accounts refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshContacts = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , contact_view_id: freshSalesConf.moduleData.contact_view_id , account_view_id: freshSalesConf.moduleData.account_view_id   , module: 'contacts' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.contacts) newConf.default.contacts = {}\n        if (result.data) {\n          newConf.default.contacts = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Contacts refreshed', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Contacts refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Contacts refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const getAllOwners = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'users' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.owners) newConf.default.owners = {}\n        if (result.data) {\n          newConf.default.owners = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Owners fetched successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Owners fetch failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Owners fetch failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const getAllLeadLabels = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'leadLabels' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.leadLabels) newConf.default.leadLabels = {}\n        if (result.data) {\n          newConf.default.leadLabels = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Labels fetched successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Labels fetch failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Labels fetch failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\nexport const getAllCurrencies = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'currencies' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.currencies) newConf.default.currencies = {}\n        if (result.data) {\n          newConf.default.currencies = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Currencies fetched successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Currencies fetch failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Currencies fetch failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const getDealStages = (freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const requestParams = { api_key: freshSalesConf.api_key,  bundle_alias: freshSalesConf.bundle_alias , module: 'stages' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...freshSalesConf }\n        if (!newConf.default.stages) newConf.default.stages = {}\n        if (result.data) {\n          newConf.default.stages = result.data\n        }\n        setFreshSalesConf({ ...newConf })\n        setSnackbar({ show: true, msg: __('Stages fetched successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Stages fetch failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Stages fetch failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const generateMappedField = (recordTab, freshSalesConf) => {\n  const module = recordTab === 0 ? freshSalesConf.moduleData.module : freshSalesConf.relatedlists[recordTab - 1].module\n\n  const requiredFlds = freshSalesConf?.default?.modules?.[module]?.fields?.filter(\n    (fld) => fld.required === true,\n  )\n  return requiredFlds?.length > 0\n    ? requiredFlds.map((field) => ({\n      formField: '',\n      freshSalesFormField: field.key,\n    }))\n    : [{ formField: '', freshSalesFormField: '' }]\n}\n\nexport const checkMappedFields = (freshSalesConf) => {\n  const mappedFields = freshSalesConf?.field_map ? freshSalesConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.freshSalesFormField && freshSalesConf?.default?.modules?.[freshSalesConf.moduleData.module]?.requiredFields?.indexOf(mappedField.freshSalesFormField) !== -1)) : []\n  const mappedRelatedFields = freshSalesConf.relatedlists.map(relatedlist => relatedlist.field_map.filter(mappedField => !mappedField.formField && mappedField.freshSalesFormField))\n  if (mappedFields.length > 0 || mappedRelatedFields.some(relatedField => relatedField.length)) {\n    return false\n  }\n\n  return true\n}\n\nexport const checkRequired = (freshSalesConf) => {\n  if (freshSalesConf.moduleData?.module !== '' && freshSalesConf.default.modules?.[freshSalesConf?.moduleData?.module]?.required) {\n    if (['Leads', 'Deal', 'Activities', 'Notes'].includes(freshSalesConf.moduleData.module) && (freshSalesConf.moduleData.account_id === undefined && freshSalesConf.moduleData?.contact_id === undefined)) {\n      return false\n    }\n\n    if (freshSalesConf.moduleData.module === 'Contacts' && freshSalesConf.moduleData.account_id === undefined) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const handleAuthorize = (\n  confTmp,\n  setError,\n  setisAuthorized,\n  setIsLoading,\n) => {\n  if ( !confTmp.bundle_alias || !confTmp.api_key ) {\n    setError({\n      bundle_alias: !confTmp.bundle_alias ? __('Bundle Alias (Account URL) can\\'t be empty', 'bit-integrations') \n      : '',\n      api_key: !confTmp.api_key\n        ? __(\"Api Key can't be empty\", 'bit-integrations') : '',\n    })\n    return\n  }\n  setError({})\n  setIsLoading(true)\n  const requestParams = { api_key: confTmp.api_key,  bundle_alias: confTmp.bundle_alias , module: 'filters' }\n\n  bitsFetch(requestParams, 'FreshSales_fetch_meta_data').then((result) => {\n    if (result && result.success) {\n      setisAuthorized(true)\n      setIsLoading(false)\n      toast.success(__('Authorized successfully', 'bit-integrations'))\n      return\n    }\n    setIsLoading(false)\n    toast.error(__('Authorized failed', 'bit-integrations'))\n  })\n}\n"],"names":["__","bitsFetch","_t","sprintf","handleInput","recordTab","freshSalesConf","setFreshSalesConf","formID","setIsLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","rmError","moduleChange","contactViewChange","accountViewChange","handleTabChange","settab","_a","_b","_c","_d","_e","_f","_g","_h","module","accountRefreshViews","contactRefreshViews","refreshFields","generateMappedField","view","refreshAccounts","refreshContacts","requestParams","result","requiredFlds","fld","field","checkMappedFields","mappedFields","mappedField","mappedRelatedFields","relatedlist","relatedField","checkRequired","handleAuthorize","confTmp","setisAuthorized","toast"],"mappings":"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"}