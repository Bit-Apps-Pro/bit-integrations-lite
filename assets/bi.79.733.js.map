{"version":3,"file":"bi.79.733.js","sources":["../frontend-dev/src/components/AllIntegrations/Telegram/TelegramActions.jsx","../frontend-dev/src/components/AllIntegrations/Telegram/TelegramIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport { deepCopy } from '../../../Utils/Helpers'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\n\nexport default function TelegramActions({ formFields, telegramConf, setTelegramConf }) {\n  const [actionMdl, setActionMdl] = useState({ show: false })\n  const actionHandler = (e) => {\n    const newConf =  deepCopy(telegramConf)\n    if (e.target.value !== '') {\n      newConf.actions.attachments = e.target.value\n    } else {\n      delete newConf.actions.attachments\n    }\n    setTelegramConf({ ...newConf })\n  }\n  return (\n    <div className=\"pos-rel\">\n      <div className=\"d-flx flx-wrp\">\n        <TableCheckBox onChange={() => setActionMdl({ show: 'attachments' })} checked={'attachments' in telegramConf.actions} className=\"wdt-200 mt-4 mr-2\" value=\"Attachment\" title={__('Attachments', 'bit-integrations')} subTitle={__('Add attachments from BitForm to send Telegram.', 'bit-integrations')} />\n      </div>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt=\"Ok\"\n        show={actionMdl.show === 'attachments'}\n        close={() => setActionMdl({ show: false })}\n        action={() => setActionMdl({ show: false })}\n        title={__('Select Attachment', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2\" />\n        <div className=\"mt-2\">{__('Please select file upload fields', 'bit-integrations')}</div>\n        <select onChange={(e) => actionHandler(e)} name=\"attachments\" value={telegramConf.actions?.attachments} className=\"btcd-paper-inp w-10 mt-2\">\n          <option value=\"\">{__('Select file upload field', 'bit-integrations')}</option>\n          {\n            formFields.filter(itm => (itm.type === 'file')).map(itm => (\n              <option key={itm.name + 1} value={itm.name}>\n                {itm.label}\n              </option>\n            ))\n          }\n        </select>\n      </ConfirmModal>\n    </div>\n  )\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { useParams } from 'react-router-dom'\nimport { __ } from '../../../Utils/i18nwrap'\nimport CheckBox from '../../Utilities/CheckBox'\nimport Loader from '../../Loaders/Loader'\nimport TinyMCE from '../../Utilities/TinyMCE'\nimport TelegramActions from './TelegramActions'\nimport { refreshGetUpdates } from './TelegramCommonFunc'\n\nexport default function TelegramIntegLayout({ formID, formFields, telegramConf, setTelegramConf, isLoading, setIsLoading, setSnackbar }) {\n  const { id } = useParams()\n  const handleInput = e => {\n    const newConf = { ...telegramConf }\n    newConf[e.target.name] = e.target.value\n    setTelegramConf(newConf)\n  }\n\n  const setMessageBody = (val) => {\n    const newConf = { ...telegramConf }\n    newConf.body = val\n    setTelegramConf(newConf)\n  }\n  const changeActionRun = (e) => {\n    const newConf = { ...telegramConf }\n    /* if (newConf?.body) {\n      newConf.body = ''\n    } */\n    newConf.parse_mode = e.target.value\n    setTelegramConf(newConf)\n  }\n\n  return (\n    <>\n      <br />\n      <div className=\"flx\">\n        <b className=\"wdt-150 d-in-b\">{__('Chat List: ', 'bit-integrations')}</b>\n        <select onChange={handleInput} name=\"chat_id\" value={telegramConf.chat_id} className=\"btcd-paper-inp w-5\">\n          <option value=\"\">{__('Select Chat List', 'bit-integrations')}</option>\n          {\n            telegramConf?.default?.telegramChatLists && Object.keys(telegramConf.default.telegramChatLists).filter((item) => telegramConf.default.telegramChatLists[item].id !== null).map(chatListname => (\n              <option key={chatListname} value={telegramConf.default.telegramChatLists[chatListname].id}>\n                {telegramConf.default.telegramChatLists[chatListname].name}\n              </option>\n            ))\n          }\n        </select>\n        <button onClick={() => refreshGetUpdates(telegramConf, setTelegramConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Telegram List', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n      </div>\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {telegramConf?.chat_id\n        && (\n          <>\n            <div className=\"flx mt-4\">\n              <b className=\"wdt-150 d-in-b\">{__('Parse Mode: ', 'bit-integrations')}</b>\n              <CheckBox radio onChange={changeActionRun} name=\"HTML\" title={<small className=\"txt-dp\">{__('HTML', 'bit-integrations')}</small>} checked={telegramConf.parse_mode === 'HTML'} value=\"HTML\" />\n              <CheckBox radio onChange={changeActionRun} name=\"MarkdownV2\" title={<small className=\"txt-dp\">{__('Markdown v2', 'bit-integrations')}</small>} checked={telegramConf.parse_mode === 'MarkdownV2'} value=\"MarkdownV2\" />\n            </div>\n            <div className=\"flx mt-4\">\n              <b className=\"wdt-200 d-in-b\">{__('Messages: ', 'bit-integrations')}</b>\n              {telegramConf?.parse_mode === 'HTML' ? (\n                <TinyMCE\n                  formFields={formFields}\n                  id={`telegram-message-${id}`}\n                  value={telegramConf.body}\n                  onChangeHandler={setMessageBody}\n                  width=\"100%\"\n                  toolbarMnu=\"bold italic underline strikethrough | link | code | addFormField | toggleCode\"\n                />\n              ) : (\n                <>\n                  <textarea className=\"w-7\" onChange={handleInput} name=\"body\" rows=\"5\" value={telegramConf.body} />\n                  <MultiSelect\n                    options={formFields.filter(f => (f.type !== 'file')).map(f => ({ label: f.label, value: `\\${${f.name}}` }))}\n                    className=\"btcd-paper-drpdwn wdt-200 ml-2\"\n                    singleSelect\n                    onChange={val => setMessageBody(val)}\n                  />\n                </>\n              )}\n            </div>\n            <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n            <div className=\"btcd-hr mt-1\" />\n            <TelegramActions\n              telegramConf={telegramConf}\n              setTelegramConf={setTelegramConf}\n              formFields={formFields}\n            />\n          </>\n        )}\n    </>\n  )\n}\n"],"names":["TelegramActions","formFields","telegramConf","setTelegramConf","actionMdl","setActionMdl","useState","actionHandler","e","newConf","deepCopy","__spreadValues","jsxs","jsx","TableCheckBox","__","ConfirmModal","_a","itm","TelegramIntegLayout","formID","isLoading","setIsLoading","setSnackbar","id","useParams","handleInput","setMessageBody","val","changeActionRun","Fragment","item","chatListname","refreshGetUpdates","Loader","CheckBox","TinyMCE","MultiSelect","f"],"mappings":"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"}