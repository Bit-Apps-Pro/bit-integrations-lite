{"version":3,"file":"bi.914.379.js","sources":["../frontend-dev/src/components/AllIntegrations/Slack/Slack.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport SlackAuthorization from './SlackAuthorization'\nimport { handleInput } from './SlackCommonFunc'\nimport SlackIntegLayout from './SlackIntegLayout'\nimport BackIcn from '../../../Icons/BackIcn'\n\nfunction Slack({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const [slackConf, setSlackConf] = useState({\n    name: 'Slack',\n    type: 'Slack',\n    parse_mode: 'HTML',\n    field_map: [{ formField: '', slackFormField: '' }],\n    channel_id: '',\n    body: '',\n    actions: {},\n  })\n\n  const nextPage = (val) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (val === 3) {\n      if (slackConf.name !== '' && slackConf.channel_id) {\n        setstep(val)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\">\n        <Steps step={3} active={step} />\n      </div>\n\n      {/* STEP 1 */}\n      <SlackAuthorization\n        formID={formID}\n        slackConf={slackConf}\n        setSlackConf={setSlackConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n\n      <div\n        className=\"btcd-stp-page\"\n        style={{\n          ...(step === 2 && {\n            width: 900,\n            height: 'auto',\n            overflow: 'visible',\n          }),\n        }}\n      >\n        <SlackIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, slackConf, setSlackConf, setIsLoading, setSnackbar)}\n          slackConf={slackConf}\n          setSlackConf={setSlackConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={slackConf.channel_id === ''}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, conf: slackConf, navigate, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={slackConf}\n        setDataConf={setSlackConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default Slack\n"],"names":["Slack","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","slackConf","setSlackConf","nextPage","val","jsx","SnackMsg","Steps","SlackAuthorization","jsxs","__spreadValues","SlackIntegLayout","e","handleInput","__","BackIcn","IntegrationStepThree","saveActionConf"],"mappings":"8wBAcA,SAASA,EAAM,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CACzD,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACb,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAE/C,CAACK,EAAWC,CAAY,EAAIN,WAAS,CACzC,KAAM,QACN,KAAM,QACN,WAAY,OACZ,UAAW,CAAC,CAAE,UAAW,GAAI,eAAgB,GAAI,EACjD,WAAY,GACZ,KAAM,GACN,QAAS,CAAC,CAAA,CACX,EAEKO,EAAYC,GAAQ,CACxB,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,EACFA,IAAQ,GACNH,EAAU,OAAS,IAAMA,EAAU,YACrCH,EAAQM,CAAG,CAEf,EAGF,cACG,MACC,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAS,MAAAP,EAAc,YAAAC,CAA0B,CAAA,EAClDK,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQV,CAAA,CAAM,CAChC,CAAA,EAGAQ,EAAA,IAACG,EAAA,CACC,OAAAhB,EACA,UAAAS,EACA,aAAAC,EACA,KAAAL,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAIAS,EAAA,KAAC,MAAA,CACC,UAAU,gBACV,MAAOC,EAAA,GACDb,IAAS,GAAK,CAChB,MAAO,IACP,OAAQ,OACR,SAAU,SACZ,GAGF,SAAA,CAAAQ,EAAA,IAACM,EAAA,CACC,WAAAzB,EACA,YAAc0B,GAAMC,EAAYD,EAAGX,EAAWC,CAAuC,EACrF,UAAAD,EACA,aAAAC,EACA,UAAAR,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAEAS,EAAA,KAAC,SAAA,CACC,QAAS,IAAMN,EAAS,CAAC,EACzB,SAAUF,EAAU,aAAe,GACnC,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAa,EAAG,OAAQ,kBAAkB,EAC9BT,EAAAA,IAACU,EAAQ,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACpC,CAAA,CAAA,CACF,EAGAV,EAAA,IAACW,EAAA,CACC,KAAAnB,EACA,WAAY,IAAMoB,EAAe,CAAE,KAAA7B,EAAM,QAAAD,EAAS,YAAAE,EAAa,KAAMY,EAAW,SAAAX,EAAU,aAAAK,EAAc,YAAAK,CAAA,CAAa,EACrH,UAAAN,EACA,SAAUO,EACV,YAAaC,EACb,WAAAhB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}