{"version":3,"file":"bi.751.407.js","sources":["../frontend-dev/src/components/AllIntegrations/OmniSend/OmniSend.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport OmniSendAuthorization from './OmniSendAuthorization'\nimport { checkMappedFields, handleInput } from './OmniSendCommonFunc'\nimport OmniSendIntegLayout from './OmniSendIntegLayout'\n\nfunction OmniSend({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({\n    channel: false,\n    field: false,\n    auth: false,\n  })\n\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const omniSendFields = [\n    {\n      key: 'email',\n      label: 'Email',\n      required: false,\n    },\n    {\n      key: 'phone_number',\n      label: 'Phone Number',\n      required: false,\n    },\n    {\n      key: 'firstName',\n      label: 'First Name',\n      required: false,\n    },\n    {\n      key: 'lastName',\n      label: 'Last Name',\n      required: false,\n    },\n    {\n      key: 'country',\n      label: 'Country',\n      required: false,\n    },\n\n    {\n      key: 'countryCode',\n      label: 'Country Code',\n      required: false,\n    },\n    {\n      key: 'state',\n      label: 'State',\n      required: false,\n    },\n    {\n      key: 'city',\n      label: 'City',\n      required: false,\n    },\n    {\n      key: 'address',\n      label: 'Address',\n      required: false,\n    },\n    {\n      key: 'postalCode',\n      label: 'Postal Code',\n      required: false,\n    },\n    {\n      key: 'gender',\n      label: 'Gender',\n      required: false,\n    },\n    {\n      key: 'birthdate',\n      label: 'Birth Date',\n      required: false,\n    },\n  ]\n  const [omniSendConf, setOmniSendConf] = useState({\n    name: 'OmniSend',\n    type: 'OmniSend',\n    api_key:\n      process.env.NODE_ENV === 'development'\n        ? '6368ea4de67810becfd7638c-TeHA6oan0eO092kBbJh0BiepvUYzn5sehgbbSfhO4hXgPLax1v'\n        : '',\n    field_map: [{ formField: '', omniSendFormField: '' }],\n    channels: '',\n    channel_types: [],\n    email_status: '',\n    sms_status: '',\n    omniSend_fields: omniSendFields,\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(\n      flow,\n      setFlow,\n      allIntegURL,\n      omniSendConf,\n      navigate,\n      '',\n      '',\n      setIsLoading,\n    )\n    resp.then((res) => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(omniSendConf)) {\n      toast.error('Please map mandatory fields')\n      return\n    }\n    omniSendConf.field_map.length > 0 && setstep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\">\n        <Steps step={3} active={step} />\n      </div>\n\n      {/* STEP 1 */}\n\n      <OmniSendAuthorization\n        omniSendConf={omniSendConf}\n        setOmniSendConf={setOmniSendConf}\n        step={step}\n        setstep={setstep}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div\n        className=\"btcd-stp-page\"\n        style={{\n          ...(step === 2 && {\n            width: 900,\n            height: 'auto',\n            overflow: 'visible',\n          }),\n        }}\n      >\n        <OmniSendIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(\n            e,\n            omniSendConf,\n            setOmniSendConf,\n            setLoading,\n            setSnackbar,\n          )}\n          omniSendConf={omniSendConf}\n          setOmniSendConf={setOmniSendConf}\n          loading={loading}\n          setLoading={setLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={omniSendConf}\n        setDataConf={setOmniSendConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default OmniSend\n"],"names":["OmniSend","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","loading","setLoading","step","setstep","snack","setSnackbar","omniSendFields","omniSendConf","setOmniSendConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","checkMappedFields","jsx","SnackMsg","Steps","OmniSendAuthorization","jsxs","__spreadValues","OmniSendIntegLayout","e","handleInput","__","IntegrationStepThree"],"mappings":"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"}