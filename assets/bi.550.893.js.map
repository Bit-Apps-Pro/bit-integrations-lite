{"version":3,"file":"bi.550.893.js","sources":["../frontend-dev/src/components/AllIntegrations/CompanyHub/CompanyHubCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\"\nimport bitsFetch from \"../../../Utils/bitsFetch\"\nimport { __ } from \"../../../Utils/i18nwrap\"\n\nexport const handleInput = (e, salesmateConf, setSalesmateConf) => {\n  const newConf = { ...salesmateConf }\n  const { name } = e.target\n  if (e.target.value !== \"\") {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setSalesmateConf({ ...newConf })\n}\n\nexport const generateMappedField = (companyHubFields) => {\n  const requiredFlds = companyHubFields.filter((fld) => fld.required === true)\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n      formField: \"\",\n      companyHubFormField: field.key,\n    }))\n    : [{ formField: \"\", companyHubFormField: \"\" }]\n}\n\nexport const checkMappedFields = (companyHubConf) => {\n  const mappedFields = companyHubConf?.field_map\n    ? companyHubConf.field_map.filter(\n      (mappedField) =>\n        !mappedField.formField ||\n        !mappedField.companyHubFormField ||\n        (mappedField.formField === \"custom\" && !mappedField.customValue) ||\n        (mappedField.companyHubFormField === \"customFieldKey\" &&\n          !mappedField.customFieldKey)\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const companyHubAuthentication = (\n  confTmp,\n  setConf,\n  setError,\n  setIsAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!confTmp.sub_domain || !confTmp.api_key) {\n    setError({\n      sub_domain: !confTmp.sub_domain\n        ? __(\"Sub Domain can't be empty\", \"bit-integrations\")\n        : \"\",\n      api_key: !confTmp.api_key\n        ? __(\"API Key can't be empty\", \"bit-integrations\")\n        : \"\",\n    })\n    return\n  }\n\n  setError({})\n  setLoading({ ...loading, auth: true })\n\n  const requestParams = {\n    sub_domain: confTmp.sub_domain,\n    api_key: confTmp.api_key\n  }\n\n  bitsFetch(requestParams, \"company_hub_authentication\").then((result) => {\n    if (result && result.success) {\n      setIsAuthorized(true)\n      setLoading({ ...loading, auth: false })\n      toast.success(__(\"Authorized successfully\", \"bit-integrations\"))\n      return\n    }\n    setLoading({ ...loading, auth: false })\n    toast.error(\n      __(\"Authorized failed, Please enter valid Sub Domain & API Key\", \"bit-integrations\")\n    )\n  })\n}\n\nexport const getAllCompanies = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, companies: true })\n\n  const requestParams = {\n    sub_domain: confTmp.sub_domain,\n    api_key: confTmp.api_key\n  }\n\n  bitsFetch(requestParams, \"company_hub_fetch_all_companies\").then(\n    (result) => {\n      if (result && result.success) {\n        if (result.data) {\n          setConf(prevConf => {\n            prevConf.companies = result.data\n            return prevConf\n          })\n\n          setLoading({ ...setLoading, companies: false })\n          toast.success(\n            __(\"Companies fetched successfully\", \"bit-integrations\")\n          )\n          return\n        }\n        setLoading({ ...setLoading, companies: false })\n        toast.error(\n          __(\"Companies Not Found!\", \"bit-integrations\")\n        )\n        return\n      }\n      setLoading({ ...setLoading, companies: false })\n      toast.error(\n        __(\"Companies fetching failed\", \"bit-integrations\")\n      )\n    }\n  )\n}\n\nexport const getAllContacts = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, contact: true })\n\n  const requestParams = {\n    sub_domain: confTmp.sub_domain,\n    api_key: confTmp.api_key\n  }\n\n  bitsFetch(requestParams, \"company_hub_fetch_all_contacts\").then(\n    (result) => {\n      if (result && result.success) {\n        if (result.data) {\n          setConf(prevConf => {\n            prevConf.contacts = result.data\n            return prevConf\n          })\n\n          setLoading({ ...setLoading, contact: false })\n          toast.success(\n            __(\"Contacts fetched successfully\", \"bit-integrations\")\n          )\n          return\n        }\n        setLoading({ ...setLoading, contact: false })\n        toast.error(\n          __(\"Contacts Not Found!\", \"bit-integrations\")\n        )\n        return\n      }\n      setLoading({ ...setLoading, contact: false })\n      toast.error(\n        __(\"Contacts fetching failed\", \"bit-integrations\")\n      )\n    }\n  )\n}\n"],"names":["__","bitsFetch","_t","handleInput","e","salesmateConf","setSalesmateConf","newConf","__spreadValues","name","generateMappedField","companyHubFields","requiredFlds","fld","field","checkMappedFields","companyHubConf","mappedField","companyHubAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","__spreadProps","requestParams","result","toast","getAllCompanies","prevConf","getAllContacts"],"mappings":"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"}