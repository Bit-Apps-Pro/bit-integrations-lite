{"version":3,"file":"bi.656.781.js","sources":["../frontend-dev/src/components/AllIntegrations/Groundhogg/GroundhoggCommonFunc.js"],"sourcesContent":["import toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { deepCopy } from '../../../Utils/Helpers'\nimport { sprintf, __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, groundhoggConf, setGroundhoggConf) => {\n  const newConf = { ...groundhoggConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setGroundhoggConf({ ...newConf })\n}\n\nexport const generateMappedField = (groundhoggConf) => {\n  const requiredFlds = groundhoggConf?.contactsFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', GroundhoggMapField: field.key })) : [{ formField: '', GroundhoggMapField: '' }]\n}\n\nexport const checkMappedFields = (groundhoggConf) => {\n  const canNotSave = groundhoggConf.field_map ? groundhoggConf.field_map.find(f => !f.formField || !f.GroundhoggMapField) : false\n  if (canNotSave) {\n    return false\n  }\n  const mappedFleld = groundhoggConf.field_map ? groundhoggConf.field_map.filter(mapped => (!mapped.formField && !mapped.GroundhoggMapField)) : []\n  if (mappedFleld.length > 0) {\n    return false\n  }\n  return true\n}\nexport const checkMetaMappedFields = (groundhoggConf) => {\n  const canNotSave = groundhoggConf.field_map_meta ? groundhoggConf.field_map_meta.find(f => !f.formField || !f.GroundhoggMetaMapField) : false\n  if (canNotSave) {\n    return false\n  }\n  const mappedFleld = groundhoggConf.field_map_meta ? groundhoggConf.field_map_meta.filter(mapped => (!mapped.formField && !mapped.GroundhoggMetaMapField)) : []\n  if (mappedFleld.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const handleAuthorize = (confTmp, setConf, setError, setisAuthorized, setIsLoading, setSnackbar) => {\n  if (!confTmp.public_key) {\n    setError({ public_key: !confTmp.public_key ? __('Public Key can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n  if (!confTmp.token) {\n    setError({ token: !confTmp.token ? __('token can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n  if (!confTmp.domainName) {\n    setError({ domainName: !confTmp.domainName ? __('Domain Name can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n  setError({})\n  setIsLoading(true)\n\n  const requestParams = { public_key: confTmp.public_key, token: confTmp.token, domainName: confTmp.domainName }\n\n  bitsFetch(requestParams, 'groundhogg_authorization_and_fetch_contacts')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        setConf(newConf)\n        setisAuthorized(true)\n        setIsLoading(false)\n        toast.success(__('Authorization Successful', 'bit-integrations'))\n        return\n      }\n      setIsLoading(false)\n      toast.error(__('Authorization Failed', 'bit-integrations'))\n    })\n}\n\nexport const fetchAllTags = (formID, groundhoggConf, setGroundhoggConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n\n  const requestParams = { public_key: groundhoggConf.public_key, token: groundhoggConf.token, domainName: groundhoggConf.domainName }\n\n  bitsFetch(requestParams, 'groundhogg_fetch_all_tags')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...groundhoggConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.tags) {\n          newConf.default.tags = result.data.tags\n        }\n        setGroundhoggConf({ ...newConf })\n        setIsLoading(false)\n        toast.success(__('Groundhogg all tag fetched successfully', 'bit-integrations'))\n        return\n      }\n      setIsLoading(false)\n      toast.error(__('Failed to fetch groundhoggtag', 'bit-integrations'))\n    })\n    .catch(() => setIsLoading(false))\n}\n"],"names":["handleInput","groundhoggConf","setGroundhoggConf","newConf","__spreadValues","name","generateMappedField","requiredFlds","fld","field","checkMappedFields","f","mapped","checkMetaMappedFields","handleAuthorize","confTmp","setConf","setError","setisAuthorized","setIsLoading","setSnackbar","__","requestParams","bitsFetch","result","toast","fetchAllTags","formID"],"mappings":"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"}