{"version":3,"file":"bi.795.700.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoCampaigns/ZohoCampaignsCommonFunc.js"],"sourcesContent":["import { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const setGrantTokenResponse = () => {\n  const grantTokenResponse = {}\n  const authWindowLocation = window.location.href\n  const queryParams = authWindowLocation.replace(`${window.opener.location.href}/redirect`, '').split('&')\n  if (queryParams) {\n    queryParams.forEach(element => {\n      const gtKeyValue = element.split('=')\n      if (gtKeyValue[1]) {\n        // eslint-disable-next-line prefer-destructuring\n        grantTokenResponse[gtKeyValue[0]] = gtKeyValue[1]\n      }\n    })\n  }\n  localStorage.setItem('__zohoCampaigns', JSON.stringify(grantTokenResponse))\n  window.close()\n}\n\nexport const handleInput = (e, formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar) => {\n  let newConf = { ...campaignsConf }\n  newConf[e.target.name] = e.target.value\n\n  switch (e.target.name) {\n    case 'list':\n      newConf = listChange(newConf, formID, setCampaignsConf, setIsLoading, setSnackbar)\n      break\n    default:\n      break\n  }\n  setCampaignsConf({ ...newConf })\n}\n\nexport const listChange = (campaignsConf, formID, setCampaignsConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...campaignsConf }\n  newConf.field_map = [{ formField: '', zohoFormField: 'Contact Email' }]\n\n  if (!newConf?.default?.fields?.[newConf.list]) {\n    refreshContactFields(formID, newConf, setCampaignsConf, setIsLoading, setSnackbar)\n  }\n  return newConf\n}\n\nexport const refreshLists = (formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = {\n    formID,\n    id: campaignsConf.id,\n    dataCenter: campaignsConf.dataCenter,\n    clientId: campaignsConf.clientId,\n    clientSecret: campaignsConf.clientSecret,\n    tokenDetails: campaignsConf.tokenDetails,\n  }\n  bitsFetch(refreshListsRequestParams, 'zcampaigns_refresh_lists')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...campaignsConf }\n        if (result.data.lists) {\n          newConf.default = { ...newConf.default, lists: result.data.lists }\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Lists refreshed', 'bit-integrations') })\n        setCampaignsConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Lists refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Lists refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshContactFields = (formID, campaignsConf, setCampaignsConf, setIsLoading, setSnackbar) => {\n  const { list } = campaignsConf\n  if (!list) {\n    return\n  }\n\n  setIsLoading(true)\n  const refreshContactFieldsRequestParams = {\n    formID,\n    list,\n    dataCenter: campaignsConf.dataCenter,\n    clientId: campaignsConf.clientId,\n    clientSecret: campaignsConf.clientSecret,\n    tokenDetails: campaignsConf.tokenDetails,\n  }\n  bitsFetch(refreshContactFieldsRequestParams, 'zcampaigns_refresh_contact_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...campaignsConf }\n        if (result.data.fields) {\n          if (!newConf.default.fields) {\n            newConf.default.fields = {}\n          }\n          newConf.default.fields[list] = result.data\n          if (result.data.tokenDetails) {\n            newConf.tokenDetails = result.data.tokenDetails\n          }\n          setSnackbar({ show: true, msg: __('Contact Fields refreshed', 'bit-integrations') })\n        } else {\n          setSnackbar({ show: true, msg: __('Zoho didn\\'t provide fields names for this list', 'bit-integrations') })\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setCampaignsConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Contact Fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const checkMappedFields = (campaignsConf) => {\n  const mappedFields = campaignsConf?.field_map ? campaignsConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.zohoFormField && campaignsConf?.default?.fields?.[campaignsConf.list]?.required.indexOf(mappedField.zohoFormField) !== -1)) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","formID","campaignsConf","setCampaignsConf","setIsLoading","setSnackbar","newConf","__spreadValues","listChange","_a","_b","refreshContactFields","refreshLists","refreshListsRequestParams","result","__spreadProps","list","refreshContactFieldsRequestParams","checkMappedFields","mappedField","_c"],"mappings":"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"}