{"version":3,"file":"bi.611.842.js","sources":["../frontend-dev/src/components/AllIntegrations/AgiledCRM/AgiledActions.jsx","../frontend-dev/src/components/AllIntegrations/AgiledCRM/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/AgiledCRM/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/AgiledCRM/AgiledFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/AgiledCRM/AgiledIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllAccounts, getAllLifeCycleStage, getAllOwners, getAllSources, getAllStatuses } from './AgiledCommonFunc'\n\nexport default function AgiledActions({ agiledConf, setAgiledConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const dealTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...agiledConf }\n\n    if (type === 'owner') {\n      if (e.target?.checked) {\n        getAllOwners(agiledConf, setAgiledConf, setLoading)\n        newConf.actions.owner = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.owner\n      }\n    } else if (type === 'account') {\n      if (e.target?.checked) {\n        getAllAccounts(agiledConf, setAgiledConf, setLoading)\n        newConf.actions.account = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.account\n      }\n    } else if (type === 'source') {\n      if (e.target?.checked) {\n        getAllSources(agiledConf, setAgiledConf, setLoading)\n        newConf.actions.source = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.source\n      }\n    } else if (type === 'status') {\n      if (e.target?.checked) {\n        getAllStatuses(agiledConf, setAgiledConf, setLoading)\n        newConf.actions.status = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.status\n      }\n    } else if (type === 'lifeCycleStage') {\n      if (e.target?.checked) {\n        getAllLifeCycleStage(agiledConf, setAgiledConf, setLoading)\n        newConf.actions.lifeCycleStage = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.lifeCycleStage\n      }\n    } else if (type === 'followUp') {\n      if (e.target?.checked) {\n        newConf.actions.followUp = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.followUp\n      }\n    } else if (type === 'dealType') {\n      if (e.target?.checked) {\n        newConf.actions.dealType = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.dealType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setAgiledConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...agiledConf }\n    newConf[name] = val\n    setAgiledConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {agiledConf.actionName !== 'deal' && <TableCheckBox checked={agiledConf?.selectedOwner?.length || false} onChange={(e) => actionHandler(e, 'owner')} className=\"wdt-200 mt-4 mr-2\" value=\"owner\" title={__('Add Owner', 'bit - integrations')} subTitle={__('Add an owner')} />}\n      {agiledConf.actionName === 'contact' && <TableCheckBox checked={agiledConf?.selectedAccount?.length || false} onChange={(e) => actionHandler(e, 'account')} className=\"wdt-200 mt-4 mr-2\" value=\"account\" title={__('Add Account', 'bit - integrations')} subTitle={__('Add an account')} />}\n      {/* {agiledConf.actionName === 'contact' && <TableCheckBox checked={agiledConf?.selectedSource?.length || false} onChange={(e) => actionHandler(e, 'source')} className=\"wdt-200 mt-4 mr-2\" value=\"source\" title={__('Add Source', 'bit - integrations')} subTitle={__('Add a source')} />} */}\n      {/* {agiledConf.actionName === 'contact' && <TableCheckBox checked={agiledConf?.selectedStatus?.length || false} onChange={(e) => actionHandler(e, 'status')} className=\"wdt-200 mt-4 mr-2\" value=\"status\" title={__('Add Status', 'bit - integrations')} subTitle={__('Add a status')} />} */}\n      {/* {agiledConf.actionName === 'contact' && <TableCheckBox checked={agiledConf?.selectedFollowUp?.length || false} onChange={(e) => actionHandler(e, 'followUp')} className=\"wdt-200 mt-4 mr-2\" value=\"followUp\" title={__('Add Follow Up', 'bit - integrations')} subTitle={__('Select follow up')} />} */}\n      {/* {agiledConf.actionName === 'contact' && <TableCheckBox checked={agiledConf?.selectedLifeCycleStage?.length || false} onChange={(e) => actionHandler(e, 'lifeCycleStage')} className=\"wdt-200 mt-4 mr-2\" value=\"lifeCycleStage\" title={__('Add Life Cycle Stage', 'bit - integrations')} subTitle={__('Add a life cycle stage')} />} */}\n      {agiledConf.actionName === 'deal' && <TableCheckBox checked={agiledConf?.selectedDealType?.length || false} onChange={(e) => actionHandler(e, 'dealType')} className=\"wdt-200 mt-4 mr-2\" value=\"dealType\" title={__('Add Deal Type', 'bit - integrations')} subTitle={__('Add a deal type')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'owner'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Owners', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Owner', 'bit-integrations')}\n        </div>\n        {\n          loading.owners ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={agiledConf?.owners?.map(owner => ({ label: owner.name, value: owner.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={agiledConf?.selectedOwner}\n                  onChange={val => setChanges(val, 'selectedOwner')}\n                  singleSelect\n                />\n                <button onClick={() => getAllOwners(agiledConf, setAgiledConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Owners', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'account'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Accounts', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Account', 'bit-integrations')}\n        </div>\n        {\n          loading.accounts ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={agiledConf?.accounts?.map(account => ({ label: account.name, value: account.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={agiledConf?.selectedAccount}\n                  onChange={val => setChanges(val, 'selectedAccount')}\n                  singleSelect\n                />\n                <button onClick={() => getAllAccounts(agiledConf, setAgiledConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Accounts', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'source'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Sources', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Source', 'bit-integrations')}\n        </div>\n        {\n          loading.sources ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={agiledConf?.sources?.map(source => ({ label: source.name, value: source.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={agiledConf?.selectedSource}\n                  onChange={val => setChanges(val, 'selectedSource')}\n                  singleSelect\n                />\n                <button onClick={() => getAllSources(agiledConf, setAgiledConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Sources', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'status'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Statuses', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Status', 'bit-integrations')}\n        </div>\n        {\n          loading.statuses ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={agiledConf?.statuses?.map(status => ({ label: status.name, value: status.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={agiledConf?.selectedStatus}\n                  onChange={val => setChanges(val, 'selectedStatus')}\n                  singleSelect\n                />\n                <button onClick={() => getAllStatuses(agiledConf, setAgiledConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh statuses', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'followUp'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Follow Up', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={followUps?.map(followUp => ({ label: followUp.label, value: followUp.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={agiledConf?.selectedFollowUp}\n            onChange={val => setChanges(val, 'selectedFollowUp')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'lifeCycleStage'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Life cycle stages', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select life cycle stage', 'bit-integrations')}\n        </div>\n        {\n          loading.lifeCycleStages ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={agiledConf?.lifeCycleStages?.map(lifeCycleStage => ({ label: lifeCycleStage.name, value: lifeCycleStage.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={agiledConf?.selectedLifeCycleStage}\n                  onChange={val => setChanges(val, 'selectedLifeCycleStage')}\n                  singleSelect\n                />\n                <button onClick={() => getAllLifeCycleStage(agiledConf, setAgiledConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh life cycle stages', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'dealType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Deal types', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={dealTypes?.map(dealType => ({ label: dealType.label, value: dealType.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={agiledConf?.selectedDealType}\n            onChange={val => setChanges(val, 'selectedDealType')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './AgiledCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function AgiledFieldMap({ i, formFields, field, agiledConf, setAgiledConf }) {\n  let allFields = []\n  if (agiledConf.actionName === 'account') {\n    allFields = agiledConf?.accountFields\n  } else if (agiledConf.actionName === 'contact') {\n    allFields = agiledConf?.contactFields\n  } else {\n    allFields = agiledConf?.dealFields\n  }\n\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = allFields.filter(fld => fld.required === false) || []\n\n  if (agiledConf?.field_map?.length === 1 && field.agiledFormField === '') {\n    const newConf = { ...agiledConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setAgiledConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, agiledConf, setAgiledConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={agiledConf}\n              setConf={setAgiledConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"agiledFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.agiledFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, agiledConf, setAgiledConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n            {(agiledConf.actionName === 'account' || agiledConf.actionName === 'contact')\n              && <option value=\"customFieldKey\">{__('Custom Field', 'bit-integrations')}</option>}\n          </select>\n          {field.agiledFormField === 'customFieldKey'\n            && (\n              <CustomField\n                field={field}\n                index={i}\n                conf={agiledConf}\n                setConf={setAgiledConf}\n                fieldValue=\"customFieldKey\"\n                fieldLabel=\"Custom Field Key\"\n                className=\"ml-2\"\n              />\n            )}\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, agiledConf, setAgiledConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, agiledConf, setAgiledConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport AgiledActions from './AgiledActions'\nimport { getAllCRMPipelines, getAllCRMPipelineStages } from './AgiledCommonFunc'\nimport AgiledFieldMap from './AgiledFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function AgiledIntegLayout({ formFields, handleInput, agiledConf, setAgiledConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...agiledConf }\n    newConf.field_map = [\n      { formField: '', agiledFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      if (e.target.value === 'deal') {\n        getAllCRMPipelines(newConf, setAgiledConf, setLoading)\n      }\n    } else {\n      delete newConf[name]\n    }\n    setAgiledConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...agiledConf }\n    newConf[name] = val\n    if (name === 'selectedCRMPipeline' && val !== '') {\n      newConf.selectedCRMPipelineStages = ''\n      getAllCRMPipelineStages(newConf, setAgiledConf, setLoading)\n    }\n    setAgiledConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={agiledConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"account\">{__('Create Account', 'bit-integrations')}</option>\n        <option value=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"deal\">{__('Create Deal', 'bit-integrations')}</option>\n      </select>\n      {(loading.CRMPipelines || loading.CRMPipelineStages) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {agiledConf.actionName === 'contact'\n        && (\n          <>\n            <br />\n            <br />\n            <b className=\"wdt-200 d-in-b\">{__('Select Role:', 'bit-integrations')}</b>\n            <select onChange={handleInput} name=\"contactRole\" value={agiledConf.contactRole} className=\"btcd-paper-inp w-5\">\n              <option value=\"\">{__('Select a role', 'bit-integrations')}</option>\n              <option value=\"Lead\">{__('Lead', 'bit-integrations')}</option>\n              <option value=\"Client\">{__('Client', 'bit-integrations')}</option>\n              <option value=\"Prospect\">{__('Prospect', 'bit-integrations')}</option>\n            </select>\n\n          </>\n        )}\n      {agiledConf.actionName === 'deal'\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Pipeline:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={agiledConf?.CRMPipelines?.map(CRMPipeline => ({ label: CRMPipeline.name, value: CRMPipeline.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={agiledConf?.selectedCRMPipeline}\n                onChange={val => setChanges(val, 'selectedCRMPipeline')}\n                disabled={loading.CRMPipelines}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPipelines(agiledConf, setAgiledConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh pipelines', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPipelines}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(agiledConf.actionName === 'deal' && agiledConf.selectedCRMPipeline)\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Stage:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={agiledConf?.CRMPipelineStages?.map(CRMPipelineStage => ({ label: CRMPipelineStage.name, value: CRMPipelineStage.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={agiledConf?.selectedCRMPipelineStages}\n                onChange={val => setChanges(val, 'selectedCRMPipelineStages')}\n                disabled={loading.CRMPipelineStages}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPipelineStages(agiledConf, setAgiledConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh pipeline stages', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPipelineStages}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {agiledConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n          </div>\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Agiled Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {agiledConf?.field_map.map((itm, i) => (\n            <AgiledFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              agiledConf={agiledConf}\n              formFields={formFields}\n              setAgiledConf={setAgiledConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(agiledConf.field_map.length, agiledConf, setAgiledConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <AgiledActions\n            agiledConf={agiledConf}\n            setAgiledConf={setAgiledConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["AgiledActions","agiledConf","setAgiledConf","loading","setLoading","actionMdl","setActionMdl","useState","followUps","dealTypes","actionHandler","e","type","newConf","__spreadValues","_a","getAllOwners","_b","getAllAccounts","_c","getAllSources","_d","getAllStatuses","_e","getAllLifeCycleStage","_f","_g","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","owner","account","source","status","followUp","_h","lifeCycleStage","dealType","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","AgiledFieldMap","formFields","allFields","requiredFields","fld","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","AgiledIntegLayout","handleInput","setSnackbar","handleActionInput","getAllCRMPipelines","getAllCRMPipelineStages","CRMPipeline","CRMPipelineStage","itm"],"mappings":"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"}