{"version":3,"file":"bi.467.348.js","sources":["../frontend-dev/src/components/AllIntegrations/MailChimp/MailChimp.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport MailChimpAuthorization from './MailChimpAuthorization'\nimport { checkAddressFieldMapRequired, handleInput, setGrantTokenResponse, checkMappedFields } from './MailChimpCommonFunc'\nimport MailChimpIntegLayout from './MailChimpIntegLayout'\n\nfunction MailChimp({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [sheetConf, setSheetConf] = useState({\n    name: 'Mail Chimp',\n    type: 'Mail Chimp',\n    clientId: process.env.NODE_ENV === 'development' ? '125452420804' : '',\n    clientSecret: process.env.NODE_ENV === 'development' ? '471dd71ee208e3cdc60e4bb91b4c29bb791832ab49946d396c' : '',\n    listId: '',\n    listName: '',\n    tags: '',\n    field_map: [\n      { formField: '', mailChimpField: '' },\n    ],\n    address_field: [],\n    actions: {},\n  })\n\n  useEffect(() => {\n    window.opener && setGrantTokenResponse('mailChimp')\n  }, [])\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (sheetConf.actions?.address && !checkAddressFieldMapRequired(sheetConf)) {\n      setSnackbar({ show: true, msg: 'Please map address required fields to continue.' })\n      return\n    }\n    if (!checkMappedFields(sheetConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (sheetConf.listId !== '') {\n      setstep(3)\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <MailChimpAuthorization\n        formID={formID}\n        sheetConf={sheetConf}\n        setSheetConf={setSheetConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ width: step === 2 && 900, height: step === 2 && 'auto' }}>\n\n        <MailChimpIntegLayout\n          formID={formID}\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, sheetConf, setSheetConf, formID, setIsLoading, setSnackbar)}\n          sheetConf={sheetConf}\n          setSheetConf={setSheetConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n        <button\n          onClick={() => nextPage(3)}\n          disabled={!sheetConf.listId || sheetConf.field_map.length < 1}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: sheetConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={sheetConf}\n        setDataConf={setSheetConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default MailChimp\n"],"names":["MailChimp","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","sheetConf","setSheetConf","useEffect","setGrantTokenResponse","nextPage","_a","checkAddressFieldMapRequired","checkMappedFields","jsx","SnackMsg","Steps","MailChimpAuthorization","jsxs","MailChimpIntegLayout","e","handleInput","__","BackIcn","IntegrationStepThree","saveActionConf"],"mappings":"mhBAaA,SAASA,EAAU,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC7D,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACb,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAC/C,CAACK,EAAWC,CAAY,EAAIN,WAAS,CACzC,KAAM,aACN,KAAM,aACN,SAAoE,GACpE,aAA8G,GAC9G,OAAQ,GACR,SAAU,GACV,KAAM,GACN,UAAW,CACT,CAAE,UAAW,GAAI,eAAgB,EAAG,CACtC,EACA,cAAe,CAAC,EAChB,QAAS,CAAC,CAAA,CACX,EAEDO,EAAAA,UAAU,IAAM,CACP,OAAA,QAAUC,EAAsB,WAAW,CACpD,EAAG,CAAE,CAAA,EACL,MAAMC,EAAW,IAAM,OAIrB,GAHA,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,GACFC,EAAAL,EAAU,UAAV,MAAAK,EAAmB,SAAW,CAACC,EAA6BN,CAAS,EAAG,CAC1ED,EAAY,CAAE,KAAM,GAAM,IAAK,iDAAmD,CAAA,EAClF,MACF,CACI,GAAA,CAACQ,EAAkBP,CAAS,EAAG,CACjCD,EAAY,CAAE,KAAM,GAAM,IAAK,gCAAkC,CAAA,EACjE,MACF,CACIC,EAAU,SAAW,IACvBH,EAAQ,CAAC,CACX,EAGF,cACG,MACC,CAAA,SAAA,CAACW,EAAAA,IAAAC,EAAA,CAAS,MAAAX,EAAc,YAAAC,CAA0B,CAAA,EAClDS,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQd,CAAA,CAAM,CAAE,CAAA,EAGjEY,EAAA,IAACG,EAAA,CACC,OAAApB,EACA,UAAAS,EACA,aAAAC,EACA,KAAAL,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAGCa,EAAA,KAAA,MAAA,CAAI,UAAU,gBAAgB,MAAO,CAAE,MAAOhB,IAAS,GAAK,IAAK,OAAQA,IAAS,GAAK,MAEtF,EAAA,SAAA,CAAAY,EAAA,IAACK,EAAA,CACC,OAAAtB,EACA,WAAAN,EACA,YAAc6B,GAAMC,EAAYD,EAAGd,EAAWC,EAAcV,EAAQG,EAAcK,CAAW,EAC7F,UAAAC,EACA,aAAAC,EACA,UAAAR,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EACAa,EAAA,KAAC,SAAA,CACC,QAAS,IAAMR,EAAU,EACzB,SAAU,CAACJ,EAAU,QAAUA,EAAU,UAAU,OAAS,EAC5D,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAgB,EAAG,OAAQ,kBAAkB,EAC9BR,EAAAA,IAACS,EAAQ,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACpC,CAAA,EAEF,EAGAT,EAAA,IAACU,EAAA,CACC,KAAAtB,EACA,WAAY,IAAMuB,EAAe,CAAE,KAAAhC,EAAM,QAAAD,EAAS,YAAAE,EAAa,SAAAC,EAAU,KAAMW,EAAW,aAAAN,EAAc,YAAAK,CAAA,CAAa,EACrH,UAAAN,EACA,SAAUO,EACV,YAAaC,EACb,WAAAhB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}