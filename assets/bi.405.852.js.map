{"version":3,"file":"bi.405.852.js","sources":["../frontend-dev/src/components/AllIntegrations/Airtable/AirtableCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, airtableConf, setAirtableConf) => {\n  const newConf = { ...airtableConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setAirtableConf({ ...newConf })\n}\n\nexport const generateMappedField = (airtableConf) => {\n  const requiredFlds = airtableConf?.airtableFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', airtableFormField: field.key })) : [{ formField: '', airtableFormField: '' }]\n}\n\nexport const checkMappedFields = (airtableConf) => {\n  const mappedFields = airtableConf?.field_map ? airtableConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.airtableFormField || (mappedField.formField === 'custom' && !mappedField.customValue))) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const airtableAuthentication = (confTmp, setConf, setError, setIsAuthorized, loading, setLoading, type) => {\n  if (!confTmp.auth_token) {\n    setError({ auth_token: !confTmp.auth_token ? __('Personal access token can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n\n  setError({})\n\n  if (type === 'authentication') {\n    setLoading({ ...loading, auth: true })\n  }\n  if (type === 'refreshBases') {\n    setLoading({ ...loading, bases: true })\n  }\n  const requestParams = { auth_token: confTmp.auth_token }\n\n  bitsFetch(requestParams, 'airtable_authentication')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        setIsAuthorized(true)\n        if (type === 'authentication') {\n          if (result.data) {\n            newConf.bases = result.data\n          }\n          setLoading({ ...loading, auth: false })\n          toast.success(__('Authorized successfully', 'bit-integrations'))\n        } else if (type === 'refreshBases') {\n          if (result.data) {\n            newConf.bases = result.data\n          }\n          setLoading({ ...loading, bases: false })\n          toast.success(__('All bases fectched successfully', 'bit-integrations'))\n        }\n        setConf(newConf)\n        return\n      }\n      setLoading({ ...loading, auth: false, bases: false })\n      toast.error(__('Authorized failed!', 'bit-integrations'))\n    })\n}\n\nexport const getAllTables = (confTmp, setConf, loading, setLoading) => {\n  setLoading({ ...loading, tables: true })\n  const requestParams = { auth_token: confTmp.auth_token, baseId: confTmp.selectedBase }\n\n  bitsFetch(requestParams, 'airtable_fetch_all_tables')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.tables = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...loading, tables: false })\n        toast.success(__('Tables fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...loading, tables: false })\n      toast.error(__('Tables fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllFields = (confTmp, setConf, loading, setLoading, type) => {\n  if (type === 'fetch') {\n    setLoading({ ...loading, customFields: true, airtableFields: false })\n  } else if (type === 'refresh') {\n    setLoading({ ...loading, customFields: true })\n  }\n  const requestParams = { auth_token: confTmp.auth_token, baseId: confTmp.selectedBase, tableId: confTmp.selectedTable }\n\n  bitsFetch(requestParams, 'airtable_fetch_all_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.airtableFields = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...loading, customFields: false, airtableFields: true })\n        toast.success(__('Table fields fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...loading, customFields: false, airtableFields: false })\n      toast.error(__('Table fields fetching failed', 'bit-integrations'))\n    })\n}\n"],"names":["__","bitsFetch","_t","handleInput","airtableConf","setAirtableConf","newConf","__spreadValues","name","checkMappedFields","mappedField","airtableAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","type","__spreadProps","requestParams","result","toast","getAllTables","getAllFields"],"mappings":"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"}