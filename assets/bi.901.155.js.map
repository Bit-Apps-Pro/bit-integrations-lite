{"version":3,"file":"bi.901.155.js","sources":["../frontend-dev/src/components/AllIntegrations/PipeDrive/EditPipeDrive.jsx"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, checkRequired, handleInput } from './PipeDriveCommonFunc'\nimport PipeDriveIntegLayout from './PipeDriveIntegLayout'\n\nfunction EditPipeDrive({ allIntegURL }) {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [pipeDriveConf, setPipeDriveConf] = useRecoilState($actionConf)\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [isLoading, setIsLoading] = useState(false)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [tab, settab] = useState(0)\n  const formFields = useRecoilValue($formFields)\n\n  const saveConfig = () => {\n    if (!checkMappedFields(pipeDriveConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    if (!checkRequired(pipeDriveConf)) {\n      if (['Leads', 'Deals', 'Activities', 'Notes'].includes(pipeDriveConf.moduleData.module)) {\n        setSnackbar({ show: true, msg: __('Please select a organization or a person', 'bit-integrations') })\n      }\n      // if (pipeDriveConf.moduleData.module === 'Persons') {\n      //   setSnackbar({ show: true, msg: __('Please select a organization', 'bit-integrations') })\n      // }\n      return\n    }\n\n    saveActionConf({ flow, setFlow, allIntegURL, conf: pipeDriveConf, navigate, id, edit: 1, setIsLoading, setSnackbar })\n  }\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 \">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, tab, pipeDriveConf, setPipeDriveConf)} name=\"name\" value={pipeDriveConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n\n      <PipeDriveIntegLayout\n        tab={tab}\n        settab={settab}\n        formID={flow.triggered_entity_id}\n        formFields={formFields}\n        handleInput={(e) => handleInput(e, tab, pipeDriveConf, setPipeDriveConf, setIsLoading, setSnackbar)}\n        pipeDriveConf={pipeDriveConf}\n        setPipeDriveConf={setPipeDriveConf}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={pipeDriveConf.moduleData.module === '' || pipeDriveConf.field_map.length < 1}\n        isLoading={isLoading}\n        dataConf={pipeDriveConf}\n        setDataConf={setPipeDriveConf}\n        formFields={formFields}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditPipeDrive\n"],"names":["useNavigate","useParams","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$actionConf","$newFlow","$formFields","SnackMsg","__","EditFormInteg","EditWebhookInteg","checkWebhookIntegrationsExist","saveActionConf","IntegrationStepThree","handleInput","checkMappedFields","checkRequired","PipeDriveIntegLayout","EditPipeDrive","allIntegURL","navigate","id","pipeDriveConf","setPipeDriveConf","useRecoilState","flow","setFlow","isLoading","setIsLoading","useState","snack","setSnackbar","tab","settab","formFields","useRecoilValue","saveConfig","jsx","jsxs","e"],"mappings":"AAgBA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,gBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,iBAAA,MAAA,kBAAA,SAASC,EAAc,CAAE,YAAAC,GAAe,CACtC,MAAMC,EAAWtB,IACX,CAAE,GAAAuB,GAAOtB,IACT,CAACuB,EAAeC,CAAgB,EAAIC,EAAepB,CAAW,EAC9D,CAACqB,EAAMC,CAAO,EAAIF,EAAenB,CAAQ,EACzC,CAACsB,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAOC,CAAW,EAAIF,WAAS,CAAE,KAAM,GAAO,EAC/C,CAACG,EAAKC,CAAM,EAAIJ,WAAS,CAAC,EAC1BK,EAAaC,EAAe7B,CAAW,EAEvC8B,EAAa,IAAM,CACnB,GAAA,CAACrB,EAAkBO,CAAa,EAAG,CACzBS,EAAA,CAAE,KAAM,GAAM,IAAKvB,EAAG,8BAA+B,kBAAkB,EAAG,EACtF,MACF,CACI,GAAA,CAACQ,EAAcM,CAAa,EAAG,CAC7B,CAAC,QAAS,QAAS,aAAc,OAAO,EAAE,SAASA,EAAc,WAAW,MAAM,GACxES,EAAA,CAAE,KAAM,GAAM,IAAKvB,EAAG,2CAA4C,kBAAkB,EAAG,EAKrG,MACF,CAEAI,EAAe,CAAE,KAAAa,EAAM,QAAAC,EAAS,YAAAP,EAAa,KAAMG,EAAe,SAAAF,EAAU,GAAAC,EAAI,KAAM,EAAG,aAAAO,EAAc,YAAAG,CAAa,CAAA,CAAA,EAEtH,cACG,MAAI,CAAA,MAAO,CAAE,MAAO,GACnB,EAAA,SAAA,CAACM,EAAAA,IAAA9B,EAAA,CAAS,MAAAuB,EAAc,YAAAC,CAA0B,CAAA,EAElDO,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAD,MAAC,KAAE,UAAU,WAAY,SAAG7B,EAAA,oBAAqB,kBAAkB,EAAE,EACrE6B,EAAAA,IAAC,SAAM,UAAU,qBAAqB,SAAeE,GAAAzB,EAAYyB,EAAGP,EAAKV,EAAeC,CAAgB,EAAG,KAAK,OAAO,MAAOD,EAAc,KAAM,KAAK,OAAO,YAAad,EAAG,sBAAuB,kBAAkB,CAAG,CAAA,CAAA,EAC5N,QACC,KAAG,EAAA,EAEH,CAACG,EAA8Bc,EAAK,gBAAgB,GAAKY,EAAAA,IAAC5B,GAAc,YAAAsB,EAA0B,EAClGpB,EAA8Bc,EAAK,gBAAgB,GAAKY,EAAA,IAAC3B,GAAiB,YAAAqB,EAA0B,EAErGM,EAAA,IAACpB,EAAA,CACC,IAAAe,EACA,OAAAC,EACA,OAAQR,EAAK,oBACb,WAAAS,EACA,YAAcK,GAAMzB,EAAYyB,EAAGP,EAAKV,EAAeC,EAAkBK,EAAcG,CAAW,EAClG,cAAAT,EACA,iBAAAC,EACA,UAAAI,EACA,aAAAC,EACA,YAAAG,CAAA,CACF,EAEAM,EAAA,IAACxB,EAAA,CACC,KAAI,GACJ,WAAAuB,EACA,SAAUd,EAAc,WAAW,SAAW,IAAMA,EAAc,UAAU,OAAS,EACrF,UAAAK,EACA,SAAUL,EACV,YAAaC,EACb,WAAAW,CAAA,CACF,QACC,KAAG,EAAA,CACN,CAAA,CAAA,CAEJ"}