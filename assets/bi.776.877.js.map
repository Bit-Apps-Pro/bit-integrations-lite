{"version":3,"file":"bi.776.877.js","sources":["../frontend-dev/src/components/AllIntegrations/Drip/DripCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from \"@wordpress/i18n\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\n\nexport const handleInput = (e, dripConf, setDripConf) => {\n  const newConf = { ...dripConf };\n  newConf.name = e.target.value;\n  setDripConf({ ...newConf });\n};\n\n// refreshMappedCampaigns\nexport const refreshDripCampaign = (\n  dripConf,\n  setDripConf,\n  setIsLoading,\n  setSnackbar\n) => {\n  const refreshCampaignsRequestParams = {\n    api_token: dripConf.api_token,\n    account_id: dripConf.account_id,\n  };\n  bitsFetch(refreshCampaignsRequestParams, \"drip_campaigns\")\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...dripConf };\n        if (result.data.dripCampaigns) {\n          if (!newConf.default) {\n            newConf.default = {};\n          }\n          newConf.default.dripCampaigns = result.data.dripCampaigns;\n          setSnackbar({\n            show: true,\n            msg: __(\"Drip campaigns refreshed\", \"bit-integrations\"),\n          });\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              \"No Drip campaigns found. Try changing the header row number or try again\",\n              \"bit-integrations\"\n            ),\n          });\n        }\n\n        setDripConf({ ...newConf });\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"Drip campaigns refresh failed. please try again\",\n            \"bit-integrations\"\n          ),\n        });\n      }\n      setIsLoading(false);\n    })\n    .catch(() => setIsLoading(false));\n};\n\n// refreshMappedFields\nexport const refreshDripHeader = (\n  dripConf,\n  setDripConf,\n  setIsLoading,\n  setSnackbar\n) => {\n  const refreshCampaignsRequestParams = {\n    api_token: dripConf.api_token,\n    campaign_id: dripConf.campaignId,\n  };\n\n  bitsFetch(refreshCampaignsRequestParams, \"drip_headers\")\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...dripConf };\n        if (result.data.dripField) {\n          if (!newConf.default) {\n            newConf.default = {};\n          }\n\n          newConf.default.fields = result.data.dripField;\n          const { fields } = newConf.default;\n          newConf.field_map = Object.values(fields)\n            .filter((f) => f.required)\n            .map((f) => ({\n              formField: \"\",\n              dripField: f.fieldValue,\n              required: true,\n            }));\n          setSnackbar({\n            show: true,\n            msg: __(\"Drip fields refreshed\", \"bit-integrations\"),\n          });\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              \"No Drip fields found. Try changing the header row number or try again\",\n              \"bit-integrations\"\n            ),\n          });\n        }\n\n        setDripConf({ ...newConf });\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"Drip fields refresh failed. please try again\",\n            \"bit-integrations\"\n          ),\n        });\n      }\n      setIsLoading(false);\n    })\n    .catch(() => setIsLoading(false));\n};\n\nexport const checkMappedFields = (dripConf) => {\n  const mappedFields = dripConf?.field_map\n    ? dripConf.field_map.filter(\n        (mappedField) =>\n          !mappedField.formField &&\n          mappedField.dripField &&\n          mappedField.required\n      )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n"],"names":["__","handleInput","dripConf","setDripConf","newConf","__spreadValues","refreshDripCampaign","setIsLoading","setSnackbar","refreshCampaignsRequestParams","bitsFetch","result","refreshDripHeader","fields","f","checkMappedFields","mappedField"],"mappings":"yVAAA,OAAA,EAAA,KAAAA,MAAA,iBAIY,MAACC,EAAc,CAAC,EAAGC,EAAUC,IAAgB,CACvD,MAAMC,EAAUC,EAAA,GAAKH,GACrBE,EAAQ,KAAO,EAAE,OAAO,MACxBD,EAAYE,EAAA,GAAKD,EAAS,CAC5B,EAGaE,EAAsB,CACjCJ,EACAC,EACAI,EACAC,IACG,CACH,MAAMC,EAAgC,CACpC,UAAWP,EAAS,UACpB,WAAYA,EAAS,UACzB,EACEQ,EAAUD,EAA+B,gBAAgB,EACtD,KAAME,GAAW,CAChB,GAAIA,GAAUA,EAAO,QAAS,CAC5B,MAAMP,EAAUC,EAAA,GAAKH,GACjBS,EAAO,KAAK,eACTP,EAAQ,UACXA,EAAQ,QAAU,IAEpBA,EAAQ,QAAQ,cAAgBO,EAAO,KAAK,cAC5CH,EAAY,CACV,KAAM,GACN,IAAKR,EAAG,2BAA4B,kBAAkB,CAClE,CAAW,GAEDQ,EAAY,CACV,KAAM,GACN,IAAKR,EACH,2EACA,kBACD,CACb,CAAW,EAGHG,EAAYE,EAAA,GAAKD,EAAS,CAClC,MACQI,EAAY,CACV,KAAM,GACN,IAAKR,EACH,kDACA,kBACD,CACX,CAAS,EAEHO,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAGaK,EAAoB,CAC/BV,EACAC,EACAI,EACAC,IACG,CACH,MAAMC,EAAgC,CACpC,UAAWP,EAAS,UACpB,YAAaA,EAAS,UAC1B,EAEEQ,EAAUD,EAA+B,cAAc,EACpD,KAAME,GAAW,CAChB,GAAIA,GAAUA,EAAO,QAAS,CAC5B,MAAMP,EAAUC,EAAA,GAAKH,GACrB,GAAIS,EAAO,KAAK,UAAW,CACpBP,EAAQ,UACXA,EAAQ,QAAU,IAGpBA,EAAQ,QAAQ,OAASO,EAAO,KAAK,UACrC,KAAM,CAAE,OAAAE,CAAM,EAAKT,EAAQ,QAC3BA,EAAQ,UAAY,OAAO,OAAOS,CAAM,EACrC,OAAQC,GAAMA,EAAE,QAAQ,EACxB,IAAKA,IAAO,CACX,UAAW,GACX,UAAWA,EAAE,WACb,SAAU,EACX,EAAC,EACJN,EAAY,CACV,KAAM,GACN,IAAKR,EAAG,wBAAyB,kBAAkB,CAC/D,CAAW,CACX,MACUQ,EAAY,CACV,KAAM,GACN,IAAKR,EACH,wEACA,kBACD,CACb,CAAW,EAGHG,EAAYE,EAAA,GAAKD,EAAS,CAClC,MACQI,EAAY,CACV,KAAM,GACN,IAAKR,EACH,+CACA,kBACD,CACX,CAAS,EAEHO,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAEaQ,EAAqBb,GAS5B,GARiBA,GAAA,MAAAA,EAAU,UAC3BA,EAAS,UAAU,OAChBc,GACC,CAACA,EAAY,WACbA,EAAY,WACZA,EAAY,QACf,EACD,IACa,OAAS"}