{"version":3,"file":"bi.680.828.js","sources":["../frontend-dev/src/components/AllIntegrations/Mailjet/MailjetCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { create } from 'mutative'\n\nexport const handleInput = (e, mailjetConf, setMailjetConf) => {\n  const newConf = create(mailjetConf, draftConf => {\n    const { name } = e.target\n    if (e.target.value !== '') {\n      draftConf[name] = e.target.value\n    } else {\n      delete draftConf[name]\n    }\n  })\n\n  setMailjetConf(newConf)\n}\n\nexport const generateMappedField = (mailjetConf) => {\n  const requiredFlds = mailjetConf?.staticFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', mailjetFormField: field.key })) : [{ formField: '', mailjetFormField: '' }]\n}\n\nexport const checkMappedFields = (mailjetConf) => {\n  const mappedFields = mailjetConf?.field_map ? mailjetConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.mailjetFormField || (!mappedField.formField === 'custom' && !mappedField.customValue))) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const mailjetAuthentication = (confTmp, setConf, setError, setIsAuthorized, loading, setLoading, type) => {\n  if (!confTmp.apiKey) {\n    setError({ apiKey: !confTmp.apiKey ? __('API key can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n  if (!confTmp.secretKey) {\n    setError({ secretKey: !confTmp.secretKey ? __('Secret key can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n\n  setError({})\n\n  if (type === 'authentication') {\n    setLoading({ ...loading, auth: true })\n  }\n  if (type === 'refreshLists') {\n    setLoading({ ...loading, lists: true })\n  }\n  const requestParams = { apiKey: confTmp.apiKey, secretKey: confTmp.secretKey }\n\n  bitsFetch(requestParams, 'mailjet_authentication')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        setIsAuthorized(true)\n        if (type === 'authentication') {\n          if (result.data) {\n            newConf.lists = result.data\n          }\n          setLoading({ ...loading, auth: false })\n          toast.success(__('Authorized successfully', 'bit-integrations'))\n          getCustomFields(newConf, setConf, setLoading)\n        } else if (type === 'refreshLists') {\n          if (result.data) {\n            newConf.lists = result.data\n            setConf(newConf)\n          }\n          setLoading({ ...loading, lists: false })\n          toast.success(__('All lists fectched successfully', 'bit-integrations'))\n        }\n        return\n      }\n      setLoading({ ...loading, auth: false })\n      toast.error(__('Authorized failed', 'bit-integrations'))\n    })\n}\n\nexport const getCustomFields = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, customFields: true })\n\n  const requestParams = { apiKey: confTmp.apiKey, secretKey: confTmp.secretKey }\n\n  bitsFetch(requestParams, 'mailjet_fetch_all_custom_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.customFields = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, customFields: false })\n\n        toast.success(__('Custom fields fetch successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, customFields: false })\n      toast.error(__('Custom fields fetch failed', 'bit-integrations'))\n    })\n}\n"],"names":["__","bitsFetch","_t","create","handleInput","mailjetConf","setMailjetConf","newConf","draftConf","name","generateMappedField","requiredFlds","fld","field","checkMappedFields","mappedField","mailjetAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","type","__spreadProps","__spreadValues","requestParams","result","toast","getCustomFields"],"mappings":"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"}