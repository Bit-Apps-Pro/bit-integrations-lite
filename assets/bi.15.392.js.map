{"version":3,"file":"bi.15.392.js","sources":["../frontend-dev/src/components/AllIntegrations/Groundhogg/Groundhogg.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { $btcbi } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport GroundhoggAuthorization from './GroundhoggAuthorization'\nimport { handleInput, checkMappedFields, checkMetaMappedFields } from './GroundhoggCommonFunc'\nimport GroundhoggIntegLayout from './GroundhoggIntegLayout'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\n\nfunction Groundhogg({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const btcbi = useRecoilValue($btcbi)\n  const { siteURL } = btcbi\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const contactsFields = [\n    { key: 'email', label: 'Email', required: true },\n    { key: 'first_name', label: 'First Name', required: false },\n    { key: 'last_name', label: 'Last Name', required: false },\n    { key: 'user_id', label: 'User Id', required: false },\n    { key: 'owner_id', label: 'Owner Id', required: false },\n    { key: 'note', label: 'Note', required: false },\n  ]\n\n  const contactMetaFields = [\n    { key: 'primary_phone', label: 'Primary Phone', required: false },\n    { key: 'street_address_1', label: 'Street Address 1', required: false },\n    { key: 'street_address_2', label: 'Street Address 2', required: false },\n    { key: 'postal_zip', label: 'Postal Zip', required: false },\n    { key: 'city', label: 'City', required: false },\n    { key: 'country', label: 'Country', required: false },\n\n  ]\n\n  const allActions = [\n    { key: '1', label: 'Create Contact' },\n    { key: '2', label: 'Add tag to user' },\n  ]\n  const [groundhoggConf, setGroundhoggConf] = useState({\n    name: 'Groundhogg',\n    type: 'Groundhogg',\n    domainName: siteURL,\n    token: process.env.NODE_ENV === 'development' ? 'e2a493a79dd63d4f883f0e25deb3ccd3' : '',\n    public_key: process.env.NODE_ENV === 'development' ? '7bbe502000a6279ed55582e786ff2acb' : '',\n    id: '',\n    mainAction: '',\n    addTagToUser: '',\n    emailAddress: '',\n    showMeta: false,\n    optin_status: '1',\n    field_map: [\n      { formField: '', GroundhoggMapField: '' },\n    ],\n    field_map_meta: [\n      { formField: '', GroundhoggMetaMapField: '' },\n    ],\n    contactsFields,\n    contactMetaFields,\n    allActions,\n    address_field: [],\n    actions: {},\n  })\n\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (groundhoggConf.mainAction === '1' && !checkMappedFields(groundhoggConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (groundhoggConf.showMeta && !checkMetaMappedFields(groundhoggConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (groundhoggConf.mainAction === '2' && groundhoggConf?.emailAddress === '') {\n      setSnackbar({ show: true, msg: 'Please select Email field to continue.' })\n      return\n    }\n    if (groundhoggConf.mainAction === '2' && groundhoggConf?.addTagToUser === '') {\n      setSnackbar({ show: true, msg: 'Please select All Tags field to continue.' })\n      return\n    }\n    if (groundhoggConf.listId !== '') {\n      setstep(3)\n    }\n  }\n  const isDisabled = !((groundhoggConf.mainAction === '2' && groundhoggConf.addTagToUser !== ''))\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <GroundhoggAuthorization\n        formID={formID}\n        groundhoggConf={groundhoggConf}\n        setGroundhoggConf={setGroundhoggConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <GroundhoggIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, groundhoggConf, setGroundhoggConf, formID, setIsLoading, setSnackbar)}\n          groundhoggConf={groundhoggConf}\n          setGroundhoggConf={setGroundhoggConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={(groundhoggConf.mainAction === '2' ? isDisabled : (!((groundhoggConf.field_map?.length >= 1)))) || isLoading}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: groundhoggConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={groundhoggConf}\n        setDataConf={setGroundhoggConf}\n        formFields={formFields}\n      />\n\n    </div>\n  )\n}\n\nexport default Groundhogg\n"],"names":["Groundhogg","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","btcbi","useRecoilValue","$btcbi","siteURL","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","contactsFields","contactMetaFields","allActions","groundhoggConf","setGroundhoggConf","nextPage","checkMappedFields","checkMetaMappedFields","isDisabled","jsx","SnackMsg","Steps","GroundhoggAuthorization","__spreadValues","GroundhoggIntegLayout","e","handleInput","jsxs","_a","__","IntegrationStepThree","saveActionConf"],"mappings":"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"}