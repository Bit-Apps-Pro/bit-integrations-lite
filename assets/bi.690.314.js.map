{"version":3,"file":"bi.690.314.js","sources":["../frontend-dev/src/components/AllIntegrations/Lemlist/LemlistAuthorization.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { toast } from 'react-hot-toast'\nimport BackIcn from '../../../Icons/BackIcn'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\nimport LoaderSm from '../../Loaders/LoaderSm'\nimport Note from '../../Utilities/Note'\nimport { refreshLemlistCampaign } from './LemlistCommonFunc'\nimport tutorialLinks from '../../../Utils/StaticData/tutorialLinks'\nimport TutorialLink from '../../Utilities/TutorialLink'\n\nexport default function LemlistAuthorization({ lemlistConf, setLemlistConf, step, setstep, setSnackbar, isInfo, isLoading, setIsLoading }) {\n  const [isAuthorized, setisAuthorized] = useState(false)\n  const [error, setError] = useState({ name: '', api_key: '' })\n  const [showAuthMsg, setShowAuthMsg] = useState(false)\n  const { lemlist } = tutorialLinks\n\n  const handleAuthorize = () => {\n    const newConf = { ...lemlistConf }\n    if (!newConf.name || !newConf.api_key) {\n      setError({\n        name: !newConf.name ? __('Integration name cann\\'t be empty', 'bit-integrations') : '',\n        api_key: !newConf.api_key ? __('Access Api Key cann\\'t be empty', 'bit-integrations') : '',\n      })\n      return\n    }\n    setIsLoading('auth')\n\n    const data = {\n      api_key: newConf.api_key,\n    }\n\n    bitsFetch(data, 'lemlist_authorize')\n      .then(result => {\n        if (result && result.success) {\n          const newConf = { ...lemlistConf }\n          newConf.tokenDetails = result.data\n          setLemlistConf(newConf)\n          setisAuthorized(true)\n          toast.success(__('Authorized Successfully', 'bit-integrations'))\n        } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n          toast.error(`${__('Authorization failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}`)\n        } else {\n          toast.error(__('Authorization failed. please try again', 'bit-integrations'))\n        }\n        setShowAuthMsg(true)\n        setIsLoading(false)\n      })\n  }\n  const handleInput = e => {\n    const newConf = { ...lemlistConf }\n    const rmError = { ...error }\n    rmError[e.target.name] = ''\n    newConf[e.target.name] = e.target.value\n    setError(rmError)\n    setLemlistConf(newConf)\n  }\n\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    refreshLemlistCampaign(lemlistConf, setLemlistConf, setIsLoading, setSnackbar)\n    setstep(2)\n  }\n\n  const ActiveInstructions = `\n            <h4>Get Api key</h4>\n            <ul>\n                <li>First go to your Lemlist dashboard.</li>\n                <li>Click on the \"Team Setting\" from sidebar</li>\n                <li>Then Click \"Integrations\"</li>\n                <li>Then click \"Api\", Then click \"Generate Api Key\"</li>\n            </ul>`\n\n  return (\n    <div className=\"btcd-stp-page\" style={{ ...{ width: step === 1 && 900 }, ...{ height: step === 1 && 'auto' } }}>\n      {lemlist?.youTubeLink && (\n        <TutorialLink\n          title={lemlist?.title}\n          youTubeLink={lemlist?.youTubeLink}\n        />\n      )}\n      {lemlist?.docLink && (\n        <TutorialLink\n          title={lemlist?.title}\n          docLink={lemlist?.docLink}\n        />\n      )}\n\n      <div className=\"mt-3 wdt-200\"><b>{__('Integration Name:', 'bit-integrations')}</b></div>\n      <input className=\"btcd-paper-inp w-6 mt-1\" onChange={handleInput} name=\"name\" value={lemlistConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} disabled={isInfo} />\n      <div style={{ color: 'red', fontSize: '15px' }}>{error.name}</div>\n\n      <div className=\"mt-3 wdt-250\"><b>{__('Access Api Key:', 'bit-integrations')}</b></div>\n      <input className=\"btcd-paper-inp w-6 mt-1\" onChange={handleInput} name=\"api_key\" value={lemlistConf.api_key} type=\"text\" placeholder={__('Access Api Key...', 'bit-integrations')} disabled={isInfo} />\n      <div style={{ color: 'red', fontSize: '15px' }}>{error.api_key}</div>\n\n      <small className=\"d-blk mt-3\">\n        {__('To Get Api Key, Please Visit', 'bit-integrations')}\n        &nbsp;\n        <a className=\"btcd-link\" href=\"https://api.lemlist.com/teams/tea_beEpCu2irsJfn3PJr/settings/integrations#api\" target=\"_blank\" rel=\"noreferrer\">{__('Lemlist API Token', 'bit-integrations')}</a>\n      </small>\n      <br />\n      <br />\n      {isLoading === 'auth' && (\n        <div className=\"flx mt-5\">\n          <LoaderSm size={25} clr=\"#022217\" className=\"mr-2\" />\n          Checking Api Key!!!\n        </div>\n      )}\n\n      {(showAuthMsg && !isAuthorized && !isLoading) && (\n        <div className=\"flx mt-5\" style={{ color: 'red' }}>\n          <span className=\"btcd-icn mr-2\" style={{ fontSize: 30, marginTop: -5 }}>\n            &times;\n          </span>\n          Sorry, Api key is invalid\n        </div>\n      )}\n      {!isInfo && (\n        <>\n          <button onClick={handleAuthorize} className=\"btn btcd-btn-lg green sh-sm flx\" type=\"button\" disabled={isAuthorized || isLoading}>\n            {isAuthorized ? __('Authorized âœ”', 'bit-integrations') : __('Authorize', 'bit-integrations')}\n            {isLoading && <LoaderSm size={20} clr=\"#022217\" className=\"ml-2\" />}\n          </button>\n          <br />\n          <button onClick={() => nextPage(2)} className=\"btn f-right btcd-btn-lg green sh-sm flx\" type=\"button\" disabled={!isAuthorized}>\n            {__('Next', 'bit-integrations')}\n            <BackIcn className=\"ml-1 rev-icn\" />\n          </button>\n        </>\n      )}\n      <Note note={ActiveInstructions} />\n    </div>\n  )\n}\n"],"names":["reactExports","jsxRuntimeExports","__","LoaderSm","Note","bitsFetch","n","BackIcn","refreshLemlistCampaign","TutorialLink","tutorialLinks","LemlistAuthorization","lemlistConf","setLemlistConf","step","setstep","setSnackbar","isInfo","isLoading","setIsLoading","isAuthorized","setisAuthorized","useState","error","setError","showAuthMsg","setShowAuthMsg","lemlist","handleAuthorize","newConf","__spreadValues","data","result","toast","handleInput","e","rmError","nextPage","ActiveInstructions","jsxs","jsx","Fragment"],"mappings":"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"}