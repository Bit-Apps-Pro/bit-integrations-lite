{"version":3,"file":"bi.39.433.js","sources":["../frontend-dev/src/components/AllIntegrations/FreshSales/FreshSales.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport FreshSalesAuthorization from './FreshSalesAuthorization'\nimport { checkMappedFields, checkRequired, handleInput } from './FreshSalesCommonFunc'\nimport FreshSalesIntegLayout from './FreshSalesIntegLayout'\n\nfunction FreshSales({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [tab, settab] = useState(0)\n\n  const [freshSalesConf, setFreshSalesConf] = useState({\n    name: 'FreshSales',\n    type: 'FreshSales',\n    api_key: process.env.NODE_ENV === 'development' ? '6Vs6MISKGGdRldxh9qrPGA' : '',\n    bundle_alias: process.env.NODE_ENV === 'development' ? 'atc1-533599418831228470.myfreshworks.com/crm/sales' : '',\n    default:\n    {\n      modules: {\n        Account: {\n          required: true,\n          requiredFields: [\n          ],\n        },\n        Deal: {\n          required: true,\n          requiredFields: [\n          ],\n        },\n        Contact: {\n          required: true,\n          requiredFields: [\n          ],\n        },\n        Product: {\n          requiredFields: [\n            // 'name',\n          ],\n        },\n\n      },\n    },\n    moduleData: { module: '' },\n    field_map: [\n      { formField: '', freshSalesFormField: '' },\n    ],\n    relatedlists: [],\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    saveActionConf({ flow, setFlow, allIntegURL, conf: freshSalesConf, navigate, setIsLoading, setSnackbar })\n  }\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(freshSalesConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    if (!checkRequired(freshSalesConf)) {\n      if (['Deal', 'Contact'].includes(freshSalesConf.moduleData.module)) {\n        setSnackbar({ show: true, msg: __('Please select a account or a contact', 'bit-integrations') })\n      }\n      if (freshSalesConf.moduleData.module === 'Contacts') {\n        setSnackbar({ show: true, msg: __('Please select a account', 'bit-integrations') })\n      }\n      return\n    }\n    freshSalesConf.moduleData.module && freshSalesConf.field_map.length > 0 && setstep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <FreshSalesAuthorization\n        formID={formID}\n        freshSalesConf={freshSalesConf}\n        setFreshSalesConf={setFreshSalesConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <FreshSalesIntegLayout\n          tab={tab}\n          settab={settab}\n          formID={formID}\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, tab, freshSalesConf, setFreshSalesConf, formID, setIsLoading, setSnackbar)}\n          freshSalesConf={freshSalesConf}\n          setFreshSalesConf={setFreshSalesConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={freshSalesConf.moduleData.module === '' || freshSalesConf.field_map.length < 1}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={freshSalesConf}\n        setDataConf={setFreshSalesConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default FreshSales\n"],"names":["FreshSales","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","tab","settab","freshSalesConf","setFreshSalesConf","saveConfig","saveActionConf","nextPage","pageNo","checkMappedFields","__","checkRequired","jsx","SnackMsg","Steps","FreshSalesAuthorization","__spreadValues","FreshSalesIntegLayout","e","handleInput","jsxs","IntegrationStepThree"],"mappings":"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"}