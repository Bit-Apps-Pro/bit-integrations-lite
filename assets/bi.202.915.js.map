{"version":3,"file":"bi.202.915.js","sources":["../frontend-dev/src/components/AllIntegrations/NutshellCRM/IntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/NutshellCRM/NutshellCRMActions.jsx","../frontend-dev/src/components/AllIntegrations/NutshellCRM/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/NutshellCRM/NutshellCRMFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/NutshellCRM/NutshellCRMIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport { getAllCompanies, getAllCompanyTypes, getAllContacts, getAllProducts, getAllSources, getAllTags } from './NutshellCRMCommonFunc'\nimport Loader from '../../Loaders/Loader'\n\nexport default function NutshellCRMActions({ nutshellCRMConf, setNutshellCRMConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...nutshellCRMConf }\n    if (type === 'priority') {\n      if (e.target?.checked) {\n        newConf.actions.Priority = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.Priority\n      }\n    } else if (type === 'Contact') {\n      if (e.target?.checked) {\n        getAllContacts(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.Contact = true\n\n      } else {\n        delete newConf.actions.Contact\n      }\n    } else if (type === 'Product') {\n      if (e.target?.checked) {\n        getAllProducts(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.Product = true\n\n      } else {\n        delete newConf.actions.Contact\n      }\n    } else if (type === 'Source') {\n      if (e.target?.checked) {\n        getAllSources(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.Source = true\n\n      } else {\n        delete newConf.actions.Contact\n      }\n    } else if (type === 'Tag') {\n      if (e.target?.checked) {\n        getAllTags(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.Tag = true\n\n      } else {\n        delete newConf.actions.Contact\n      }\n    } else if (type === 'Company') {\n      if (e.target?.checked) {\n        getAllCompanies(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.Company = true\n\n      } else {\n        delete newConf.actions.Company\n      }\n    } else if (type === 'CompanyType') {\n      if (e.target?.checked) {\n        getAllCompanyTypes(nutshellCRMConf, setNutshellCRMConf, setLoading)\n        newConf.actions.CompanyType = true\n\n      } else {\n        delete newConf.actions.CompanyType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setNutshellCRMConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...nutshellCRMConf }\n    newConf[name] = val\n    setNutshellCRMConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {nutshellCRMConf.actionName === 'lead' && <TableCheckBox checked={nutshellCRMConf.actions?.Priority || false} onChange={(e) => actionHandler(e, 'priority')} className=\"wdt-200 mt-4 mr-2\" value=\"priority\" title={__('Priority', 'bit-integrations')} subTitle={__('Priority', 'bit-integrations')} />}\n      {(nutshellCRMConf.actionName === 'lead' || nutshellCRMConf.actionName === 'people') && <TableCheckBox checked={nutshellCRMConf?.selectedCompany || false} onChange={(e) => actionHandler(e, 'Company')} className=\"wdt-200 mt-4 mr-2\" value=\"Company\" title={__('Add Company', 'bit - integrations')} subTitle={__('Add Company')} />}\n      {nutshellCRMConf.actionName === 'lead' && <TableCheckBox checked={nutshellCRMConf?.selectedProduct || false} onChange={(e) => actionHandler(e, 'Product')} className=\"wdt-200 mt-4 mr-2\" value=\"Product\" title={__('Add Product', 'bit - integrations')} subTitle={__('Add Product')} />}\n      {nutshellCRMConf.actionName === 'lead' && <TableCheckBox checked={nutshellCRMConf?.selectedSource || false} onChange={(e) => actionHandler(e, 'Source')} className=\"wdt-200 mt-4 mr-2\" value=\"Source\" title={__('Add Source', 'bit - integrations')} subTitle={__('Add Source')} />}\n      {nutshellCRMConf.actionName === 'lead' && <TableCheckBox checked={nutshellCRMConf?.selectedTag || false} onChange={(e) => actionHandler(e, 'Tag')} className=\"wdt-200 mt-4 mr-2\" value=\"Tag\" title={__('Add Tag', 'bit - integrations')} subTitle={__('Add Tag')} />}\n      {(nutshellCRMConf.actionName === 'company' || nutshellCRMConf.actionName === 'lead') && <TableCheckBox checked={nutshellCRMConf?.selectedContact || false} onChange={(e) => actionHandler(e, 'Contact')} className=\"wdt-200 mt-4 mr-2\" value=\"Contact\" title={__('Add Contact', 'bit - integrations')} subTitle={__('Add Contact')} />}\n      {nutshellCRMConf.actionName === 'company' && <TableCheckBox checked={nutshellCRMConf?.selectedCompanyType || false} onChange={(e) => actionHandler(e, 'CompanyType')} className=\"wdt-200 mt-4 mr-2\" value=\"CompanyType\" title={__('Add CompanyType', 'bit - integrations')} subTitle={__('Add CompanyType')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'Company'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Company', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Company', 'bit-integrations')}\n        </div>\n\n        {loading.companies ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.companies?.map(company => ({ label: company.name, value: company.id }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedCompany}\n              onChange={val => setChanges(val, 'selectedCompany')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'Contact'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Contact', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Contact', 'bit-integrations')}\n        </div>\n\n        {loading.contacts ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.contacts?.map(contact => ({ label: contact.name, value: contact.id }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedContact}\n              onChange={val => setChanges(val, 'selectedContact')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'Product'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Product', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Product', 'bit-integrations')}\n        </div>\n\n        {loading.products ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.products?.map(product => ({ label: product.name, value: product.id }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedProduct}\n              onChange={val => setChanges(val, 'selectedProduct')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'Source'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Source', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Source', 'bit-integrations')}\n        </div>\n\n        {loading.sources ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.sources?.map(source => ({ label: source.name, value: source.id }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedSource}\n              onChange={val => setChanges(val, 'selectedSource')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'Tag'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add Tag', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Tag', 'bit-integrations')}\n        </div>\n\n        {loading.tags ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.tags?.map(tag => ({ label: tag.name, value: tag.name }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedTag}\n              onChange={val => setChanges(val, 'selectedTag')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'CompanyType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Add CompanyType', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select CompanyType', 'bit-integrations')}\n        </div>\n\n        {loading.companyTypes ? (\n          <Loader style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: 45,\n            transform: 'scale(0.5)',\n          }}\n          />\n        )\n          : (<div className=\"flx flx-between mt-2\">\n            <MultiSelect\n              options={nutshellCRMConf?.companyTypes?.map(companyType => ({ label: companyType.name, value: companyType.id }))}\n              className=\"msl-wrp-options\"\n              defaultValue={nutshellCRMConf?.selectedCompanyType}\n              onChange={val => setChanges(val, 'selectedCompanyType')}\n              singleSelect\n              closeOnSelect\n            />\n          </div>)}\n      </ConfirmModal>\n    </div>\n  )\n}\n\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport CustomField from './CustomField'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function NutshellCRMFieldMap({ i, formFields, field, nutshellCRMConf, setNutshellCRMConf }) {\n  const requiredFields = nutshellCRMConf?.nutshellCRMFields && nutshellCRMConf?.nutshellCRMFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = nutshellCRMConf?.nutshellCRMFields && nutshellCRMConf?.nutshellCRMFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, nutshellCRMConf, setNutshellCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={nutshellCRMConf}\n              setConf={setNutshellCRMConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"nutshellCRMFormField\" value={i < requiredFields.length ? (requiredFields[i].key || '') : (field.nutshellCRMFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, nutshellCRMConf, setNutshellCRMConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, nutshellCRMConf, setNutshellCRMConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, nutshellCRMConf, setNutshellCRMConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable no-unused-vars */\nimport { create } from 'mutative'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from './IntegrationHelpers'\nimport NutshellCRMActions from './NutshellCRMActions'\nimport { generateMappedField } from './NutshellCRMCommonFunc'\nimport NutshellCRMFieldMap from './NutshellCRMFieldMap'\n\nexport default function NutshellCRMIntegLayout({ formFields, handleInput, nutshellCRMConf, setNutshellCRMConf, loading, setLoading, isLoading, setIsLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    setNutshellCRMConf(prevConf => create(prevConf, (draftConf) => {\n      const { name } = e.target\n\n      if (e.target.value !== '') {\n        draftConf.actionName = e.target.value\n\n        if (draftConf.actionName === \"people\") {\n          draftConf.nutshellCRMFields = draftConf.peopleFields\n        } else if (draftConf.actionName === \"company\") {\n          draftConf.nutshellCRMFields = draftConf.companyFields\n        } else if (draftConf.actionName === \"lead\") {\n          draftConf.nutshellCRMFields = draftConf.leadFields\n          draftConf.leadStatus = ['Lead', 'Open', 'Replied', 'Opportunity', 'Quotation', 'Lost Quotation', 'Interested', 'Converted', 'Do Not Company']\n        }\n        draftConf.field_map = generateMappedField(draftConf)\n\n      } else {\n        delete draftConf[name]\n      }\n    }))\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...nutshellCRMConf }\n    newConf[name] = val\n\n    setNutshellCRMConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={nutshellCRMConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"company\" data-action_name=\"company\">{__('Create Company', 'bit-integrations')}</option>\n        <option value=\"people\" data-action_name=\"people\">{__('Create People', 'bit-integrations')}</option>\n        <option value=\"lead\" data-action_name=\"lead\">{__('Create Lead', 'bit-integrations')}</option>\n      </select>\n      <br />\n\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {nutshellCRMConf.actionName && !isLoading && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('NutshellCRM Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {nutshellCRMConf?.field_map.map((itm, i) => (\n            <NutshellCRMFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              nutshellCRMConf={nutshellCRMConf}\n              formFields={formFields}\n              setNutshellCRMConf={setNutshellCRMConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(nutshellCRMConf.field_map.length, nutshellCRMConf, setNutshellCRMConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <NutshellCRMActions\n            nutshellCRMConf={nutshellCRMConf}\n            setNutshellCRMConf={setNutshellCRMConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\n"],"names":["reactExports","jsxRuntimeExports","Loader","Recoil_index_18","TableCheckBox","__","ConfirmModal","u","$btcbi","create","getAllContacts","getAllProducts","getAllSources","getAllTags","getAllCompanies","getAllCompanyTypes","generateMappedField","SmartTagField","MtInput","addFieldMap","i","confTmp","setConf","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","NutshellCRMActions","nutshellCRMConf","setNutshellCRMConf","loading","setLoading","_a","_b","_c","_d","_e","_f","_g","actionMdl","setActionMdl","useState","actionHandler","e","type","clsActionMdl","setChanges","val","name","jsxs","jsx","MultiSelect","company","contact","product","source","tag","companyType","CustomField","field","conf","fieldLabel","className","NutshellCRMFieldMap","formFields","requiredFields","fld","allNonRequiredFields","btcbi","useRecoilValue","isPro","ev","f","key","label","Fragment","NutshellCRMIntegLayout","handleInput","isLoading","setIsLoading","setSnackbar","handleActionInput","prevConf","draftConf","itm"],"mappings":"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"}