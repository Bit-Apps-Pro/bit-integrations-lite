{"version":3,"file":"bi.394.400.js","sources":["../frontend-dev/src/components/AllIntegrations/GoogleContacts/GoogleContacts.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { setGrantTokenResponse } from '../IntegrationHelpers/GoogleIntegrationHelpers'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport GoogleContactsAuthorization from './GoogleContactsAuthorization'\nimport { checkMappedFields } from './GoogleContactsCommonFunc'\nimport GoogleContactsIntegLayout from './GoogleContactsIntegLayout'\n\nfunction GoogleContacts({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { flowID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const allActions = [\n    { key: '1', label: 'Create a contact' },\n    { key: '2', label: 'Update a contact' },\n  ]\n\n  const defaultContactsFields = [\n    { key: 'phoneNumber', label: 'Phone Number', required: true },\n    { key: 'name', label: 'Name', required: true },\n    { key: 'biographies', label: 'Biographies', required: false },\n    { key: 'nickname', label: 'Nickname', required: false },\n    { key: 'city', label: 'City', required: false },\n    { key: 'country', label: 'Country', required: false },\n    { key: 'locations', label: 'Locations', required: false },\n    { key: 'email', label: 'email', required: false },\n    { key: 'occupation', label: 'Occupation', required: false },\n    { key: 'organization', label: 'Organization', required: false },\n  ]\n\n  const [googleContactsConf, setGoogleContactsConf] = useState({\n    name: 'Google Contacts',\n    type: 'Google Contacts',\n    mainAction: '',\n    clientId: process.env.NODE_ENV === 'development' ? '266670391931-688o26jcfb8iqqos8fvlusqifmjtv2on.apps.googleusercontent.com' : '',\n    clientSecret: process.env.NODE_ENV === 'development' ? '1M7oVG0Y_4kjvnNnxe2b0Xyi' : '',\n    field_map: [{ formField: '', googleContactsFormField: '' }],\n    default: defaultContactsFields,\n    allActions,\n    actions: {},\n  })\n\n  useEffect(() => {\n    window.opener && setGrantTokenResponse('googleContacts')\n  }, [])\n\n  const saveConfig = () => {\n    saveActionConf({ flow, setFlow, allIntegURL, conf: googleContactsConf, navigate, setIsLoading, setSnackbar })\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\">\n        <Steps step={3} active={step} />\n      </div>\n\n      {/* STEP 1 */}\n      <GoogleContactsAuthorization\n        flowID={flowID}\n        googleContactsConf={googleContactsConf}\n        setGoogleContactsConf={setGoogleContactsConf}\n        step={step}\n        setStep={setStep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div\n        className=\"btcd-stp-page\"\n        style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}\n      >\n        <GoogleContactsIntegLayout\n          flowID={flowID}\n          formFields={formFields}\n          googleContactsConf={googleContactsConf}\n          setGoogleContactsConf={setGoogleContactsConf}\n        />\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={googleContactsConf}\n        setDataConf={setGoogleContactsConf}\n        formFields={formFields}\n      />\n\n      <div\n        className=\"btcd-stp-page\"\n        style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}\n      >\n        <button\n          onClick={() => setStep(3)}\n          disabled={!checkMappedFields(googleContactsConf?.field_map) || googleContactsConf.mainAction === '' || isLoading}\n          className=\"btn ml-auto btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GoogleContacts\n"],"names":["GoogleContacts","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","flowID","useParams","isLoading","setIsLoading","useState","step","setStep","snack","setSnackbar","allActions","defaultContactsFields","googleContactsConf","setGoogleContactsConf","useEffect","setGrantTokenResponse","saveConfig","saveActionConf","jsx","SnackMsg","Steps","GoogleContactsAuthorization","__spreadValues","GoogleContactsIntegLayout","IntegrationStepThree","jsxs","checkMappedFields","__"],"mappings":"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"}