{"version":3,"file":"bi.128.366.js","sources":["../frontend-dev/src/components/AllIntegrations/FluentCRM/FluentCrm.jsx"],"sourcesContent":["import { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport FluentCrmAuthorization from './FluentCrmAuthorization'\nimport { checkMappedFields, refreshCrmList } from './FluentCrmCommonFunc'\nimport FluentCrmIntegLayout from './FluentCrmIntegLayout'\n\nexport default function FluentCrm({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({})\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [fluentCrmConf, setFluentCrmConf] = useState({\n    name: 'Fluent CRM',\n    type: 'Fluent Crm',\n    actionName: '',\n    field_map: [\n      { formField: '', fluentCRMField: '' },\n    ],\n    actions: {},\n  })\n\n  const nextPage = (val) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (val === 3) {\n      if (!checkMappedFields(fluentCrmConf)) {\n        setSnackbar({ show: true, msg: 'Please map all required fields to continue.' })\n        return\n      }\n      if (fluentCrmConf?.actionName === 'add-user' && !fluentCrmConf.list_id) {\n        setSnackbar({ show: true, msg: 'Please select list to continue.' })\n        return\n      }\n      if (fluentCrmConf.name !== '' && fluentCrmConf.field_map.length > 0) {\n        setStep(val)\n      }\n    } else {\n      setStep(val)\n      // if (val === 2 && fluentCrmConf.name) {\n      //   refreshCrmList(formID, fluentCrmConf, setFluentCrmConf, setIsLoading, setSnackbar)\n      // }\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\">\n        <Steps step={3} active={step} />\n      </div>\n\n      {/* STEP 1 */}\n      <FluentCrmAuthorization\n        formID={formID}\n        fluentCrmConf={fluentCrmConf}\n        setFluentCrmConf={setFluentCrmConf}\n        step={step}\n        nextPage={nextPage}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ width: step === 2 && 900, height: step === 2 && 'auto', minHeight: step === 2 && `${200}px` }}>\n        <FluentCrmIntegLayout\n          formID={formID}\n          formFields={formFields}\n          fluentCrmConf={fluentCrmConf}\n          setFluentCrmConf={setFluentCrmConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          loading={loading}\n          setLoading={setLoading}\n          setSnackbar={setSnackbar}\n        />\n        <br />\n        <br />\n        <br />\n        <button\n          onClick={() => nextPage(3)}\n          disabled={fluentCrmConf.field_map.length < 1}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          <BackIcn className=\"ml-1 rev-icn\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveIntegConfig(flow, setFlow, allIntegURL, fluentCrmConf, navigate, '', '', setIsLoading)}\n        isLoading={isLoading}\n        dataConf={fluentCrmConf}\n        setDataConf={setFluentCrmConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n"],"names":["FluentCrm","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","loading","setLoading","step","setStep","snack","setSnackbar","fluentCrmConf","setFluentCrmConf","nextPage","val","checkMappedFields","jsx","SnackMsg","Steps","FluentCrmAuthorization","jsxs","FluentCrmIntegLayout","__","BackIcn","IntegrationStepThree","saveIntegConfig"],"mappings":"ycAaA,SAAwBA,EAAU,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC5E,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACb,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAASC,CAAU,EAAIF,EAAA,SAAS,CAAE,CAAA,EACnC,CAACG,EAAMC,CAAO,EAAIJ,WAAS,CAAC,EAC5B,CAACK,EAAOC,CAAW,EAAIN,WAAS,CAAE,KAAM,GAAO,EAC/C,CAACO,EAAeC,CAAgB,EAAIR,WAAS,CACjD,KAAM,aACN,KAAM,aACN,WAAY,GACZ,UAAW,CACT,CAAE,UAAW,GAAI,eAAgB,EAAG,CACtC,EACA,QAAS,CAAC,CAAA,CACX,EAEKS,EAAYC,GAAQ,CAIxB,GAHA,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,EACFA,IAAQ,EAAG,CACT,GAAA,CAACC,EAAkBJ,CAAa,EAAG,CACrCD,EAAY,CAAE,KAAM,GAAM,IAAK,6CAA+C,CAAA,EAC9E,MACF,CACA,IAAIC,GAAA,YAAAA,EAAe,cAAe,YAAc,CAACA,EAAc,QAAS,CACtED,EAAY,CAAE,KAAM,GAAM,IAAK,iCAAmC,CAAA,EAClE,MACF,CACIC,EAAc,OAAS,IAAMA,EAAc,UAAU,OAAS,GAChEH,EAAQM,CAAG,CACb,MAEAN,EAAQM,CAAG,CAIb,EAGF,cACG,MACC,CAAA,SAAA,CAACE,EAAAA,IAAAC,EAAA,CAAS,MAAAR,EAAc,YAAAC,CAA0B,CAAA,EAClDM,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQX,CAAA,CAAM,CAChC,CAAA,EAGAS,EAAA,IAACG,EAAA,CACC,OAAAnB,EACA,cAAAW,EACA,iBAAAC,EACA,KAAAL,EACA,SAAAM,EACA,UAAAX,EACA,aAAAC,EACA,YAAAO,CAAA,CACF,EAGAU,OAAC,OAAI,UAAU,gBAAgB,MAAO,CAAE,MAAOb,IAAS,GAAK,IAAK,OAAQA,IAAS,GAAK,OAAQ,UAAWA,IAAS,GAAK,OACvH,EAAA,SAAA,CAAAS,EAAA,IAACK,EAAA,CACC,OAAArB,EACA,WAAAN,EACA,cAAAiB,EACA,iBAAAC,EACA,UAAAV,EACA,aAAAC,EACA,QAAAE,EACA,WAAAC,EACA,YAAAI,CAAA,CACF,QACC,KAAG,EAAA,QACH,KAAG,EAAA,QACH,KAAG,EAAA,EACJU,EAAA,KAAC,SAAA,CACC,QAAS,IAAMP,EAAS,CAAC,EACzB,SAAUF,EAAc,UAAU,OAAS,EAC3C,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAW,EAAG,OAAQ,kBAAkB,EAC9BN,EAAAA,IAACO,EAAQ,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACpC,CAAA,EACF,EAGAP,EAAA,IAACQ,EAAA,CACC,KAAAjB,EACA,WAAY,IAAMkB,EAAgB7B,EAAMD,EAASE,EAAac,EAAeb,EAAU,GAAI,GAAIK,CAAY,EAC3G,UAAAD,EACA,SAAUS,EACV,YAAaC,EACb,WAAAlB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}