{"version":3,"file":"bi.646.894.js","sources":["../frontend-dev/src/components/AllIntegrations/CompanyHub/CompanyHubActions.jsx","../frontend-dev/src/components/AllIntegrations/CompanyHub/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/CompanyHub/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/CompanyHub/CompanyHubFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/CompanyHub/CompanyHubIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport { getAllCompanies, getAllContacts } from './CompanyHubCommonFunc'\n\nexport default function CompanyHubActions({ companyHubConf, setCompanyHubConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...companyHubConf }\n    if (type === 'company') {\n      if (e.target?.checked) {\n        if (newConf.companies === undefined) {\n          newConf.companies = getAllCompanies(companyHubConf, setCompanyHubConf, setLoading)\n        }\n        newConf.actions.company = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.company\n      }\n    } else if (type === 'source') {\n      if (e.target?.checked) {\n        if (newConf.sources === undefined) {\n          newConf.sources = ['Web', 'Call', 'Referral', 'Other']\n        }\n        newConf.actions.source = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.source\n      }\n    } else if (type === 'contact') {\n      if (e.target?.checked) {\n        if (newConf.contacts === undefined) {\n          newConf.contacts = getAllContacts(companyHubConf, setCompanyHubConf, setLoading)\n        }\n        newConf.actions.contact = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.contact\n      }\n    }\n\n    setActionMdl({ show: type })\n    setCompanyHubConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    setCompanyHubConf(prevConf => {\n      prevConf[name] = val\n      return prevConf\n    })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {(companyHubConf.actionName === 'contact' || companyHubConf.actionName === 'deal') && <TableCheckBox checked={companyHubConf?.selectedCompany?.length || false} onChange={(e) => actionHandler(e, 'company')} className=\"wdt-200 mt-4 mr-2\" value=\"company\" title={__('Add Company', 'bit - integrations')} subTitle={__('Add Company')} />}\n      {companyHubConf.actionName === 'contact' && <TableCheckBox checked={companyHubConf?.selectedSource?.length || false} onChange={(e) => actionHandler(e, 'source')} className=\"wdt-200 mt-4 mr-2\" value=\"source\" title={__('Add Source', 'bit - integrations')} subTitle={__('Add Contact Source')} />}\n      {companyHubConf.actionName === 'deal' && <TableCheckBox checked={companyHubConf?.selectedContact?.length || false} onChange={(e) => actionHandler(e, 'contact')} className=\"wdt-200 mt-4 mr-2\" value=\"contact\" title={__('Add Contact', 'bit - integrations')} subTitle={__('Add Contact')} />}\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'company'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('company', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Company', 'bit-integrations')}\n        </div>\n        {\n          loading.companies ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={companyHubConf?.companies?.map(company => ({ label: company.name, value: `${company.id}` }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={companyHubConf?.selectedCompany}\n                  onChange={val => setChanges(val, 'selectedCompany')}\n                  singleSelect\n                  closeOnSelect\n                />\n                <button onClick={() => getAllCompanies(companyHubConf, setCompanyHubConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Companies', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'source'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Source', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Source', 'bit-integrations')}\n        </div>\n\n        <div className=\"flx flx-between mt-2\">\n          <MultiSelect\n            options={companyHubConf?.sources?.map(source => ({ label: source, value: source }))}\n            className=\"msl-wrp-options\"\n            defaultValue={companyHubConf?.selectedSource}\n            onChange={val => setChanges(val, 'selectedSource')}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'contact'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Contact', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Contact', 'bit-integrations')}\n        </div>\n        {\n          loading.contact ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={companyHubConf?.contacts?.map(company => ({ label: company.name, value: `${company.id}` }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={companyHubConf?.selectedContact}\n                  onChange={val => setChanges(val, 'selectedContact')}\n                  singleSelect\n                  closeOnSelect\n                />\n                <button onClick={() => getAllContacts(companyHubConf, setCompanyHubConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Contacts', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n    </div>\n  )\n}\n\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport CustomField from './CustomField'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\n\nexport default function CompanyHubFieldMap({ i, formFields, field, companyHubConf, setCompanyHubConf }) {\n  let allFields = []\n  if (companyHubConf.actionName === 'contact') {\n    allFields = companyHubConf?.contactFields\n  } else if (companyHubConf.actionName === 'company') {\n    allFields = companyHubConf?.companyFields\n  } else if (companyHubConf.actionName === 'deal') {\n    allFields = companyHubConf?.dealFields\n  }\n\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = allFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, companyHubConf, setCompanyHubConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={companyHubConf}\n              setConf={setCompanyHubConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"companyHubFormField\" value={i < requiredFields.length ? (requiredFields[i].key || '') : (field.companyHubFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, companyHubConf, setCompanyHubConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, companyHubConf, setCompanyHubConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, companyHubConf, setCompanyHubConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport CompanyHubActions from './CompanyHubActions'\nimport { generateMappedField } from './CompanyHubCommonFunc'\nimport CompanyHubFieldMap from './CompanyHubFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\n\nexport default function CompanyHubIntegLayout({ formFields, companyHubConf, setCompanyHubConf, loading, setLoading, isLoading, setIsLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...companyHubConf }\n    const { name } = e.target\n\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      let companyHubFields = []\n\n      if (e.target.value === 'contact') {\n        companyHubFields = companyHubConf?.contactFields\n      } else if (e.target.value === 'company') {\n        companyHubFields = companyHubConf?.companyFields\n      } else if (e.target.value === 'deal') {\n        companyHubFields = companyHubConf?.dealFields\n      }\n\n      newConf.field_map = generateMappedField(companyHubFields)\n    } else {\n      delete newConf[name]\n      delete newConf.actionId\n    }\n    setCompanyHubConf(newConf)\n  }\n\n  const setChanges = (val, name) => {\n    setCompanyHubConf(prevConf => {\n      prevConf[name] = val\n      return prevConf\n    })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={companyHubConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"contact\" data-action_name=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"company\" data-action_name=\"company\">{__('Create Company', 'bit-integrations')}</option>\n        <option value=\"deal\" data-action_name=\"deal\">{__('Create Deal', 'bit-integrations')}</option>\n      </select>\n\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {companyHubConf.actionName === \"deal\" && !isLoading\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Deal Stage:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={[\"Prospecting\", \"Qualification\", \"Discussion\", \"Proposal\", \"Review\", \"Closed Won\", \"Closed Lost\"].map(stage => ({ label: stage, value: stage }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={companyHubConf?.selectedStage}\n                onChange={val => setChanges(val, 'selectedStage')}\n                singleSelect\n                closeOnSelect\n              />\n            </div>\n          </>\n        )}\n      {companyHubConf.actionName && !isLoading && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n            <button\n              className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n              style={{ '--tooltip-txt': `'${__('Refresh Fields', 'bit-integrations')}'` }}\n              type=\"button\"\n            >\n              &#x21BB;\n            </button>\n          </div>\n\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('CompanyHub Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {companyHubConf?.field_map.map((itm, i) => (\n            <CompanyHubFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              companyHubConf={companyHubConf}\n              formFields={formFields}\n              setCompanyHubConf={setCompanyHubConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(companyHubConf.field_map.length, companyHubConf, setCompanyHubConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <CompanyHubActions\n            companyHubConf={companyHubConf}\n            setCompanyHubConf={setCompanyHubConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\n"],"names":["CompanyHubActions","companyHubConf","setCompanyHubConf","loading","setLoading","actionMdl","setActionMdl","useState","actionHandler","e","type","newConf","__spreadValues","_a","getAllCompanies","_b","_c","getAllContacts","clsActionMdl","setChanges","val","name","prevConf","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","_d","company","_e","source","_f","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","CompanyHubFieldMap","formFields","allFields","requiredFields","fld","allNonRequiredFields","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","CompanyHubIntegLayout","isLoading","setIsLoading","setSnackbar","handleActionInput","companyHubFields","generateMappedField","stage","itm"],"mappings":"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"}