{"version":3,"file":"bi.800.791.js","sources":["../frontend-dev/src/components/AllIntegrations/RestrictContent/RestrictContentCommonFunc.js"],"sourcesContent":["/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\";\nimport { __, sprintf } from \"../../../Utils/i18nwrap\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\n\nexport const handleInput = (e, restrictConf, setRestrictConf) => {\n    const newConf = { ...restrictConf };\n    const { name } = e.target;\n    if (e.target.value !== \"\") {\n        newConf[name] = e.target.value;\n    } else {\n        delete newConf[name];\n    }\n    setRestrictConf({ ...newConf });\n};\n\nexport const getAllLevels = (restrictConf, setRestrictConf, setIsLoading) => {\n    setIsLoading(true);\n    const loadPostTypes = bitsFetch(null, \"restrict_get_all_levels\", null, \"GET\").then((result) => {\n        if (result && result.success) {\n            const newConf = { ...restrictConf };\n            if (!newConf.default) newConf.default = {};\n            if (result.data.levellists) {\n                newConf.default.levellists = result.data.levellists;\n            }\n            setRestrictConf({ ...newConf });\n            setIsLoading(false);\n            return \"Levels refreshed successfully\";\n        } else {\n            setIsLoading(false);\n            return \"Levels refresh failed. please try again\";\n        }\n    });\n    toast.promise(loadPostTypes, {\n        success: (data) => data,\n        error: __(\"Error Occurred\", \"bit-integrations\"),\n        loading: __(\"Loading Levels...\"),\n    });\n    // .catch(() => setIsLoading(false))\n};\n\nexport const generateMappedField = (restrictConf) => {\n    const restrictFlds = restrictConf?.actionName === \"add-member-level\" ? restrictConf?.levelFields : [] || [];\n    const requiredFlds = restrictFlds?.filter((fld) => fld.required === true);\n    return requiredFlds.length > 0\n        ? requiredFlds.map((field) => ({ formField: \"\", restrictField: field.key }))\n        : [{ formField: \"\", restrictField: \"\" }];\n};\n\nexport const checkMappedFields = (restrictConf) => {\n    if(restrictConf?.actionName === 'remove-member-level'){\n      return true;\n    }\n    const mappedFields = restrictConf?.field_map\n        ? restrictConf.field_map.filter(\n              (mappedField) =>\n                  !mappedField.formField || !mappedField.restrictField || (!mappedField.formField === \"custom\" && !mappedField.customValue)\n          )\n        : [];\n    if (mappedFields.length > 0) {\n        return false;\n    }\n    return true;\n};\n"],"names":["bitsFetch","_t","__","handleInput","e","restrictConf","setRestrictConf","newConf","__spreadValues","name","getAllLevels","setIsLoading","loadPostTypes","result","toast","data"],"mappings":"yVAAA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAKY,MAACC,EAAc,CAACC,EAAGC,EAAcC,IAAoB,CAC7D,MAAMC,EAAUC,EAAA,GAAKH,GACf,CAAE,KAAAI,CAAI,EAAKL,EAAE,OACfA,EAAE,OAAO,QAAU,GACnBG,EAAQE,CAAI,EAAIL,EAAE,OAAO,MAEzB,OAAOG,EAAQE,CAAI,EAEvBH,EAAgBE,EAAA,GAAKD,EAAS,CAClC,EAEaG,EAAe,CAACL,EAAcC,EAAiBK,IAAiB,CACzEA,EAAa,EAAI,EACjB,MAAMC,EAAgBZ,EAAU,KAAM,0BAA2B,KAAM,KAAK,EAAE,KAAMa,GAAW,CAC3F,GAAIA,GAAUA,EAAO,QAAS,CAC1B,MAAMN,EAAUC,EAAA,GAAKH,GACrB,OAAKE,EAAQ,UAASA,EAAQ,QAAU,CAAA,GACpCM,EAAO,KAAK,aACZN,EAAQ,QAAQ,WAAaM,EAAO,KAAK,YAE7CP,EAAgBE,EAAA,GAAKD,EAAS,EAC9BI,EAAa,EAAK,EACX,+BACnB,KACY,QAAAA,EAAa,EAAK,EACX,yCAEnB,CAAK,EACDG,EAAM,QAAQF,EAAe,CACzB,QAAUG,GAASA,EACnB,MAAOb,EAAG,iBAAkB,kBAAkB,EAC9C,QAASA,EAAG,mBAAmB,CACvC,CAAK,CAEL"}