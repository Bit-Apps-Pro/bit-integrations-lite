{"version":3,"file":"bi.227.128.js","sources":["../frontend-dev/src/components/AllIntegrations/Hubspot/EditHubspot.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useNavigate } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, handleInput } from './HubspotCommonFunc'\nimport HubspotIntegLayout from './HubspotIntegLayout'\n\nfunction EditHubspot({ allIntegURL }) {\n  const navigate = useNavigate()\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [hubspotConf, setHubspotConf] = useRecoilState($actionConf)\n  const [isLoading, setIsLoading] = useState(false)\n  const [snack, setSnackbar] = useState({ show: false })\n  const formField = useRecoilValue($formFields)\n  const [loading, setLoading] = useState({\n    auth: false,\n    customFields: false,\n    hubSpotFields: true,\n  })\n\n  const saveConfig = () => {\n    if (!checkMappedFields(hubspotConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n\n    if (hubspotConf.actionName === 'ticket') {\n      if (hubspotConf.pipeline === undefined) {\n        toast.error('Please select a pipeline')\n        return\n      }\n      if (hubspotConf.stage === undefined) {\n        toast.error('Please select a stage')\n        return\n      }\n    }\n\n    saveActionConf({ flow, allIntegURL, conf: hubspotConf, navigate, edit: 1, setIsLoading, setSnackbar })\n  }\n\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 d-in-b\">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, hubspotConf, setHubspotConf)} name=\"name\" value={hubspotConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n\n      <HubspotIntegLayout\n        formFields={formField}\n        handleInput={(e) => handleInput(e, hubspotConf, setHubspotConf, setIsLoading, setSnackbar)}\n        hubspotConf={hubspotConf}\n        setHubspotConf={setHubspotConf}\n        setSnackbar={setSnackbar}\n        loading={loading}\n        setLoading={setLoading}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={!checkMappedFields(hubspotConf)}\n        isLoading={isLoading}\n        dataConf={hubspotConf}\n        setDataConf={setHubspotConf}\n        formFields={formField}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditHubspot\n"],"names":["useNavigate","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$newFlow","$actionConf","$formFields","SnackMsg","__","_t","EditFormInteg","EditWebhookInteg","saveActionConf","IntegrationStepThree","handleInput","checkMappedFields","HubspotIntegLayout","EditHubspot","allIntegURL","navigate","flow","setFlow","useRecoilState","hubspotConf","setHubspotConf","isLoading","setIsLoading","useState","snack","setSnackbar","formField","useRecoilValue","loading","setLoading","saveConfig","toast","jsx","jsxs","e","checkWebhookIntegrationsExist"],"mappings":"AAiBA,OAAA,KAAAA,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,gBAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,MAAA,iBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,EAAA,KAAAC,MAAA,kBAAA,OAAA,KAAAC,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,kBAAA,MAAA,iBAAA,MAAA,kBAAA,SAASC,EAAY,CAAE,YAAAC,GAAe,CACpC,MAAMC,EAAWpB,IACX,CAACqB,EAAMC,CAAO,EAAIC,EAAelB,CAAQ,EACzC,CAACmB,EAAaC,CAAc,EAAIF,EAAejB,CAAW,EAC1D,CAACoB,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAOC,CAAW,EAAIF,WAAS,CAAE,KAAM,GAAO,EAC/CG,EAAYC,EAAezB,CAAW,EACtC,CAAC0B,EAASC,CAAU,EAAIN,WAAS,CACrC,KAAM,GACN,aAAc,GACd,cAAe,EAAA,CAChB,EAEKO,EAAa,IAAM,CACnB,GAAA,CAACnB,EAAkBQ,CAAW,EAAG,CACvBM,EAAA,CAAE,KAAM,GAAM,IAAKrB,EAAG,8BAA+B,kBAAkB,EAAG,EACtF,MACF,CAEI,GAAAe,EAAY,aAAe,SAAU,CACnC,GAAAA,EAAY,WAAa,OAAW,CACtCY,EAAM,MAAM,0BAA0B,EACtC,MACF,CACI,GAAAZ,EAAY,QAAU,OAAW,CACnCY,EAAM,MAAM,uBAAuB,EACnC,MACF,CACF,CAEevB,EAAA,CAAE,KAAAQ,EAAM,YAAAF,EAAa,KAAMK,EAAa,SAAAJ,EAAU,KAAM,EAAG,aAAAO,EAAc,YAAAG,CAAa,CAAA,CAAA,EAGvG,cACG,MAAI,CAAA,MAAO,CAAE,MAAO,GACnB,EAAA,SAAA,CAACO,EAAAA,IAAA7B,EAAA,CAAS,MAAAqB,EAAc,YAAAC,CAA0B,CAAA,EAElDQ,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAD,MAAC,KAAE,UAAU,iBAAkB,SAAG5B,EAAA,oBAAqB,kBAAkB,EAAE,EAC3E4B,EAAAA,IAAC,SAAM,UAAU,qBAAqB,SAAeE,GAAAxB,EAAYwB,EAAGf,EAAaC,CAAc,EAAG,KAAK,OAAO,MAAOD,EAAY,KAAM,KAAK,OAAO,YAAaf,EAAG,sBAAuB,kBAAkB,CAAG,CAAA,CAAA,EACjN,QACC,KAAG,EAAA,EACH,CAAC+B,EAA8BnB,EAAK,gBAAgB,GAAKgB,EAAAA,IAAC1B,GAAc,YAAAmB,EAA0B,EAClGU,EAA8BnB,EAAK,gBAAgB,GAAKgB,EAAA,IAACzB,GAAiB,YAAAkB,EAA0B,EAErGO,EAAA,IAACpB,EAAA,CACC,WAAYc,EACZ,YAAcQ,GAAMxB,EAAYwB,EAAGf,EAAaC,CAAyC,EACzF,YAAAD,EACA,eAAAC,EACA,YAAAK,EACA,QAAAG,EACA,WAAAC,CAAA,CACF,EAEAG,EAAA,IAACvB,EAAA,CACC,KAAI,GACJ,WAAAqB,EACA,SAAU,CAACnB,EAAkBQ,CAAW,EACxC,UAAAE,EACA,SAAUF,EACV,YAAaC,EACb,WAAYM,CAAA,CACd,QACC,KAAG,EAAA,CACN,CAAA,CAAA,CAEJ"}