{"version":3,"file":"bi.177.718.js","sources":["../frontend-dev/src/components/AllIntegrations/MailChimp/MailChimpCommonFunc.js"],"sourcesContent":["import bitsFetch from '../../../Utils/bitsFetch'\nimport { deepCopy } from '../../../Utils/Helpers'\nimport { __, sprintf } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, sheetConf, setSheetConf, formID, setIsLoading, setSnackbar, isNew, error, setError) => {\n  let newConf = { ...sheetConf }\n  if (isNew) {\n    const rmError = { ...error }\n    rmError[e.target.name] = ''\n    setError({ ...rmError })\n  }\n  newConf[e.target.name] = e.target.value\n  switch (e.target.name) {\n    case 'listId':\n      newConf = listChange(newConf, formID, setSheetConf, setIsLoading, setSnackbar)\n      break\n    default:\n      break\n  }\n  setSheetConf({ ...newConf })\n}\n\nexport const checkAddressFieldMapRequired = sheetConf => {\n  const requiredFleld = sheetConf?.address_field ? sheetConf.address_field.filter(field => !field.formField && field.mailChimpAddressField && field.required) : []\n  if (requiredFleld.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const listChange = (sheetConf, formID, setSheetConf, setIsLoading, setSnackbar) => {\n  const newConf = deepCopy(sheetConf)\n  newConf.field_map = [{ formField: '', mailChimpField: '' }]\n\n  if (!newConf?.default?.fields?.[sheetConf.listId]) {\n    refreshTags(formID, newConf, setSheetConf, setIsLoading, setSnackbar)\n    refreshFields(formID, newConf, setSheetConf, setIsLoading, setSnackbar)\n  }\n  return newConf\n}\n\nexport const refreshAudience = (formID, sheetConf, setSheetConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshModulesRequestParams = {\n    formID,\n    clientId: sheetConf.clientId,\n    clientSecret: sheetConf.clientSecret,\n    tokenDetails: sheetConf.tokenDetails,\n  }\n  bitsFetch(refreshModulesRequestParams, 'mChimp_refresh_audience')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sheetConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data.audiencelist) {\n          newConf.default.audiencelist = result.data.audiencelist\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Audience list refreshed', 'bit-integrations') })\n        setSheetConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Audience list refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Audience list failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshTags = (formID, sheetConf, setSheetConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshModulesRequestParams = {\n    formID,\n    clientId: sheetConf.clientId,\n    clientSecret: sheetConf.clientSecret,\n    tokenDetails: sheetConf.tokenDetails,\n    listId: sheetConf.listId,\n  }\n  bitsFetch(refreshModulesRequestParams, 'mChimp_refresh_tags')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sheetConf }\n        if (result.data.audienceTags) {\n          newConf.default.audienceTags = result.data.audienceTags\n        }\n        setSnackbar({ show: true, msg: __('Audience tags refreshed', 'bit-integrations') })\n        setSheetConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Audience tags refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Audience tags failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshFields = (formID, sheetConf, setSheetConf, setIsLoading, setSnackbar) => {\n  const { listId } = sheetConf\n  if (!listId) {\n    return\n  }\n  setIsLoading(true)\n  const refreshSpreadsheetsRequestParams = {\n    formID,\n    listId,\n    clientId: sheetConf.clientId,\n    clientSecret: sheetConf.clientSecret,\n    tokenDetails: sheetConf.tokenDetails,\n  }\n  bitsFetch(refreshSpreadsheetsRequestParams, 'mChimp_refresh_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...sheetConf }\n        if (result.data.audienceField) {\n          if (!newConf.default.fields) {\n            newConf.default.fields = {}\n          }\n          newConf.default.fields[listId] = result.data.audienceField\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Fields refreshed', 'bit-integrations') })\n        setSheetConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const setGrantTokenResponse = (integ) => {\n  const grantTokenResponse = {}\n  const authWindowLocation = window.location.href\n  const queryParams = authWindowLocation.replace(`${window.opener.location.href}`, '').split('&')\n  if (queryParams) {\n    queryParams.forEach(element => {\n      const gtKeyValue = element.split('=')\n      if (gtKeyValue[1]) {\n        // eslint-disable-next-line prefer-destructuring\n        grantTokenResponse[gtKeyValue[0]] = gtKeyValue[1]\n      }\n    })\n  }\n  localStorage.setItem(`__${integ}`, JSON.stringify(grantTokenResponse))\n  window.close()\n}\n\nexport const handleMailChimpAuthorize = (integ, ajaxInteg, confTmp, setConf, setError, setisAuthorized, setIsLoading, setSnackbar) => {\n  if (!confTmp.clientId || !confTmp.clientSecret) {\n    setError({\n      clientId: !confTmp.clientId ? __('Client ID cann\\'t be empty', 'bit-integrations') : '',\n      clientSecret: !confTmp.clientSecret ? __('Secret key cann\\'t be empty', 'bit-integrations') : '',\n    })\n    return\n  }\n  setIsLoading(true)\n\n  const apiEndpoint = `https://login.mailchimp.com/oauth2/authorize?client_id=${confTmp.clientId}&redirect_uri=${encodeURIComponent(window.location.href)}&response_type=code`\n  const authWindow = window.open(apiEndpoint, integ, 'width=400,height=609,toolbar=off')\n  const popupURLCheckTimer = setInterval(() => {\n    if (authWindow.closed) {\n      clearInterval(popupURLCheckTimer)\n      let grantTokenResponse = {}\n      let isauthRedirectLocation = false\n      const bitsMailChimp = localStorage.getItem(`__${integ}`)\n      if (bitsMailChimp) {\n        isauthRedirectLocation = true\n        grantTokenResponse = JSON.parse(bitsMailChimp)\n        localStorage.removeItem(`__${integ}`)\n        if (grantTokenResponse.code.search('#')) {\n          const [code] = grantTokenResponse.code.split('#')\n          grantTokenResponse.code = code\n        }\n      }\n      if (!grantTokenResponse.code || grantTokenResponse.error || !grantTokenResponse || !isauthRedirectLocation) {\n        const errorCause = grantTokenResponse.error ? `Cause: ${grantTokenResponse.error}` : ''\n        setSnackbar({ show: true, msg: `${__('Authorization failed', 'bit-integrations')} ${errorCause}. ${__('please try again', 'bit-integrations')}` })\n        setIsLoading(false)\n      } else {\n        const newConf = { ...confTmp }\n        newConf.accountServer = grantTokenResponse['accounts-server']\n        tokenHelper(ajaxInteg, grantTokenResponse, newConf, setConf, setisAuthorized, setIsLoading, setSnackbar)\n      }\n    }\n  }, 500)\n}\n\nconst tokenHelper = (ajaxInteg, grantToken, confTmp, setConf, setisAuthorized, setIsLoading, setSnackbar) => {\n  const tokenRequestParams = { ...grantToken }\n  tokenRequestParams.clientId = confTmp.clientId\n  tokenRequestParams.clientSecret = confTmp.clientSecret\n  tokenRequestParams.redirectURI = window.location.href\n\n  bitsFetch(tokenRequestParams, `${ajaxInteg}_generate_token`)\n    .then(result => result)\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        newConf.tokenDetails = result.data\n        setConf(newConf)\n        setisAuthorized(true)\n        setSnackbar({ show: true, msg: __('Authorized Successfully', 'bit-integrations') })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Authorization failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Authorization failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n}\n\nexport const checkMappedFields = (sheetconf) => {\n  const mappedFleld = sheetconf.field_map ? sheetconf.field_map.filter(mapped => (!mapped.formField && !mapped.mailChimpField)) : []\n  if (mappedFleld.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["handleInput","e","sheetConf","setSheetConf","formID","setIsLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","rmError","listChange","checkAddressFieldMapRequired","field","deepCopy","_b","_a","refreshTags","refreshFields","refreshAudience","refreshModulesRequestParams","bitsFetch","result","__","sprintf","listId","refreshSpreadsheetsRequestParams","setGrantTokenResponse","integ","grantTokenResponse","queryParams","element","gtKeyValue","handleMailChimpAuthorize","ajaxInteg","confTmp","setConf","setisAuthorized","apiEndpoint","authWindow","popupURLCheckTimer","isauthRedirectLocation","bitsMailChimp","code","errorCause","tokenHelper","grantToken","tokenRequestParams","checkMappedFields","sheetconf","mapped"],"mappings":"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"}