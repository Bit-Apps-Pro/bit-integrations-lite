{"version":3,"file":"bi.511.181.js","sources":["../frontend-dev/src/components/AllIntegrations/FreshSales/EditFreshSales.jsx"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields, $newFlow } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport EditFormInteg from '../EditFormInteg'\nimport { checkWebhookIntegrationsExist, saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport EditWebhookInteg from '../EditWebhookInteg'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport { checkMappedFields, checkRequired, handleInput } from './FreshSalesCommonFunc'\nimport FreshSalesIntegLayout from './FreshSalesIntegLayout'\n\nfunction EditFreshSales({ allIntegURL }) {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [freshSalesConf, setFreshSalesConf] = useRecoilState($actionConf)\n  const [flow, setFlow] = useRecoilState($newFlow)\n  const [isLoading, setIsLoading] = useState(false)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [tab, settab] = useState(0)\n  const formFields = useRecoilValue($formFields)\n\n  const saveConfig = () => {\n    if (!checkMappedFields(freshSalesConf)) {\n      setSnackbar({ show: true, msg: __('Please map mandatory fields', 'bit-integrations') })\n      return\n    }\n    if (!checkRequired(freshSalesConf)) {\n      if (['Deal', 'Contact'].includes(freshSalesConf.moduleData.module)) {\n        setSnackbar({ show: true, msg: __('Please select a account or a contact', 'bit-integrations') })\n      }\n      if (freshSalesConf.moduleData.module === 'Contacts') {\n        setSnackbar({ show: true, msg: __('Please select a account', 'bit-integrations') })\n      }\n      return\n    }\n\n    saveActionConf({ flow, setFlow, allIntegURL, conf: freshSalesConf, navigate, id, edit: 1, setIsLoading, setSnackbar })\n  }\n  return (\n    <div style={{ width: 900 }}>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n\n      <div className=\"flx mt-3\">\n        <b className=\"wdt-200 \">{__('Integration Name:', 'bit-integrations')}</b>\n        <input className=\"btcd-paper-inp w-5\" onChange={e => handleInput(e, tab, freshSalesConf, setFreshSalesConf)} name=\"name\" value={freshSalesConf.name} type=\"text\" placeholder={__('Integration Name...', 'bit-integrations')} />\n      </div>\n      <br />\n\n      {!checkWebhookIntegrationsExist(flow.triggered_entity) && <EditFormInteg setSnackbar={setSnackbar} />}\n      {checkWebhookIntegrationsExist(flow.triggered_entity) && <EditWebhookInteg setSnackbar={setSnackbar} />}\n\n      <FreshSalesIntegLayout\n        tab={tab}\n        settab={settab}\n        formID={flow.triggered_entity_id}\n        formFields={formFields}\n        handleInput={(e) => handleInput(e, tab, freshSalesConf, setFreshSalesConf, setIsLoading, setSnackbar)}\n        freshSalesConf={freshSalesConf}\n        setFreshSalesConf={setFreshSalesConf}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      <IntegrationStepThree\n        edit\n        saveConfig={saveConfig}\n        disabled={freshSalesConf.moduleData.module === '' || freshSalesConf.field_map.length < 1}\n        isLoading={isLoading}\n        dataConf={freshSalesConf}\n        setDataConf={setFreshSalesConf}\n        formFields={formFields}\n      />\n      <br />\n    </div>\n  )\n}\n\nexport default EditFreshSales\n"],"names":["useNavigate","useParams","Recoil_index_20","reactExports","Recoil_index_18","jsxRuntimeExports","$actionConf","$newFlow","$formFields","SnackMsg","__","EditWebhookInteg","checkWebhookIntegrationsExist","saveActionConf","IntegrationStepThree","handleInput","checkMappedFields","checkRequired","FreshSalesIntegLayout","EditFreshSales","allIntegURL","navigate","id","freshSalesConf","setFreshSalesConf","useRecoilState","flow","setFlow","isLoading","setIsLoading","useState","snack","setSnackbar","tab","settab","formFields","useRecoilValue","saveConfig","jsx","jsxs","e","EditFormInteg"],"mappings":"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"}