{"version":3,"file":"bi.239.797.js","sources":["../frontend-dev/src/components/AllIntegrations/KirimEmail/KirimEmailIntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/KirimEmail/KirimEmailFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/KirimEmail/KirimEmailIntegLayout.jsx"],"sourcesContent":["import { __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const saveIntegConfig = async (flow, setFlow, allIntegURL, confTmp, navigate, index, edit) => {\n  let action = 'flow/save'\n  const data = {\n    name: confTmp.name,\n    trigger: flow.triggered_entity,\n    triggered_entity_id: flow?.triggerData?.formID ? flow.triggerData.formID : (flow.triggered_entity_id || 0),\n    flow_details: confTmp,\n  }\n  if (flow.id) {\n    data.id = flow.id\n  }\n  if (flow.triggered_entity === 'Webhook') {\n    data.flow_details.fields = flow.triggerDetail.data\n  }\n  if (edit) {\n    action = 'flow/update'\n    // integs[index] = { ...allintegs[index], ...confTmp }\n  }\n  try {\n    const res = await bitsFetch(data, action)\n    if (res.success) {\n      navigate(allIntegURL)\n    }\n    return res\n  } catch (e) {\n    return __('Failed to save integration', 'bit-integrations')\n  }\n}\n\nexport const setGrantTokenResponse = (integ) => {\n  const grantTokenResponse = {}\n  const authWindowLocation = window.location.href\n  const queryParams = authWindowLocation.replace(`${window.opener.location.href}/redirect`, '').split('&')\n  if (queryParams) {\n    queryParams.forEach(element => {\n      const gtKeyValue = element.split('=')\n      if (gtKeyValue[1]) {\n        // eslint-disable-next-line prefer-destructuring\n        grantTokenResponse[gtKeyValue[0]] = gtKeyValue[1]\n      }\n    })\n  }\n  localStorage.setItem(`__${integ}`, JSON.stringify(grantTokenResponse))\n  window.close()\n}\n\nexport const addFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    uploadFields ? newConf.relatedlists[tab - 1].upload_field_map.splice(i, 0, {}) : newConf.relatedlists[tab - 1].field_map.splice(i, 0, {})\n  } else {\n    uploadFields ? newConf.upload_field_map.splice(i, 0, {}) : newConf.field_map.splice(i, 0, {})\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const addContactFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n\n  newConf.field_map_contact.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...confTmp }\n  if (tab) {\n    if (uploadFields) {\n      if (newConf.relatedlists[tab - 1].upload_field_map.length > 1) {\n        newConf.relatedlists[tab - 1].upload_field_map.splice(i, 1)\n      }\n    } else if (newConf.relatedlists[tab - 1].field_map.length > 1) {\n      newConf.relatedlists[tab - 1].field_map.splice(i, 1)\n    }\n  } else if (uploadFields) {\n    if (newConf.upload_field_map.length > 1) {\n      newConf.upload_field_map.splice(i, 1)\n    }\n  } else if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const delContactFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map_contact.length > 1) {\n    newConf.field_map_contact.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf, uploadFields, tab) => {\n  const newConf = { ...conftTmp }\n  if (tab) {\n    if (uploadFields) newConf.relatedlists[tab - 1].upload_field_map[index][event.target.name] = event.target.value\n    else newConf.relatedlists[tab - 1].field_map[index][event.target.name] = event.target.value\n  } else if (uploadFields) newConf.upload_field_map[index][event.target.name] = event.target.value\n  else newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    if (tab) {\n      newConf.relatedlists[tab - 1].field_map[index].customValue = ''\n    } else newConf.field_map[index].customValue = ''\n  }\n\n  setConf({ ...newConf })\n}\n","import { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './KirimEmailIntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './KirimEmailCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function KirimEmailFieldMap({ i, field, formFields, kirimEmailConf, setKirimEmailConf }) {\n  if (kirimEmailConf?.field_map?.length === 1 && field.kirimEmailFormField === '') {\n    const newConf = { ...kirimEmailConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setKirimEmailConf(newConf)\n  }\n\n  const requiredFlds = kirimEmailConf?.subscriberFields?.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = kirimEmailConf?.subscriberFields?.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, kirimEmailConf, setKirimEmailConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, kirimEmailConf, setKirimEmailConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"kirimEmailFormField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.kirimEmailFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, kirimEmailConf, setKirimEmailConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, kirimEmailConf, setKirimEmailConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, kirimEmailConf, setKirimEmailConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { useState } from 'react'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from './KirimEmailIntegrationHelpers'\nimport KirimEmailFieldMap from './KirimEmailFieldMap'\nimport KirimEmailActions from './KirimEmailActions'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport { getAllList } from './KirimEmailCommonFunc'\n\nexport default function KirimEmailIntegLayout({ formID, formFields, handleInput, kirimEmailConf, setKirimEmailConf, isLoading, setIsLoading, setSnackbar, a }) {\n  const inputHandler = (e) => {\n    const newConf = { ...kirimEmailConf }\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n    } else {\n      delete newConf[name]\n    }\n\n    newConf[e.target.name] = e.target.value\n    setKirimEmailConf({ ...newConf })\n  }\n\n  const changeHandler = (val, name) => {\n    const newConf = { ...kirimEmailConf }\n    if (name === 'listId') {\n      if (val !== '') {\n        newConf[name] = val\n      } else {\n        delete newConf[name]\n      }\n    }\n\n    setKirimEmailConf({ ...newConf })\n  }\n  return (\n    <>\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      <>\n        <br />\n        <b className=\"wdt-200 d-in-b\">{__('Actions:', 'bit-integrations')}</b>\n        <select onChange={inputHandler} name=\"mainAction\" value={kirimEmailConf?.mainAction} className=\"btcd-paper-inp w-5\">\n          <option value=\"\">{__('Select Actions', 'bit-integrations')}</option>\n          {\n            kirimEmailConf?.allActions && kirimEmailConf.allActions.map(({ key, label }) => (\n              <option key={key} value={key}>\n                {label}\n              </option>\n            ))\n          }\n        </select>\n        <br />\n        <br />\n        { kirimEmailConf.mainAction === '1' && (\n          <div className=\"flx mt-4\">\n            <b className=\"wdt-200 d-in-b\">{__('Select List: ', 'bit-integrations')}</b>\n            <MultiSelect\n              className=\"w-5\"\n              defaultValue={kirimEmailConf?.listId}\n              options={kirimEmailConf?.default?.allLists && kirimEmailConf?.default.allLists.map((item) => ({ label: item.name, value: item.id }))}\n              onChange={(val) => changeHandler(val, 'listId')}\n              singleSelect\n            />\n            <button onClick={() => getAllList(kirimEmailConf, setKirimEmailConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All lists', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </div>\n        )}\n        <br />\n        <div className=\"mt-4\">\n          <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n        </div>\n        <div className=\"btcd-hr mt-1\" />\n        <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n          <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n          <div className=\"txt-dp\"><b>{__('Kirim Email Fields', 'bit-integrations')}</b></div>\n        </div>\n\n        {kirimEmailConf.field_map.map((itm, i) => (\n          <KirimEmailFieldMap\n            key={`keap-m-${i + 9}`}\n            i={i}\n            field={itm}\n            formFields={formFields}\n            kirimEmailConf={kirimEmailConf}\n            setKirimEmailConf={setKirimEmailConf}\n          />\n        ))}\n        <br />\n        <br />\n\n        <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(kirimEmailConf.field_map.length, kirimEmailConf, setKirimEmailConf)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n\n      </>\n    </>\n  )\n}\n"],"names":["Recoil_index_18","jsxRuntimeExports","Loader","$btcbi","__","u","SmartTagField","generateMappedField","getAllList","TagifyInput","handleCustomValue","addFieldMap","i","confTmp","setConf","uploadFields","tab","newConf","__spreadValues","delFieldMap","handleFieldMapping","event","index","conftTmp","KirimEmailFieldMap","field","formFields","kirimEmailConf","setKirimEmailConf","_a","_b","_c","_d","tmp","requiredFlds","fld","nonRequiredFlds","btcbi","useRecoilValue","isPro","jsx","jsxs","ev","f","e","key","label","Fragment","KirimEmailIntegLayout","formID","handleInput","isLoading","setIsLoading","setSnackbar","a","inputHandler","name","changeHandler","val","MultiSelect","item","itm"],"mappings":"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"}