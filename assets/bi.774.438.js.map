{"version":3,"file":"bi.774.438.js","sources":["../frontend-dev/src/components/AllIntegrations/Asana/Asana.jsx"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport AsanaAuthorization from './AsanaAuthorization'\nimport { checkMappedFields, handleInput } from './AsanaCommonFunc'\nimport AsanaIntegLayout from './AsanaIntegLayout'\n\nfunction Asana({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [loading, setLoading] = useState({})\n\n  const [step, setStep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const taskFields = [\n    { key: 'name', label: 'Name', required: true },\n    { key: 'due_at', label: 'Due At', required: false },\n    { key: 'due_on', label: 'Due On', required: false },\n    { key: 'notes', label: 'Notes', required: false },\n  ]\n\n  const [asanaConf, setAsanaConf] = useState({\n    name: 'Asana',\n    type: 'Asana',\n    api_key: process.env.NODE_ENV === 'development' ? '1/1204059769132541:4f2eba544ecafbc29df397dec56c457c' : '',\n    field_map: [\n      { formField: '', asanaFormField: '' },\n    ],\n    actionName: '',\n    taskFields,\n    actions: {},\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(flow, setFlow, allIntegURL, asanaConf, navigate, '', '', setIsLoading)\n    resp.then(res => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n\n  const nextPage = (pageNo) => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(asanaConf)) {\n      toast.error('Please map mandatory fields')\n      return\n    }\n\n    if (asanaConf.actionName === 'task') {\n      if (!asanaConf.selectedProject) {\n        toast.error('Please select a project')\n        return\n      }\n      if (!asanaConf.selectedSections && asanaConf.actionName === 'task') {\n        toast.error('Please select a Section')\n        return\n      }\n    }\n\n    asanaConf.field_map.length > 0 && setStep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <AsanaAuthorization\n        asanaConf={asanaConf}\n        setAsanaConf={setAsanaConf}\n        step={step}\n        setStep={setStep}\n        loading={loading}\n        setLoading={setLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <AsanaIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, asanaConf, setAsanaConf, setLoading, setSnackbar)}\n          asanaConf={asanaConf}\n          setAsanaConf={setAsanaConf}\n          loading={loading}\n          setLoading={setLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        {asanaConf?.actionName && (\n          <button\n            onClick={() => nextPage(3)}\n            disabled={!(checkMappedFields(asanaConf))}\n            className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n            type=\"button\"\n          >\n            {__('Next', 'bit-integrations')}\n            {' '}\n            &nbsp;\n            <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n          </button>\n        )}\n      </div>\n\n      {/* STEP 3 */}\n      {asanaConf?.actionName && (\n        <IntegrationStepThree\n          step={step}\n          saveConfig={() => saveConfig()}\n          isLoading={isLoading}\n          dataConf={asanaConf}\n          setDataConf={setAsanaConf}\n          formFields={formFields}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Asana\n"],"names":["Asana","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","loading","setLoading","step","setStep","snack","setSnackbar","taskFields","asanaConf","setAsanaConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","checkMappedFields","jsx","SnackMsg","Steps","AsanaAuthorization","__spreadValues","AsanaIntegLayout","e","handleInput","jsxs","__","IntegrationStepThree"],"mappings":"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"}