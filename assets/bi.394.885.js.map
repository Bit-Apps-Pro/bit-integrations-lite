{"version":3,"file":"bi.394.885.js","sources":["../frontend-dev/src/components/AllIntegrations/CampaignMonitor/CampaignMonitorCommonFunc.js"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { __ } from \"@wordpress/i18n\"\nimport bitsFetch from \"../../../Utils/bitsFetch\"\n\nexport const handleInput = (e, campaignMonitorConf, setCampaignMonitorConf) => {\n  const newConf = { ...campaignMonitorConf }\n  newConf.name = e.target.value\n  setCampaignMonitorConf({ ...newConf })\n}\n\n// refreshMappedLists\nexport const refreshCampaignMonitorLists = (\n  campaignMonitorConf,\n  setCampaignMonitorConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = {\n    client_id: campaignMonitorConf.client_id,\n    api_key: campaignMonitorConf.api_key,\n  }\n\n  bitsFetch(refreshListsRequestParams, \"campaign_monitor_lists\")\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...campaignMonitorConf }\n        if (result.data) {\n          if (!newConf.default) {\n            newConf.default = {}\n          }\n          newConf.default.campaignMonitorLists = result.data\n          setSnackbar({\n            show: true,\n            msg: __(\"CampaignMonitor Lists refreshed\", \"bit-integrations\"),\n          })\n        } else {\n          setSnackbar({\n            show: true,\n            msg: __(\n              \"No CampaignMonitor Lists found. Try changing the header row number or try again\",\n              \"bit-integrations\"\n            ),\n          })\n        }\n\n        setCampaignMonitorConf({ ...newConf })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"CampaignMonitor Lists refresh failed. please try again\",\n            \"bit-integrations\"\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\n// refreshMappedFields\nexport const refreshCampaignMonitorFields = (\n  campaignMonitorConf,\n  setCampaignMonitorConf,\n  setIsLoading,\n  setSnackbar,\n) => {\n  setIsLoading(true)\n  const refreshListsRequestParams = {\n    client_id: campaignMonitorConf.client_id,\n    api_key: campaignMonitorConf.api_key,\n    listId: campaignMonitorConf.listId,\n  }\n\n  bitsFetch(refreshListsRequestParams, \"campaign_monitor_custom_fields\")\n    .then((result) => {\n      if (result && result.success) {\n        setCampaignMonitorConf(prevConf => {\n          prevConf.customFields = result.data ? result.data : []\n          return prevConf\n        })\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"CampaignMonitor Custom fields refreshed.\",\n            \"bit-integrations\"\n          ),\n        })\n      } else {\n        setSnackbar({\n          show: true,\n          msg: __(\n            \"CampaignMonitor Custom fields refresh failed. please try again\",\n            \"bit-integrations\"\n          ),\n        })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const generateMappedField = (campaignMonitorConf) => {\n  let allFields = campaignMonitorConf.subscriberFields\n  const requiredFlds = allFields && allFields.filter(\n    (fld) => fld.required === true,\n  )\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n      formField: '',\n      campaignMonitorField: field.key,\n    }))\n    : [{ formField: '', campaignMonitorField: '' }]\n}\n\nexport const checkMappedFields = (campaignMonitorConf) => {\n  const mappedFields = campaignMonitorConf?.field_map\n    ? campaignMonitorConf.field_map.filter(\n      (mappedField) => !mappedField.formField\n        && mappedField.campaignMonitorField\n        && mappedField.required\n    )\n    : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n"],"names":["bitsFetch","__","handleInput","e","campaignMonitorConf","setCampaignMonitorConf","newConf","__spreadValues","refreshCampaignMonitorLists","setIsLoading","setSnackbar","refreshListsRequestParams","result","refreshCampaignMonitorFields","prevConf","generateMappedField","allFields","requiredFlds","fld","field","checkMappedFields","mappedField"],"mappings":"yVAAA,OAAA,KAAAA,EAAA,KAAAC,MAAA,iBAIY,MAACC,EAAc,CAACC,EAAGC,EAAqBC,IAA2B,CAC7E,MAAMC,EAAUC,EAAA,GAAKH,GACrBE,EAAQ,KAAOH,EAAE,OAAO,MACxBE,EAAuBE,EAAA,GAAKD,EAAS,CACvC,EAGaE,EAA8B,CACzCJ,EACAC,EACAI,EACAC,IACG,CACHD,EAAa,EAAI,EACjB,MAAME,EAA4B,CAChC,UAAWP,EAAoB,UAC/B,QAASA,EAAoB,OAC9B,EAEDJ,EAAUW,EAA2B,wBAAwB,EAC1D,KAAMC,GAAW,CAChB,GAAIA,GAAUA,EAAO,QAAS,CAC5B,MAAMN,EAAUC,EAAA,GAAKH,GACjBQ,EAAO,MACJN,EAAQ,UACXA,EAAQ,QAAU,CAAE,GAEtBA,EAAQ,QAAQ,qBAAuBM,EAAO,KAC9CF,EAAY,CACV,KAAM,GACN,IAAKT,EAAG,kCAAmC,kBAAkB,CACzE,CAAW,GAEDS,EAAY,CACV,KAAM,GACN,IAAKT,EACH,kFACA,kBACD,CACb,CAAW,EAGHI,EAAuBE,EAAA,GAAKD,EAAS,CAC7C,MACQI,EAAY,CACV,KAAM,GACN,IAAKT,EACH,yDACA,kBACD,CACX,CAAS,EAEHQ,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAGaI,EAA+B,CAC1CT,EACAC,EACAI,EACAC,IACG,CACHD,EAAa,EAAI,EACjB,MAAME,EAA4B,CAChC,UAAWP,EAAoB,UAC/B,QAASA,EAAoB,QAC7B,OAAQA,EAAoB,MAC7B,EAEDJ,EAAUW,EAA2B,gCAAgC,EAClE,KAAMC,GAAW,CACZA,GAAUA,EAAO,SACnBP,EAAuBS,IACrBA,EAAS,aAAeF,EAAO,KAAOA,EAAO,KAAO,CAAE,EAC/CE,EACR,EACDJ,EAAY,CACV,KAAM,GACN,IAAKT,EACH,2CACA,kBACD,CACX,CAAS,GAEDS,EAAY,CACV,KAAM,GACN,IAAKT,EACH,iEACA,kBACD,CACX,CAAS,EAEHQ,EAAa,EAAK,CACxB,CAAK,EACA,MAAM,IAAMA,EAAa,EAAK,CAAC,CACpC,EAEaM,EAAuBX,GAAwB,CAC1D,IAAIY,EAAYZ,EAAoB,iBACpC,MAAMa,EAAeD,GAAaA,EAAU,OACzCE,GAAQA,EAAI,WAAa,EAC3B,EACD,OAAOD,EAAa,OAAS,EACzBA,EAAa,IAAKE,IAAW,CAC7B,UAAW,GACX,qBAAsBA,EAAM,GAClC,EAAM,EACA,CAAC,CAAE,UAAW,GAAI,qBAAsB,EAAE,CAAE,CAClD,EAEaC,EAAqBhB,GAQ5B,GAPiBA,GAAA,MAAAA,EAAqB,UACtCA,EAAoB,UAAU,OAC7BiB,GAAgB,CAACA,EAAY,WACzBA,EAAY,sBACZA,EAAY,QAClB,EACC,CAAE,GACW,OAAS"}