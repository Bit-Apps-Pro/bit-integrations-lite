{"version":3,"file":"bi.100.817.js","sources":["../frontend-dev/src/components/AllIntegrations/GetResponse/GetResponseCommonFunc.js"],"sourcesContent":["/* eslint-disable no-else-return */\nimport toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, getResponseConf, setGetResponseConf, setLoading, setSnackbar, isNew, error, setError) => {\n  const newConf = { ...getResponseConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setGetResponseConf({ ...newConf })\n}\n\nexport const generateMappedField = (getResponseConf) => {\n  const requiredFlds = getResponseConf?.contactsFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', getResponseFormField: field.key })) : [{ formField: '', getResponseFormField: '' }]\n}\n\nexport const checkMappedFields = (getResponseConf) => {\n  const mappedFields = getResponseConf?.field_map ? getResponseConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.getResponseFormField || (!mappedField.formField === 'custom' && !mappedField.customValue))) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const getresponseAuthentication = (confTmp, setConf, setError, setisAuthorized, loading, setLoading, type) => {\n  if (!confTmp.auth_token) {\n    setError({ auth_token: !confTmp.auth_token ? __('Api Key can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n\n  setError({})\n  if (type === 'authentication') {\n    setLoading({ ...loading, auth: true })\n  }\n  if (type === 'refreshCampaigns') {\n    setLoading({ ...loading, customFields: true })\n  }\n  const requestParams = { auth_token: confTmp.auth_token }\n\n  bitsFetch(requestParams, 'getresponse_authentication')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.campaigns = result.data\n        }\n        setConf(newConf)\n        setisAuthorized(true)\n        if (type === 'authentication') {\n          setLoading({ ...loading, auth: false })\n          toast.success(__('Authorized successfully', 'bit-integrations'))\n        } else if (type === 'refreshCampaigns') {\n          setLoading({ ...loading, customFields: false })\n          toast.success(__('Campaigns fectched successfully', 'bit-integrations'))\n        }\n        return\n      }\n      setLoading({ ...loading, auth: false })\n      toast.error(__('Authorized failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllTags = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, tags: true })\n\n  const requestParams = { auth_token: confTmp.auth_token }\n\n  bitsFetch(requestParams, 'getresponse_fetch_all_tags')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.tags = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, tags: false })\n\n        toast.success(__('Tags fetch successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, tags: false })\n      toast.error(__('Tags fetch failed', 'bit-integrations'))\n    })\n}\n\nexport const fetchCustomFields = (confTmp, setConf, setLoading, type) => {\n  if (type === 'manual') {\n    setLoading({ ...setLoading, field: true })\n  }\n\n  const requestParams = { auth_token: confTmp.auth_token }\n\n  bitsFetch(requestParams, 'getresponse_fetch_custom_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.contactsFields = [...newConf.contactsFields, ...result.data]\n        }\n        setConf(newConf)\n        if (type === 'manual') {\n          setLoading({ ...setLoading, field: false })\n          toast.success(__('Custom fields fetched successfully', 'bit-integrations'))\n        }\n        return\n      }\n      toast.error(__('Custom fields fetch failed', 'bit-integrations'))\n    })\n}\n"],"names":["__","bitsFetch","_t","handleInput","getResponseConf","setGetResponseConf","setLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","name","generateMappedField","requiredFlds","fld","field","checkMappedFields","mappedField","getresponseAuthentication","confTmp","setConf","setisAuthorized","loading","type","__spreadProps","requestParams","result","toast","getAllTags","fetchCustomFields"],"mappings":"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"}