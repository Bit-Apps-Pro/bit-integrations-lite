{"version":3,"file":"bi.104.873.js","sources":["../frontend-dev/src/components/AllIntegrations/ClinchPad/ClinchPadCommonFunc.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-else-return */\nimport toast from \"react-hot-toast\";\nimport bitsFetch from \"../../../Utils/bitsFetch\";\nimport { __ } from \"../../../Utils/i18nwrap\";\n\nexport const handleInput = (e, clinchPadConf, setClinchPadConf) => {\n  const newConf = { ...clinchPadConf };\n  const { name } = e.target;\n  if (e.target.value !== \"\") {\n    newConf[name] = e.target.value;\n  } else {\n    delete newConf[name];\n  }\n  setClinchPadConf({ ...newConf });\n};\n\nexport const generateMappedField = (clinchPadConf) => {\n  let allRequiredFields = [];\n  if (clinchPadConf.actionName === \"organization\") {\n    allRequiredFields = clinchPadConf?.organizationFields;\n  } else if (clinchPadConf.actionName === \"contact\") {\n    allRequiredFields = clinchPadConf?.contactFields;\n  } else if (clinchPadConf.actionName === \"lead\") {\n    allRequiredFields = clinchPadConf?.leadFields;\n  }\n  const requiredFlds = allRequiredFields?.filter(\n    (fld) => fld.required === true\n  );\n  return requiredFlds.length > 0\n    ? requiredFlds.map((field) => ({\n        formField: \"\",\n        clinchPadFormField: field.key,\n      }))\n    : [{ formField: \"\", clinchPadFormField: \"\" }];\n};\n\nexport const checkMappedFields = (clinchPadConf) => {\n  const mappedFields = clinchPadConf?.field_map\n    ? clinchPadConf.field_map.filter(\n        (mappedField) =>\n          !mappedField.formField ||\n          !mappedField.clinchPadFormField ||\n          (mappedField.formField === \"custom\" && !mappedField.customValue) ||\n          (mappedField.clinchPadFormField === \"customFieldKey\" &&\n            !mappedField.customFieldKey)\n      )\n    : [];\n  if (mappedFields.length > 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const clinchPadAuthentication = (\n  confTmp,\n  setConf,\n  setError,\n  setIsAuthorized,\n  loading,\n  setLoading\n) => {\n  if (!confTmp.api_key) {\n    setError({\n      api_key: !confTmp.api_key\n        ? __(\"Api Key can't be empty\", \"bit-integrations\")\n        : \"\",\n    });\n    return;\n  }\n\n  setError({});\n  setLoading({ ...loading, auth: true });\n\n  const requestParams = { api_key: confTmp.api_key };\n\n  bitsFetch(requestParams, \"clinchPad_authentication\").then((result) => {\n    if (result && result.success) {\n      setIsAuthorized(true);\n      setLoading({ ...loading, auth: false });\n      toast.success(__(\"Authorized successfully\", \"bit-integrations\"));\n      return;\n    }\n    setLoading({ ...loading, auth: false });\n    toast.error(\n      __(\"Authorized failed, Please enter valid API key\", \"bit-integrations\")\n    );\n  });\n};\n\nexport const getAllParentOrganizations = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, parentOrganizations: true });\n\n  const requestParams = { api_key: confTmp.api_key };\n\n  bitsFetch(requestParams, \"clinchPad_fetch_all_parentOrganizations\").then(\n    (result) => {\n      if (result && result.success) {\n        const newConf = { ...confTmp };\n        if (result.data) {\n          newConf.parentOrganizations = result.data;\n        }\n        setConf(newConf);\n        setLoading({ ...setLoading, parentOrganizations: false });\n\n        toast.success(\n          __(\"ParentOrganizations fetched successfully\", \"bit-integrations\")\n        );\n        return;\n      }\n      setLoading({ ...setLoading, parentOrganizations: false });\n      toast.error(\n        __(\"ParentOrganizations fetching failed\", \"bit-integrations\")\n      );\n    }\n  );\n};\n\nexport const getAllCRMPipelines = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, CRMPipelines: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n  };\n\n  bitsFetch(requestParams, \"clinchPad_fetch_all_CRMPipelines\").then(\n    (result) => {\n      if (result && result.success) {\n        const newConf = { ...confTmp };\n        if (result.data) {\n          newConf.CRMPipelines = result.data;\n        }\n        setConf(newConf);\n        setLoading({ ...setLoading, CRMPipelines: false });\n        toast.success(__(\"Pipelines fetched successfully\", \"bit-integrations\"));\n\n        return;\n      }\n      setLoading({ ...setLoading, CRMPipelines: false });\n      toast.error(__(\"Pipelines fetching failed\", \"bit-integrations\"));\n    }\n  );\n};\n\nexport const getAllCRMContacts = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, CRMContacts: true });\n\n  const requestParams = {\n    api_key: confTmp.api_key,\n    action_name: confTmp.actionName,\n  };\n\n  bitsFetch(requestParams, \"clinchPad_fetch_all_CRMContacts\").then((result) => {\n    if (result && result.success) {\n      const newConf = { ...confTmp };\n      if (result.data) {\n        newConf.CRMContacts = result.data;\n      }\n      setConf(newConf);\n      setLoading({ ...setLoading, CRMContacts: false });\n      toast.success(__(\"Contacts fetched successfully\", \"bit-integrations\"));\n\n      return;\n    }\n    setLoading({ ...setLoading, CRMContacts: false });\n    toast.error(__(\"Contacts fetching failed\", \"bit-integrations\"));\n  });\n};\n"],"names":["__","bitsFetch","_t","handleInput","clinchPadConf","setClinchPadConf","newConf","__spreadValues","name","generateMappedField","allRequiredFields","requiredFlds","fld","field","checkMappedFields","mappedField","clinchPadAuthentication","confTmp","setConf","setError","setIsAuthorized","loading","setLoading","__spreadProps","requestParams","result","toast","getAllParentOrganizations","getAllCRMPipelines","getAllCRMContacts"],"mappings":"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"}