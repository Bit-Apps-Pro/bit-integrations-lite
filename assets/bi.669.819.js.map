{"version":3,"file":"bi.669.819.js","sources":["../frontend-dev/src/components/AllIntegrations/PaidMembershipPro/PaidMembershipProCommonFunc.js","../frontend-dev/src/components/AllIntegrations/PaidMembershipPro/PaidMembershipProIntegLayout.jsx"],"sourcesContent":["import toast from 'react-hot-toast'\nimport bitsFetch from '../../../Utils/bitsFetch'\nimport { deepCopy } from '../../../Utils/Helpers'\nimport { sprintf, __ } from '../../../Utils/i18nwrap'\n\nexport const handleInput = (e, paidMembershipProConf, setPaidMembershipProConf, setIsLoading, setSnackbar, formID) => {\n  const newConf = { ...paidMembershipProConf }\n  const { name, value } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = value\n  } else {\n    delete newConf[name]\n  }\n  newConf[name] = value\n  getAllPaidMemberShipProLevel(newConf, setPaidMembershipProConf, setIsLoading, setSnackbar)\n}\n\nexport const getAllPaidMemberShipProLevel = (paidMembershipProConf, setPaidMembershipProConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  bitsFetch(null, 'fetch_all_paid_membership_pro_level')\n    .then((result) => {\n      if (result && result.success) {\n        const newConf = { ...paidMembershipProConf }\n        if (!newConf.default) {\n          newConf.default = {}\n        }\n        if (result.data) {\n          if (newConf.mainAction === '2') {\n            const newLevel = { membershipId: 'any', membershipTitle: 'Any membership level' }\n            newConf.default.allMemberShipLevel = [newLevel, ...result.data]\n          } else {\n            newConf.default.allMemberShipLevel = result.data\n          }\n        }\n        setPaidMembershipProConf(newConf)\n        setIsLoading(false)\n        toast.success(__('All Paid Membership pro level fetched successfully', 'bit-integrations'))\n        return\n      }\n      setIsLoading(false)\n      toast.error(__('Paid Membership pro level fetch failed. please try again', 'bit-integrations'))\n    })\n    .catch(() => setIsLoading(false))\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { getAllPaidMemberShipProLevel } from './PaidMembershipProCommonFunc'\nimport Note from '../../Utilities/Note'\n\nexport default function PaidMembershipProIntegLayout({ formFields, handleInput, paidMembershipProConf, setPaidMembershipProConf, isLoading, setIsLoading, setSnackbar, allIntegURL, isInfo, edit }) {\n  const changeHandler = (val, name) => {\n    const newConf = { ...paidMembershipProConf }\n    if (name === 'selectedMembership') {\n      if (val !== '') {\n        newConf[name] = val\n      } else {\n        delete newConf[name]\n      }\n    }\n    setPaidMembershipProConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Actions:', 'bit-integrations')}</b>\n      <select onChange={handleInput} name=\"mainAction\" value={paidMembershipProConf?.mainAction} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Actions', 'bit-integrations')}</option>\n        {\n          paidMembershipProConf?.allActions && paidMembershipProConf.allActions.map(({ key, label }) => (\n            <option key={key} value={key}>\n              {label}\n            </option>\n          ))\n        }\n      </select>\n      <br />\n      {['1', '2'].includes(paidMembershipProConf?.mainAction) && (\n        <>\n          <br />\n          <div className=\"flx mt-4\">\n            <b className=\"wdt-200 d-in-b\">{__('Select Membership: ', 'bit-integrations')}</b>\n            <MultiSelect\n              className=\"w-5\"\n              defaultValue={paidMembershipProConf?.selectedMembership}\n              options={paidMembershipProConf?.default?.allMemberShipLevel && paidMembershipProConf.default.allMemberShipLevel.map((item) => ({ label: item.membershipTitle, value: item.membershipId.toString() }))}\n              onChange={(val) => changeHandler(val, 'selectedMembership')}\n              singleSelect\n            />\n            <button onClick={() => getAllPaidMemberShipProLevel(paidMembershipProConf, setPaidMembershipProConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Fetch All Membership', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n          </div>\n        </>\n      )}\n\n      <br />\n      <br />\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      <br />\n      <Note\n        note=\"This integration will only work for logged-in users.\"\n      />\n    </>\n  )\n}\n"],"names":["jsxRuntimeExports","Loader","bitsFetch","_t","__","u","Note","handleInput","e","paidMembershipProConf","setPaidMembershipProConf","setIsLoading","setSnackbar","formID","newConf","__spreadValues","name","value","getAllPaidMemberShipProLevel","result","newLevel","toast","PaidMembershipProIntegLayout","formFields","isLoading","allIntegURL","isInfo","edit","_a","changeHandler","val","jsxs","Fragment","jsx","key","label","MultiSelect","item"],"mappings":"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"}