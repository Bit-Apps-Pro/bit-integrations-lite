{"version":3,"file":"bi.802.390.js","sources":["../frontend-dev/src/components/AllIntegrations/BitForm/BitForm.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { $btcbi } from '../../../GlobalStates'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport BitFormAuthorization from './BitFormAuthorization'\nimport { checkAddressFieldMapRequired, handleInput, checkMappedFields } from './BitFormCommonFunc'\nimport BitFormIntegLayout from './BitFormIntegLayout'\n\nfunction BitForm({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const btcbi = useRecoilValue($btcbi)\n  const { siteURL } = btcbi\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const [bitFormConf, setBitFormConf] = useState({\n    name: 'Bit Form',\n    type: 'Bit Form',\n    domainName: siteURL,\n    api_key: process.env.NODE_ENV === 'development' ? '59971a5c6213ecbb4e58bf91b4a56962f05311d8' : '',\n    id: '',\n    field_map: [\n      { formField: '', BitFormMapField: '' },\n    ],\n    address_field: [],\n    actions: {},\n  })\n\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n    if (bitFormConf.actions?.address && !checkAddressFieldMapRequired(bitFormConf)) {\n      setSnackbar({ show: true, msg: 'Please map address required fields to continue.' })\n      return\n    }\n    if (!checkMappedFields(bitFormConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (bitFormConf.listId !== '') {\n      setstep(3)\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <BitFormAuthorization\n        formID={formID}\n        bitFormConf={bitFormConf}\n        setBitFormConf={setBitFormConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <BitFormIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, bitFormConf, setBitFormConf, formID, setIsLoading, setSnackbar)}\n          bitFormConf={bitFormConf}\n          setBitFormConf={setBitFormConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        {!bitFormConf.id && (\n          <>\n            <br />\n            <br />\n            <br />\n          </>\n        )}\n        <button\n          onClick={() => nextPage(3)}\n          disabled={bitFormConf.field_map.length < 2 || isLoading}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: bitFormConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={bitFormConf}\n        setDataConf={setBitFormConf}\n        formFields={formFields}\n      />\n\n    </div>\n  )\n}\n\nexport default BitForm\n"],"names":["BitForm","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","btcbi","useRecoilValue","$btcbi","siteURL","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","bitFormConf","setBitFormConf","nextPage","_a","checkAddressFieldMapRequired","checkMappedFields","jsx","SnackMsg","Steps","BitFormAuthorization","__spreadValues","BitFormIntegLayout","e","handleInput","jsxs","Fragment","__","IntegrationStepThree","saveActionConf"],"mappings":"g1BAeA,SAASA,GAAQ,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC3D,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACbC,EAAQC,EAAeC,CAAM,EAC7B,CAAE,QAAAC,CAAY,EAAAH,EACd,CAACI,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAC/C,CAACK,EAAaC,CAAc,EAAIN,WAAS,CAC7C,KAAM,WACN,KAAM,WACN,WAAYH,EACZ,QAA+F,GAC/F,GAAI,GACJ,UAAW,CACT,CAAE,UAAW,GAAI,gBAAiB,EAAG,CACvC,EACA,cAAe,CAAC,EAChB,QAAS,CAAC,CAAA,CACX,EAEKU,EAAW,IAAM,OAIrB,GAHA,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,GACFC,EAAAH,EAAY,UAAZ,MAAAG,EAAqB,SAAW,CAACC,EAA6BJ,CAAW,EAAG,CAC9ED,EAAY,CAAE,KAAM,GAAM,IAAK,iDAAmD,CAAA,EAClF,MACF,CACI,GAAA,CAACM,EAAkBL,CAAW,EAAG,CACnCD,EAAY,CAAE,KAAM,GAAM,IAAK,gCAAkC,CAAA,EACjE,MACF,CACIC,EAAY,SAAW,IACzBH,EAAQ,CAAC,CACX,EAGF,cACG,MACC,CAAA,SAAA,CAACS,EAAAA,IAAAC,EAAA,CAAS,MAAAT,EAAc,YAAAC,CAA0B,CAAA,EAClDO,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQZ,CAAA,CAAM,CAAE,CAAA,EAGjEU,EAAA,IAACG,EAAA,CACC,OAAAtB,EACA,YAAAa,EACA,eAAAC,EACA,KAAAL,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,SAGC,MAAI,CAAA,UAAU,gBAAgB,MAAOW,EAAA,GAAMd,IAAS,GAAK,CAAE,MAAO,IAAK,OAAQ,OAAQ,SAAU,SAAA,GAEhG,SAAA,CAAAU,EAAA,IAACK,EAAA,CACC,WAAA9B,EACA,YAAc+B,GAAMC,EAAYD,EAAGZ,EAAaC,EAAgBd,EAAQO,CAAyB,EACjG,YAAAM,EACA,eAAAC,EACA,UAAAR,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAEC,CAACC,EAAY,IAEVc,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAAC,KAAG,EAAA,QACH,KAAG,EAAA,QACH,KAAG,EAAA,CAAA,EACN,EAEFQ,EAAA,KAAC,SAAA,CACC,QAAS,IAAMZ,EAAU,EACzB,SAAUF,EAAY,UAAU,OAAS,GAAKP,EAC9C,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAuB,EAAG,OAAQ,kBAAkB,EAC7B,IAAI,IAELV,EAAAA,IAAC,MAAI,CAAA,UAAU,wCAAyC,CAAA,CAAA,CAAA,CAC1D,CAAA,EACF,EAEAA,EAAA,IAACW,EAAA,CACC,KAAArB,EACA,WAAY,IAAMsB,EAAe,CAAE,KAAAnC,EAAM,QAAAD,EAAS,YAAAE,EAAa,SAAAC,EAAU,KAAMe,EAAa,aAAAN,EAAc,YAAAK,CAAA,CAAa,EACvH,UAAAN,EACA,SAAUO,EACV,YAAaC,EACb,WAAApB,CAAA,CACF,CAEF,CAAA,CAAA,CAEJ"}