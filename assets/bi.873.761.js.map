{"version":3,"file":"bi.873.761.js","sources":["../frontend-dev/src/components/AllIntegrations/Hubspot/HubspotCommonFunc.jsx"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport toast from 'react-hot-toast'\nimport { sprintf, __ } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, hubspotConf, setHubspotConf, setIsLoading) => {\n  const newConf = { ...hubspotConf }\n  const { name } = e.target\n  if (e.target.value !== '') {\n    newConf[name] = e.target.value\n  } else {\n    delete newConf[name]\n  }\n  setHubspotConf({ ...newConf })\n}\n\nexport const checkMappedFields = (hubspotConf) => {\n  const mappedFields = hubspotConf?.field_map ? hubspotConf.field_map.filter(mappedField => (!mappedField.formField || !mappedField.hubspotField || (!mappedField.formField === 'custom' && !mappedField.customValue))) : []\n\n  if (mappedFields.length > 0) {\n    return false\n  }\n  return true\n}\n\nexport const generateMappedField = (hubspotConf) => {\n  const requiredFlds = hubspotConf?.hubSpotFields.filter(fld => fld.required === true)\n  return requiredFlds.length > 0 ? requiredFlds.map(field => ({ formField: '', hubspotField: field.key })) : [{ formField: '', hubspotField: '' }]\n}\n\nexport const hubspotAuthorization = (confTmp, setError, setIsAuthorized, loading, setLoading) => {\n  if (!confTmp.api_key) {\n    setError({ api_key: !confTmp.api_key ? __('Access token can\\'t be empty', 'bit-integrations') : '' })\n    return\n  }\n\n  setError({})\n  setLoading({ ...loading, auth: true })\n\n  const requestParams = { api_key: confTmp.api_key }\n\n  bitsFetch(requestParams, 'hubSpot_authorization')\n    .then(result => {\n      if (result && result.success) {\n        setIsAuthorized(true)\n        setLoading({ ...loading, auth: false })\n        toast.success(__('Authorized successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...loading, auth: false })\n      toast.error(__('Authorized failed, Please enter valid access token', 'bit-integrations'))\n    })\n}\n\nexport const getAllPipelines = (confTmp, setConf, setLoading, type, loading) => {\n  setLoading({ ...setLoading, pipelines: true })\n  const requestParams = { api_key: confTmp.api_key, type }\n\n  bitsFetch(requestParams, 'hubspot_pipeline')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          if (!newConf.default) newConf.default = {}\n          newConf.default.pipelines = result.data\n          newConf.actionName = type\n          getFields(newConf, setConf, setLoading, type, loading)\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, pipelines: false })\n\n        toast.success(__('pipelines fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, pipelines: false })\n      toast.error(__('pipelines fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllOwners = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, owners: true, hubSpotFields: true })\n  const requestParams = { api_key: confTmp.api_key }\n\n  bitsFetch(requestParams, 'hubspot_owners')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          if (!newConf.default) newConf.default = {}\n          newConf.default.owners = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, owners: false, hubSpotFields: true })\n\n        toast.success(__('owners fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, owners: false, hubSpotFields: true })\n      toast.error(__('owners fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllContacts = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, contacts: true, hubSpotFields: true })\n  const requestParams = { api_key: confTmp.api_key }\n\n  bitsFetch(requestParams, 'hubspot_contacts')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          if (!newConf.default) newConf.default = {}\n          newConf.default.contacts = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, contacts: false, hubSpotFields: true })\n\n        toast.success(__('contacts fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, contacts: false, hubSpotFields: true })\n      toast.error(__('contacts fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getAllCompany = (confTmp, setConf, setLoading) => {\n  setLoading({ ...setLoading, companies: true, hubSpotFields: true })\n  const requestParams = { api_key: confTmp.api_key }\n\n  bitsFetch(requestParams, 'hubspot_company')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          if (!newConf.default) newConf.default = {}\n          newConf.default.companies = result.data\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, companies: false, hubSpotFields: true })\n\n        toast.success(__('companies fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, companies: false, hubSpotFields: true })\n      toast.error(__('companies fetching failed', 'bit-integrations'))\n    })\n}\n\nexport const getFields = (confTmp, setConf, setLoading, type, loading, refreshCustomFields = false) => {\n  if (refreshCustomFields) {\n    setLoading({ ...loading, customFieldsRefresh: true })\n  } else {\n    setLoading({ ...setLoading, customFields: true })\n  }\n  const requestParams = { api_key: confTmp.api_key, type }\n\n  bitsFetch(requestParams, 'getFields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...confTmp }\n        if (result.data) {\n          newConf.hubSpotFields = result.data\n          newConf.actionName = type\n        }\n        setConf(newConf)\n        setLoading({ ...setLoading, customFields: false })\n        setLoading({ ...setLoading, hubSpotFields: true })\n\n        toast.success(__('Fields fetched successfully', 'bit-integrations'))\n        return\n      }\n      setLoading({ ...setLoading, customFields: false })\n      toast.error(__('Fields fetching failed', 'bit-integrations'))\n    })\n}\n"],"names":["handleInput","e","hubspotConf","setHubspotConf","setIsLoading","newConf","__spreadValues","name","checkMappedFields","mappedField","generateMappedField","requiredFlds","fld","field","hubspotAuthorization","confTmp","setError","setIsAuthorized","loading","setLoading","__","__spreadProps","requestParams","bitsFetch","result","toast","getAllPipelines","setConf","type","getFields","getAllOwners","getAllContacts","getAllCompany","refreshCustomFields"],"mappings":"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"}