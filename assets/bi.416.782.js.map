{"version":3,"file":"bi.416.782.js","sources":["../frontend-dev/src/components/AllIntegrations/Groundhogg/GroundhoggActions.jsx","../frontend-dev/src/components/AllIntegrations/Groundhogg/IntegrationHelpers.js","../frontend-dev/src/components/AllIntegrations/Groundhogg/GroundhoggFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Groundhogg/GroundhoggMetaFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Groundhogg/GroundhoggIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { fetchAllTags } from './GroundhoggCommonFunc'\nimport TitleModal from '../../Utilities/TitleModal'\n\nexport default function GroundhoggActions({ groundhoggConf, setGroundhoggConf, formFields }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n  const actionHandler = (e, type) => {\n    const newConf = { ...groundhoggConf }\n    if (type === 'tag') {\n      if (e.target?.checked) {\n        newConf.actions.tags = true\n      } else {\n        delete newConf.actions.tags\n      }\n    }\n    if (type === 'optin_status_open') {\n      if (e.target?.checked) {\n        newConf.optin_status_open = true\n      } else {\n        delete newConf.optin_status_open\n      }\n    }\n\n    setGroundhoggConf({ ...newConf })\n  }\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n  const onSelectHandler = (val) => {\n    const newConf = { ...groundhoggConf }\n    if (val) {\n      newConf.actions.tags = val\n    } else {\n      delete newConf.actions.tags\n    }\n\n    setGroundhoggConf({ ...newConf })\n  }\n  const onSelectOptionStatusHandler = (val) => {\n    const newConf = { ...groundhoggConf }\n    if (val) {\n      newConf.optin_status = val\n    } else {\n      newConf.optin_status = '1'\n    }\n\n    setGroundhoggConf({ ...newConf })\n  }\n\n  const openReminderMdl = () => {\n    setActionMdl({ show: 'tag' })\n  }\n  const openOptionStatusMdl = () => {\n    setActionMdl({ show: 'optin_status' })\n  }\n\n  // eslint-disable-next-line camelcase\n  const organizedTags = (groundhoggConf?.default?.tags || []).map(({ tag_name }) => ({ label: tag_name, value: `ground-${tag_name}` }))\n\n  const options = [\n    { type: 'group', title: 'Groundhogg Tags', childs: organizedTags },\n    { type: 'group', title: 'Form Fields', childs: formFields.map(fld => ({ label: fld.label, value: fld.name })) },\n    { type: 'group', title: 'Special Tags', childs: SmartTagField?.map(fld => ({ label: fld.label, value: fld.name })) },\n  ]\n\n  const optinStatusOptions = [\n    { label: 'Unconfirmed', value: '1' },\n    { label: 'Confirmed', value: '2' },\n    { label: 'Unsubscribed', value: '3' },\n    { label: 'Weekly', value: '4' },\n    { label: 'Monthly', value: '5' },\n    { label: 'Bounced', value: '6' },\n    { label: 'Spam', value: '7' },\n    { label: 'Complained', value: '8' },\n\n  ]\n\n  return (\n    <div className=\"d-flx wdt-300\">\n\n      <div className=\"pos-rel d-flx w-8\">\n        <TitleModal action={openReminderMdl}>\n          <TableCheckBox checked={groundhoggConf?.actions?.tags || false} onChange={(e) => actionHandler(e, 'tag')} className=\"wdt-200 mt-4 mr-2\" value=\"tags\" title={__('Add Tags', 'bit-integrations')} subTitle={__('Add Contact Tag', 'bit-integrations')} />\n        </TitleModal>\n        <ConfirmModal\n          className=\"custom-conf-mdl\"\n          mainMdlCls=\"o-v\"\n          btnClass=\"blue\"\n          btnTxt={__('Ok', 'bit-integrations')}\n          show={actionMdl.show === 'tag'}\n          close={clsActionMdl}\n          action={clsActionMdl}\n          title={__('Tags', 'bit-integrations')}\n        >\n          <div className=\"btcd-hr mt-2 mb-2\" />\n          <div className=\"mt-2\">{__('Select tag', 'bit-integrations')}</div>\n          {isLoading\n            ? (\n              <Loader style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: 45,\n                transform: 'scale(0.5)',\n              }}\n              />\n            )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={options}\n                  className=\"msl-wrp-options\"\n                  defaultValue={groundhoggConf.actions?.tags}\n                  onChange={val => onSelectHandler(val)}\n                  customValue\n                />\n                <button onClick={() => fetchAllTags(null, groundhoggConf, setGroundhoggConf, setIsLoading, null)} className=\"icn-btn sh-sm ml-2 mr-4 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Groundhogg Tags', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n              </div>\n            )}\n\n        </ConfirmModal>\n      </div>\n      <div className=\"pos-rel d-flx w-8\">\n        <TitleModal action={openOptionStatusMdl}>\n          <TableCheckBox checked={groundhoggConf?.optin_status_open || false} onChange={(e) => actionHandler(e, 'optin_status_open')} className=\"wdt-200 mt-4 mr-2\" value=\"optin_status_open\" title={__('Optin Status ', 'bit-integrations')} subTitle={__('Add optin status ', 'bit-integrations')} />\n        </TitleModal>\n        <ConfirmModal\n          className=\"custom-conf-mdl\"\n          mainMdlCls=\"o-v\"\n          btnClass=\"blue\"\n          btnTxt={__('Ok', 'bit-integrations')}\n          show={actionMdl.show === 'optin_status'}\n          close={clsActionMdl}\n          action={clsActionMdl}\n          title={__('Optin status', 'bit-integrations')}\n        >\n          <div className=\"btcd-hr mt-2 mb-2\" />\n          <div className=\"mt-2\">{__('Select Optin status', 'bit-integrations')}</div>\n          {isLoading\n            ? (\n              <Loader style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: 45,\n                transform: 'scale(0.5)',\n              }}\n              />\n            )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={optinStatusOptions}\n                  className=\"msl-wrp-options\"\n                  defaultValue={groundhoggConf.optin_status}\n                  onChange={val => onSelectOptionStatusHandler(val)}\n                  singleSelect\n                />\n              </div>\n            )}\n\n        </ConfirmModal>\n\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\nimport { __ } from '../../../Utils/i18nwrap'\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\nexport const addMetaFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map_meta.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delMetaFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map_meta.length > 1) {\n    newConf.field_map_meta.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n  setConf({ ...newConf })\n}\nexport const handleMetaFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map_meta[index][event.target.name] = event.target.value\n  if (event.target.value === 'custom') {\n    newConf.field_map_meta[index].customMetaFormValue = ''\n  }\n  setConf({ ...newConf })\n}\n\nexport const handleMetaCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map_meta[index].customMetaFormValue = event\n  setConf({ ...newConf })\n}\n// export const handleMetaCustomFieldValue = (event, index, conftTmp, setConf) => {\n//   const newConf = { ...conftTmp }\n\n//   newConf.field_map_meta[index].customMetaGroundValue = event.target.value\n//   setConf({ ...newConf })\n// }\n","import { useRecoilValue } from 'recoil'\nimport { useEffect } from 'react'\nimport { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './GroundhoggCommonFunc'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { handleCustomValue } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function GroundhoggFieldMap({ i, formFields, field, groundhoggConf, setGroundhoggConf }) {\n  useEffect(() => {\n    if (groundhoggConf?.field_map?.length === 1 && field.GroundhoggMapField === '') {\n      const newConf = { ...groundhoggConf }\n      const tmp = generateMappedField(newConf)\n      newConf.field_map = tmp\n      setGroundhoggConf(newConf)\n    }\n  }, [])\n\n  const requiredFlds = groundhoggConf?.contactsFields.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = groundhoggConf?.contactsFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, groundhoggConf, setGroundhoggConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-gh-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, groundhoggConf, setGroundhoggConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"GroundhoggMapField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.GroundhoggMapField || '')} onChange={(ev) => handleFieldMapping(ev, i, groundhoggConf, setGroundhoggConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, groundhoggConf, setGroundhoggConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, groundhoggConf, setGroundhoggConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { __ } from '../../../Utils/i18nwrap'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { generateMappedField } from './GroundhoggCommonFunc'\nimport { addMetaFieldMap, delMetaFieldMap, handleMetaCustomValue, handleMetaFieldMapping } from './IntegrationHelpers'\n\nexport default function GroundhoggMetaFieldMap({ i, formFields, field, groundhoggConf, setGroundhoggConf }) {\n  useEffect(() => {\n    if (groundhoggConf?.field_map_meta?.length === 1 && field.GroundhoggMetaMapField === '') {\n      const newConf = { ...groundhoggConf }\n      const tmp = generateMappedField(newConf)\n      newConf.field_map_meta = tmp\n      setGroundhoggConf(newConf)\n    }\n  }, [])\n  const requiredFlds = groundhoggConf?.contactMetaFields.filter(fld => fld.required === true) || []\n  const nonRequiredFlds = groundhoggConf?.contactMetaFields.filter(fld => fld.required === false) || []\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleMetaFieldMapping(ev, i, groundhoggConf, setGroundhoggConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-gh-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n\n          </select>\n\n          {/* {field.formField === 'custom' && <MtInput onChange={e => handleMetaCustomValue(e, i, groundhoggConf, setGroundhoggConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customMetaFormValue} placeholder={__('Custom Value', 'bit-integrations')} />} */}\n\n          {field.formField === 'custom' && <TagifyInput onChange={e => handleMetaCustomValue(e, i, groundhoggConf, setGroundhoggConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customMetaFormValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFlds.length} name=\"GroundhoggMetaMapField\" value={i < requiredFlds.length ? (requiredFlds[i].key || '') : (field.GroundhoggMetaMapField || '')} onChange={(ev) => handleMetaFieldMapping(ev, i, groundhoggConf, setGroundhoggConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFlds.length ? (\n                <option key={requiredFlds[i].key} value={requiredFlds[i].key}>\n                  {requiredFlds[i].label}\n                </option>\n              ) : (\n                nonRequiredFlds.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n          </select>\n          {/* {field.GroundhoggMetaMapField === 'custom' && <MtInput onChange={e => handleMetaCustomFieldValue(e, i, groundhoggConf, setGroundhoggConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customMetaGroundValue} placeholder={__('Custom Value', 'bit-integrations')} />} */}\n        </div>\n        {\n          i >= requiredFlds.length && (\n            <>\n              <button\n                onClick={() => addMetaFieldMap(i, groundhoggConf, setGroundhoggConf, false)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delMetaFieldMap(i, groundhoggConf, setGroundhoggConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport Loader from '../../Loaders/Loader'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport { addFieldMap } from '../IntegrationHelpers/IntegrationHelpers'\nimport GroundhoggActions from './GroundhoggActions'\nimport { fetchAllTags } from './GroundhoggCommonFunc'\nimport GroundhoggFieldMap from './GroundhoggFieldMap'\nimport GroundhoggMetaFieldMap from './GroundhoggMetaFieldMap'\nimport { addMetaFieldMap } from './IntegrationHelpers'\n\nexport default function GroundhoggIntegLayout({ formFields, handleInput, groundhoggConf, setGroundhoggConf, isLoading, setIsLoading, setSnackbar }) {\n  const actionHandler = (e, type) => {\n    const newConf = { ...groundhoggConf }\n    if (type === 'showMeta') {\n      if (e.target?.checked) {\n        newConf.showMeta = true\n      } else {\n        delete newConf.showMeta\n      }\n    }\n    setGroundhoggConf({ ...newConf })\n  }\n\n  const onSelectHandler = (val) => {\n    const newConf = { ...groundhoggConf }\n    if (val) {\n      newConf.addTagToUser = val\n    } else {\n      newConf.addTagToUser = ''\n    }\n    setGroundhoggConf({ ...newConf })\n  }\n  const onEmailHandler = (val) => {\n    const newConf = { ...groundhoggConf }\n    if (val) {\n      newConf.emailAddress = val\n    } else {\n      newConf.emailAddress = ''\n    }\n    setGroundhoggConf({ ...newConf })\n  }\n\n  const organizedTags = (groundhoggConf?.default?.tags || []).map(({ tag_name }) => ({ label: tag_name, value: `ground-${tag_name}` }))\n  const allFormFields = formFields.map(itm => ({ label: itm.label, value: itm.name }))\n\n  const options = [\n    { type: 'group', title: 'Groundhogg Tags', childs: organizedTags },\n    { type: 'group', title: 'Form Fields', childs: allFormFields },\n    { type: 'group', title: 'Special Tags', childs: SmartTagField?.map(fld => ({ label: fld.label, value: fld.name })) },\n  ]\n\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Actions:', 'bit-integrations')}</b>\n      <select onChange={handleInput} name=\"mainAction\" value={groundhoggConf.mainAction} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select Actions', 'bit-integrations')}</option>\n        {\n          groundhoggConf.allActions && groundhoggConf.allActions.map(({ key, label }) => (\n            <option key={key} value={key}>\n              {label}\n            </option>\n          ))\n        }\n      </select>\n      <br />\n      <br />\n      {groundhoggConf.mainAction === '2' && (\n        <div className=\"d-flx\">\n\n          <b className=\"wdt-200 d-in-b mt-3 mt-i-3\">{__('Email:', 'bit-integrations')}</b>\n          <MultiSelect\n            options={allFormFields}\n            className=\"btcd-paper-drpdwn w-5\"\n            defaultValue={groundhoggConf.emailAddress}\n            onChange={val => onEmailHandler(val)}\n            singleSelect\n            closeOnSelect\n          />\n        </div>\n      )}\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      <br />\n      {groundhoggConf.mainAction === '1' && (\n        <>\n          <div className=\"mt-5\"><b className=\"wdt-100\">{__('Field Map', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Groundhogg Fields', 'bit-integrations')}</b></div>\n          </div>\n\n          {groundhoggConf?.field_map.map((itm, i) => (\n            <GroundhoggFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              groundhoggConf={groundhoggConf}\n              formFields={formFields}\n              setGroundhoggConf={setGroundhoggConf}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(groundhoggConf.field_map.length, groundhoggConf, setGroundhoggConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <TableCheckBox checked={groundhoggConf?.showMeta || false} onChange={(e) => actionHandler(e, 'showMeta')} className=\"wdt-200 mt-4 mr-2\" value=\"showMeta\" title={__('Add Meta field', 'bit-integrations')} />\n        </>\n      )}\n      <br />\n\n      {groundhoggConf.mainAction === '1' && groundhoggConf.showMeta && (\n        <>\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Groundhogg Meta Fields', 'bit-integrations')}</b></div>\n          </div>\n          {groundhoggConf?.field_map_meta.map((itm, i) => (\n            <GroundhoggMetaFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              groundhoggConf={groundhoggConf}\n              formFields={formFields}\n              setGroundhoggConf={setGroundhoggConf}\n            />\n          ))}\n        </>\n      )}\n\n      {groundhoggConf.mainAction === '1' && groundhoggConf.showMeta && <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addMetaFieldMap(groundhoggConf.field_map_meta.length, groundhoggConf, setGroundhoggConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>}\n      {groundhoggConf.mainAction === '2' && (\n        <div className=\"d-flx\">\n          <b className=\"wdt-200 d-in-b mt-3 mt-i-3\">{__('All Tags:', 'bit-integrations')}</b>\n          <MultiSelect\n            options={options}\n            className=\"btcd-paper-drpdwn w-5\"\n            defaultValue={groundhoggConf.addTagToUser}\n            onChange={val => onSelectHandler(val)}\n            customValue\n          />\n          <button onClick={() => fetchAllTags(null, groundhoggConf, setGroundhoggConf, setIsLoading, null)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Groundhogg Tags', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n        </div>\n      )}\n\n      <br />\n      <br />\n      {groundhoggConf.mainAction === '1' && (\n        <>\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <GroundhoggActions\n            groundhoggConf={groundhoggConf}\n            setGroundhoggConf={setGroundhoggConf}\n            formFields={formFields}\n          />\n        </>\n      )}\n\n    </>\n  )\n}\n"],"names":["GroundhoggActions","groundhoggConf","setGroundhoggConf","formFields","isLoading","setIsLoading","useState","actionMdl","setActionMdl","actionHandler","e","type","newConf","__spreadValues","_a","_b","clsActionMdl","onSelectHandler","val","onSelectOptionStatusHandler","openReminderMdl","openOptionStatusMdl","options","tag_name","fld","SmartTagField","optinStatusOptions","jsxs","jsx","TitleModal","TableCheckBox","_c","__","ConfirmModal","Loader","MultiSelect","_d","fetchAllTags","addFieldMap","i","confTmp","setConf","delFieldMap","addMetaFieldMap","delMetaFieldMap","handleFieldMapping","event","index","conftTmp","handleMetaFieldMapping","handleMetaCustomValue","GroundhoggFieldMap","field","useEffect","tmp","generateMappedField","requiredFlds","nonRequiredFlds","btcbi","useRecoilValue","$btcbi","isPro","ev","f","TagifyInput","handleCustomValue","key","label","Fragment","GroundhoggMetaFieldMap","GroundhoggIntegLayout","handleInput","setSnackbar","onEmailHandler","organizedTags","allFormFields","itm"],"mappings":"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"}