{"version":3,"file":"bi.472.338.js","sources":["../frontend-dev/src/components/AllIntegrations/Twilio/Twilio.jsx"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveIntegConfig } from '../IntegrationHelpers/IntegrationHelpers'\nimport { checkMappedFields, handleInput } from './TwilioCommonFunc'\nimport TwilioAuthorization from './TwilioAuthorization'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport TwilioIntegLayout from './TwilioIntegLayout'\n\nfunction Twilio({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n\n  const twilioFields = [\n    { key: 'To', label: 'To', required: true },\n    { key: 'Body', label: 'Message Body', required: true },\n  ]\n\n  const [twilioConf, setTwilioConf] = useState({\n    name: 'Twilio',\n    type: 'Twilio',\n    sid: process.env.NODE_ENV === 'development' ? 'AC320b8d36a8a82cebf0b9356f36bf43e9' : '',\n    token: process.env.NODE_ENV === 'development' ? 'ec4d20136c1af5c033c545c6c7b1257f' : '',\n    body: '',\n    to: '',\n    from_num: process.env.NODE_ENV === 'development' ? '01861054127' : '',\n    field_map: [\n      { formField: '', twilioField: 'To' },\n      { formField: '', twilioField: 'Body' },\n    ],\n    twilioFields,\n  })\n\n  const saveConfig = () => {\n    setIsLoading(true)\n    const resp = saveIntegConfig(\n      flow,\n      setFlow,\n      allIntegURL,\n      twilioConf,\n      navigate,\n      '',\n      '',\n      setIsLoading,\n    )\n    resp.then((res) => {\n      if (res.success) {\n        toast.success(res.data?.msg)\n        navigate(allIntegURL)\n      } else {\n        toast.error(res.data || res)\n      }\n    })\n  }\n  const nextPage = (pageNo) => {\n    if (twilioConf.to === '' && twilioConf.body === '') {\n      toast.error('Please select To and Body field , it is required')\n      return\n    }\n    setstep(pageNo)\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\">\n        <Steps step={3} active={step} />\n      </div>\n\n      {/* STEP 1 */}\n\n      <TwilioAuthorization\n        twilioConf={twilioConf}\n        setTwilioConf={setTwilioConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div\n        className=\"btcd-stp-page\"\n        style={{\n          ...(step === 2 && {\n            width: 900,\n            height: 'auto',\n            overflow: 'visible',\n          }),\n        }}\n      >\n        <TwilioIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(\n            e,\n            twilioConf,\n            setTwilioConf,\n            setIsLoading,\n            setSnackbar,\n          )}\n          twilioConf={twilioConf}\n          setTwilioConf={setTwilioConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveConfig()}\n        isLoading={isLoading}\n        dataConf={twilioConf}\n        setDataConf={setTwilioConf}\n        formFields={formFields}\n      />\n    </div>\n  )\n}\n\nexport default Twilio\n"],"names":["Twilio","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","twilioFields","twilioConf","setTwilioConf","saveConfig","saveIntegConfig","res","toast","_a","nextPage","pageNo","jsx","SnackMsg","Steps","TwilioAuthorization","jsxs","__spreadValues","TwilioIntegLayout","e","handleInput","__","IntegrationStepThree"],"mappings":"qtBAcA,SAASA,EAAO,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC1D,MAAMC,EAAWC,IACX,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAE/CK,EAAe,CACnB,CAAE,IAAK,KAAM,MAAO,KAAM,SAAU,EAAK,EACzC,CAAE,IAAK,OAAQ,MAAO,eAAgB,SAAU,EAAK,CAAA,EAGjD,CAACC,EAAYC,CAAa,EAAIP,WAAS,CAC3C,KAAM,SACN,KAAM,SACN,IAAqF,GACrF,MAAqF,GACrF,KAAM,GACN,GAAI,GACJ,SAAmE,GACnE,UAAW,CACT,CAAE,UAAW,GAAI,YAAa,IAAK,EACnC,CAAE,UAAW,GAAI,YAAa,MAAO,CACvC,EACA,aAAAK,CAAA,CACD,EAEKG,EAAa,IAAM,CACvBT,EAAa,EAAI,EACJU,EACXf,EACAD,EACAE,EACAW,EACAV,EACA,GACA,GACAG,CAAA,EAEG,KAAMW,GAAQ,OACbA,EAAI,SACAC,EAAA,SAAQC,EAAAF,EAAI,OAAJ,YAAAE,EAAU,GAAG,EAC3BhB,EAASD,CAAW,GAEdgB,EAAA,MAAMD,EAAI,MAAQA,CAAG,CAC7B,CACD,CAAA,EAEGG,EAAYC,GAAW,CAC3B,GAAIR,EAAW,KAAO,IAAMA,EAAW,OAAS,GAAI,CAClDK,EAAM,MAAM,kDAAkD,EAC9D,MACF,CACAT,EAAQY,CAAM,CAAA,EAGhB,cACG,MACC,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAS,MAAAb,EAAc,YAAAC,CAA0B,CAAA,EAClDW,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQhB,CAAA,CAAM,CAChC,CAAA,EAIAc,EAAA,IAACG,EAAA,CACC,WAAAZ,EACA,cAAAC,EACA,KAAAN,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAGAe,EAAA,KAAC,MAAA,CACC,UAAU,gBACV,MAAOC,EAAA,GACDnB,IAAS,GAAK,CAChB,MAAO,IACP,OAAQ,OACR,SAAU,SACZ,GAGF,SAAA,CAAAc,EAAA,IAACM,EAAA,CACC,WAAA7B,EACA,YAAc8B,GAAMC,EAClBD,EACAhB,EACAC,CAGF,EACA,WAAAD,EACA,cAAAC,EACA,UAAAT,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAEAe,EAAA,KAAC,SAAA,CACC,QAAS,IAAMN,EAAS,CAAC,EACzB,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAW,EAAG,OAAQ,kBAAkB,EAC7B,IAAI,IAELT,EAAAA,IAAC,MAAI,CAAA,UAAU,wCAAyC,CAAA,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,EAGAA,EAAA,IAACU,EAAA,CACC,KAAAxB,EACA,WAAY,IAAMO,EAAW,EAC7B,UAAAV,EACA,SAAUQ,EACV,YAAaC,EACb,WAAAf,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}