{"version":3,"file":"bi.460.764.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoDesk/ZohoDeskCommonFunc.js"],"sourcesContent":["import { __, sprintf } from '../../../Utils/i18nwrap'\nimport bitsFetch from '../../../Utils/bitsFetch'\n\nexport const handleInput = (e, deskConf, setDeskConf, formID, setIsLoading, setSnackbar, isNew, error, setError) => {\n  let newConf = { ...deskConf }\n  if (isNew) {\n    const rmError = { ...error }\n    rmError[e.target.name] = ''\n    setError({ ...rmError })\n  }\n  newConf[e.target.name] = e.target.value\n\n  switch (e.target.name) {\n    case 'orgId':\n      newConf = portalChange(newConf, formID, setDeskConf, setIsLoading, setSnackbar)\n      break\n    case 'department':\n      newConf = departmentChange(newConf, formID, setDeskConf, setIsLoading, setSnackbar)\n      break\n    default:\n      break\n  }\n  setDeskConf({ ...newConf })\n}\n\nexport const portalChange = (deskConf, formID, setDeskConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...deskConf }\n  newConf.department = ''\n  newConf.field_map = [{ formField: '', zohoFormField: '' }]\n  newConf.actions = {}\n\n  if (!newConf?.default?.departments?.[newConf.orgId]) {\n    refreshDepartments(formID, newConf, setDeskConf, setIsLoading, setSnackbar)\n  } else if (newConf?.default?.departments?.[newConf.orgId].length === 1) newConf.field_map = generateMappedField(newConf)\n  return newConf\n}\n\nexport const departmentChange = (deskConf, formID, setDeskConf, setIsLoading, setSnackbar) => {\n  const newConf = { ...deskConf }\n  newConf.field_map = [{ formField: '', zohoFormField: '' }]\n  newConf.actions = {}\n\n  if (!newConf?.default?.fields?.[newConf.orgId]) {\n    refreshFields(formID, newConf, setDeskConf, setIsLoading, setSnackbar)\n  } else {\n    newConf.field_map = generateMappedField(newConf)\n  }\n  return newConf\n}\n\nexport const refreshOrganizations = (formID, deskConf, setDeskConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshOrganizationsRequestParams = {\n    formID,\n    id: deskConf.id,\n    dataCenter: deskConf.dataCenter,\n    clientId: deskConf.clientId,\n    clientSecret: deskConf.clientSecret,\n    tokenDetails: deskConf.tokenDetails,\n  }\n  bitsFetch(refreshOrganizationsRequestParams, 'zdesk_refresh_organizations')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...deskConf }\n        if (result.data.organizations) {\n          newConf.default = { ...newConf.default, organizations: result.data.organizations }\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Portals refreshed', 'bit-integrations') })\n        setDeskConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Portals refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Portals refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshDepartments = (formID, deskConf, setDeskConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshDepartmentsRequestParams = {\n    formID,\n    id: deskConf.id,\n    dataCenter: deskConf.dataCenter,\n    clientId: deskConf.clientId,\n    clientSecret: deskConf.clientSecret,\n    tokenDetails: deskConf.tokenDetails,\n    orgId: deskConf.orgId,\n  }\n  bitsFetch(refreshDepartmentsRequestParams, 'zdesk_refresh_departments')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...deskConf }\n        if (!newConf.default.departments) {\n          newConf.default.departments = {}\n        }\n        if (result.data.departments) {\n          newConf.default.departments[newConf.orgId] = result.data.departments\n        }\n        if (result.data.departments.length === 1) {\n          newConf.department = result.data.departments[newConf.orgId][0].departmentName\n          !newConf.default?.fields?.[newConf.orgId] && refreshFields(formID, newConf, setDeskConf, setIsLoading, setSnackbar)\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Departments refreshed', 'bit-integrations') })\n        setDeskConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: sprintf(__('Departments refresh failed Cause: %s. please try again', 'bit-integrations'), result.data.data || result.data) })\n      } else {\n        setSnackbar({ show: true, msg: __('Departments refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshFields = (formID, deskConf, setDeskConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshFieldsRequestParams = {\n    formID,\n    dataCenter: deskConf.dataCenter,\n    clientId: deskConf.clientId,\n    clientSecret: deskConf.clientSecret,\n    tokenDetails: deskConf.tokenDetails,\n    orgId: deskConf.orgId,\n  }\n  bitsFetch(refreshFieldsRequestParams, 'zdesk_refresh_fields')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...deskConf }\n        if (result.data.fields) {\n          if (!newConf.default.fields) {\n            newConf.default.fields = {}\n          }\n          newConf.default.fields[newConf.orgId] = { ...result.data }\n          newConf.field_map = generateMappedField(newConf)\n          if (result.data.tokenDetails) {\n            newConf.tokenDetails = result.data.tokenDetails\n          }\n          setSnackbar({ show: true, msg: __('Fields refreshed', 'bit-integrations') })\n        } else {\n          setSnackbar({ show: true, msg: `${__('Fields refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n        }\n\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setDeskConf({ ...newConf })\n      } else {\n        setSnackbar({ show: true, msg: __('Fields refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshOwners = (formID, deskConf, setDeskConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshOwnersRequestParams = {\n    formID,\n    id: deskConf.id,\n    dataCenter: deskConf.dataCenter,\n    clientId: deskConf.clientId,\n    clientSecret: deskConf.clientSecret,\n    tokenDetails: deskConf.tokenDetails,\n    orgId: deskConf.orgId,\n  }\n  bitsFetch(refreshOwnersRequestParams, 'zdesk_refresh_owners')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...deskConf }\n        if (!newConf.default.owners) {\n          newConf.default.owners = {}\n        }\n        if (result.data.owners) {\n          newConf.default.owners[newConf.orgId] = result.data.owners\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Owners refreshed', 'bit-integrations') })\n        setDeskConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Owners refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Owners refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const refreshProducts = (formID, deskConf, setDeskConf, setIsLoading, setSnackbar) => {\n  setIsLoading(true)\n  const refreshProductsRequestParams = {\n    formID,\n    id: deskConf.id,\n    dataCenter: deskConf.dataCenter,\n    clientId: deskConf.clientId,\n    clientSecret: deskConf.clientSecret,\n    tokenDetails: deskConf.tokenDetails,\n    orgId: deskConf.orgId,\n    departmentId: deskConf.department,\n  }\n  bitsFetch(refreshProductsRequestParams, 'zdesk_refresh_products')\n    .then(result => {\n      if (result && result.success) {\n        const newConf = { ...deskConf }\n        if (!newConf.default.products) {\n          newConf.default.products = {}\n        }\n        if (result.data.products) {\n          newConf.default.products[newConf.department] = result.data.products\n        }\n        if (result.data.tokenDetails) {\n          newConf.tokenDetails = result.data.tokenDetails\n        }\n        setSnackbar({ show: true, msg: __('Products refreshed', 'bit-integrations') })\n        setDeskConf({ ...newConf })\n      } else if ((result && result.data && result.data.data) || (!result.success && typeof result.data === 'string')) {\n        setSnackbar({ show: true, msg: `${__('Products refresh failed Cause:', 'bit-integrations')}${result.data.data || result.data}. ${__('please try again', 'bit-integrations')}` })\n      } else {\n        setSnackbar({ show: true, msg: __('Products refresh failed. please try again', 'bit-integrations') })\n      }\n      setIsLoading(false)\n    })\n    .catch(() => setIsLoading(false))\n}\n\nexport const generateMappedField = deskConf => (deskConf.default.fields[deskConf.orgId].required.length > 0 ? deskConf.default.fields[deskConf.orgId].required?.map(field => ({ formField: '', zohoFormField: field })) : [{ formField: '', zohoFormField: '' }])\n\nexport const checkMappedFields = deskConf => {\n  const mappedFields = deskConf?.field_map ? deskConf.field_map.filter(mappedField => (!mappedField.formField && mappedField.zohoFormField && deskConf?.default?.fields?.[deskConf.orgId]?.required.indexOf(mappedField.zohoFormField) !== -1)) : []\n  if (mappedFields.length > 0) {\n    return false\n  }\n\n  return true\n}\n\n"],"names":["handleInput","e","deskConf","setDeskConf","formID","setIsLoading","setSnackbar","isNew","error","setError","newConf","__spreadValues","rmError","portalChange","departmentChange","_b","_a","_d","_c","generateMappedField","refreshDepartments","refreshFields","refreshOrganizations","refreshOrganizationsRequestParams","bitsFetch","result","__spreadProps","__","refreshDepartmentsRequestParams","sprintf","refreshFieldsRequestParams","refreshOwners","refreshOwnersRequestParams","refreshProducts","refreshProductsRequestParams","field","checkMappedFields","mappedField"],"mappings":"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"}