{"version":3,"file":"bi.674.860.js","sources":["../frontend-dev/src/components/AllIntegrations/Insightly/InsightlyActions.jsx","../frontend-dev/src/components/AllIntegrations/Insightly/IntegrationHelpers.jsx","../frontend-dev/src/components/AllIntegrations/Insightly/CustomField.jsx","../frontend-dev/src/components/AllIntegrations/Insightly/InsightlyFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/Insightly/InsightlyIntegLayout.jsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport Loader from '../../Loaders/Loader'\nimport { getAllOrganisations, getAllCategories, getAllStatuses } from './InsightlyCommonFunc'\n\nexport default function InsightlyActions({ insightlyConf, setInsightlyConf, loading, setLoading }) {\n  const [actionMdl, setActionMdl] = useState({ show: false, action: () => { } })\n\n  const followUps = [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' },\n  ]\n\n  const opportunityTypes = [\n    { label: 'New Business', value: 'New Business' },\n    { label: 'Existing Business', value: 'Existing Business' },\n  ]\n\n  const actionHandler = (e, type) => {\n    const newConf = { ...insightlyConf }\n\n    if (type === 'organisation') {\n      if (e.target?.checked) {\n        getAllOrganisations(insightlyConf, setInsightlyConf, setLoading)\n        newConf.actions.organisation = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.organisation\n      }\n    } else if (type === 'category') {\n      if (e.target?.checked) {\n        getAllCategories(insightlyConf, setInsightlyConf, setLoading)\n        newConf.actions.category = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.category\n      }\n    } else if (type === 'status') {\n      if (e.target?.checked) {\n        getAllStatuses(insightlyConf, setInsightlyConf, setLoading)\n        newConf.actions.status = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.status\n      }\n    } else if (type === 'followUp') {\n      if (e.target?.checked) {\n        newConf.actions.followUp = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.followUp\n      }\n    } else if (type === 'opportunityType') {\n      if (e.target?.checked) {\n        newConf.actions.opportunityType = true\n      } else {\n        setActionMdl({ show: false })\n        delete newConf.actions.opportunityType\n      }\n    }\n\n    setActionMdl({ show: type })\n    setInsightlyConf({ ...newConf })\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...insightlyConf }\n    newConf[name] = val\n    setInsightlyConf({ ...newConf })\n  }\n\n  return (\n    <div className=\"pos-rel d-flx flx-wrp\">\n      {(insightlyConf.actionName === 'contact' || insightlyConf.actionName === 'opportunity') && <TableCheckBox checked={insightlyConf?.selectedOrganisation?.length || false} onChange={(e) => actionHandler(e, 'organisation')} className=\"wdt-200 mt-4 mr-2\" value=\"organisation\" title={__('Add Organisation', 'bit - integrations')} subTitle={__('Add an organisation')} />}\n      {(insightlyConf.actionName === 'opportunity' || insightlyConf.actionName === 'project' || insightlyConf.actionName === 'task') && <TableCheckBox checked={insightlyConf?.selectedCategory?.length || false} onChange={(e) => actionHandler(e, 'category')} className=\"wdt-200 mt-4 mr-2\" value=\"category\" title={__('Add Category', 'bit - integrations')} subTitle={__('Add a category')} />}\n\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'organisation'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Organisations', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Organisation', 'bit-integrations')}\n        </div>\n        {\n          loading.organisations ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={insightlyConf?.organisations?.map(organisation => ({ label: organisation.name, value: organisation.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={insightlyConf?.selectedOrganisation}\n                  onChange={val => setChanges(val, 'selectedOrganisation')}\n                  singleSelect\n                />\n                <button onClick={() => getAllOrganisations(insightlyConf, setInsightlyConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Organisations', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'category'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Categories', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Category', 'bit-integrations')}\n        </div>\n        {\n          loading.categories ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={insightlyConf?.categories?.map(category => ({ label: category.name, value: category.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={insightlyConf?.selectedCategory}\n                  onChange={val => setChanges(val, 'selectedCategory')}\n                  singleSelect\n                />\n                <button onClick={() => getAllCategories(insightlyConf, setInsightlyConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh Categories', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'status'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Statuses', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"mt-2\">\n          {__('Select Status', 'bit-integrations')}\n        </div>\n        {\n          loading.statuses ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n            : (\n              <div className=\"flx flx-between mt-2\">\n                <MultiSelect\n                  options={insightlyConf?.statuses?.map(status => ({ label: status.name, value: status.id }))}\n                  className=\"msl-wrp-options\"\n                  defaultValue={insightlyConf?.selectedStatus}\n                  onChange={val => setChanges(val, 'selectedStatus')}\n                  singleSelect\n                />\n                <button onClick={() => getAllStatuses(insightlyConf, setInsightlyConf, setLoading)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `${__('Refresh statuses', 'bit-integrations')}'` }} type=\"button\">&#x21BB;</button>\n              </div>\n            )\n        }\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'followUp'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Follow Up', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={followUps?.map(followUp => ({ label: followUp.label, value: followUp.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={insightlyConf?.selectedFollowUp}\n            onChange={val => setChanges(val, 'selectedFollowUp')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt={__('Ok', 'bit-integrations')}\n        show={actionMdl.show === 'opportunityType'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Opportunity types', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <div className=\"flx flx-center mt-2\">\n          <MultiSelect\n            options={opportunityTypes?.map(opportunityType => ({ label: opportunityType.label, value: opportunityType.value }))}\n            className=\"msl-wrp-options\"\n            defaultValue={insightlyConf?.selectedOpportunityType}\n            onChange={val => setChanges(val, 'selectedOpportunityType')}\n            singleSelect\n          />\n        </div>\n      </ConfirmModal>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-expressions */\n\nexport const addFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  newConf.field_map.splice(i, 0, {})\n  setConf({ ...newConf })\n}\n\nexport const delFieldMap = (i, confTmp, setConf) => {\n  const newConf = { ...confTmp }\n  if (newConf.field_map.length > 1) {\n    newConf.field_map.splice(i, 1)\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleFieldMapping = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][event.target.name] = event.target.value\n\n  if (event.target.value === 'custom') {\n    newConf.field_map[index].customValue = ''\n  }\n\n  if (event.target.value === 'customFieldKey') {\n    newConf.field_map[index].customFieldKey = ''\n  }\n\n  setConf({ ...newConf })\n}\n\nexport const handleCustomValue = (event, index, conftTmp, setConf) => {\n  const newConf = { ...conftTmp }\n\n  newConf.field_map[index].customValue = event.target.value\n  setConf({ ...newConf })\n}\n\nexport const handleCustomField = (event, index, conftTmp, setConf, fieldValue) => {\n  const newConf = { ...conftTmp }\n  newConf.field_map[index][fieldValue] = event.target.value\n  setConf({ ...newConf })\n}\n","import { __ } from '../../../Utils/i18nwrap'\nimport MtInput from '../../Utilities/MtInput'\nimport { handleCustomField } from './IntegrationHelpers'\n\nexport default function CustomField({ field, index, conf, setConf, fieldValue, fieldLabel, className }) {\n  return (\n    <MtInput\n      onChange={e => handleCustomField(e, index, conf, setConf, fieldValue)}\n      label={__(fieldLabel, 'bit-integrations')}\n      className={className}\n      type=\"text\"\n      value={field[fieldValue]}\n      placeholder={__(fieldLabel, 'bit-integrations')}\n    />\n  )\n}\n","/* eslint-disable no-console */\nimport { useRecoilValue } from 'recoil'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { addFieldMap, delFieldMap, handleFieldMapping } from './IntegrationHelpers'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport { $btcbi } from '../../../GlobalStates'\nimport { generateMappedField } from './InsightlyCommonFunc'\nimport CustomField from './CustomField'\n\nexport default function InsightlyFieldMap({ i, formFields, field, insightlyConf, setInsightlyConf }) {\n  let allFields = []\n  if (insightlyConf.actionName === 'organisation') {\n    allFields = insightlyConf?.organisationFields\n  } else if (insightlyConf.actionName === 'contact') {\n    allFields = insightlyConf?.contactFields\n  } else if (insightlyConf.actionName === 'opportunity') {\n    allFields = insightlyConf?.opportunityFields\n  } else if (insightlyConf.actionName === 'project') {\n    allFields = insightlyConf?.projectFields\n  } else if (insightlyConf.actionName === 'task') {\n    allFields = insightlyConf?.taskFields\n  } else if (insightlyConf.actionName === 'lead') {\n    allFields = insightlyConf?.leadFields\n  }\n\n  const requiredFields = allFields.filter(fld => fld.required === true) || []\n  const allNonRequiredFields = allFields.filter(fld => fld.required === false) || []\n\n  if (insightlyConf?.field_map?.length === 1 && field.insightlyFormField === '') {\n    const newConf = { ...insightlyConf }\n    const tmp = generateMappedField(newConf)\n    newConf.field_map = tmp\n    setInsightlyConf(newConf)\n  }\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"pos-rel flx\">\n        <div className=\"flx integ-fld-wrp\">\n          <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, insightlyConf, setInsightlyConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            <optgroup label=\"Form Fields\">\n              {\n                formFields?.map(f => (\n                  <option key={`ff-rm-${f.name}`} value={f.name}>\n                    {f.label}\n                  </option>\n                ))\n              }\n            </optgroup>\n            <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>\n            <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n              {isPro && SmartTagField?.map(f => (\n                <option key={`ff-rm-${f.name}`} value={f.name}>\n                  {f.label}\n                </option>\n              ))}\n            </optgroup>\n          </select>\n\n          {field.formField === 'custom' && (\n            <CustomField\n              field={field}\n              index={i}\n              conf={insightlyConf}\n              setConf={setInsightlyConf}\n              fieldValue=\"customValue\"\n              fieldLabel=\"Custom Value\"\n              className=\"mr-2\"\n            />\n          )}\n\n          <select className=\"btcd-paper-inp\" disabled={i < requiredFields.length} name=\"insightlyFormField\" value={i < requiredFields ? (requiredFields[i].label || '') : (field.insightlyFormField || '')} onChange={(ev) => handleFieldMapping(ev, i, insightlyConf, setInsightlyConf)}>\n            <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n            {\n              i < requiredFields.length ? (\n                <option key={requiredFields[i].key} value={requiredFields[i].key}>\n                  {requiredFields[i].label}\n                </option>\n              ) : (\n                allNonRequiredFields.map(({ key, label }) => (\n                  <option key={key} value={key}>\n                    {label}\n                  </option>\n                ))\n              )\n            }\n            {/* {(insightlyConf.actionName === 'organisation' || insightlyConf.actionName === 'contact' || insightlyConf.actionName === 'opportunity' || insightlyConf.actionName === 'task' || insightlyConf.actionName === 'lead')\n              && <option value=\"customFieldKey\">{__('Custom Field', 'bit-integrations')}</option>} */}\n          </select>\n          {field.insightlyFormField === 'customFieldKey'\n            && (\n              <CustomField\n                field={field}\n                index={i}\n                conf={insightlyConf}\n                setConf={setInsightlyConf}\n                fieldValue=\"customFieldKey\"\n                fieldLabel=\"Custom Field Key\"\n                className=\"ml-2\"\n              />\n            )}\n        </div>\n        {\n          i >= requiredFields.length && (\n            <>\n              <button\n                onClick={() => addFieldMap(i, insightlyConf, setInsightlyConf)}\n                className=\"icn-btn sh-sm ml-2 mr-1\"\n                type=\"button\"\n              >\n                +\n              </button>\n              <button onClick={() => delFieldMap(i, insightlyConf, setInsightlyConf)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n                <span className=\"btcd-icn icn-trash-2\" />\n              </button>\n            </>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport InsightlyActions from './InsightlyActions'\nimport { getLeadStatuses, getLeadSources, getAllCRMPipelines, getAllCRMPipelineStages } from './InsightlyCommonFunc'\nimport InsightlyFieldMap from './InsightlyFieldMap'\nimport { addFieldMap } from './IntegrationHelpers'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\n\nexport default function InsightlyIntegLayout({ formFields, handleInput, insightlyConf, setInsightlyConf, loading, setLoading, setSnackbar }) {\n  const handleActionInput = (e) => {\n    const newConf = { ...insightlyConf }\n    newConf.field_map = [\n      { formField: '', insightlyFormField: '' },\n    ]\n    const { name } = e.target\n    if (e.target.value !== '') {\n      newConf[name] = e.target.value\n      if (e.target.value === 'opportunity' || e.target.value === 'project') {\n        getAllCRMPipelines(newConf, setInsightlyConf, setLoading)\n      } else if (e.target.value === 'lead') {\n        getLeadStatuses(newConf, setInsightlyConf, setLoading)\n        getLeadSources(newConf, setInsightlyConf, setLoading)\n      }\n    } else {\n      delete newConf[name]\n    }\n    setInsightlyConf({ ...newConf })\n  }\n\n  const setChanges = (val, name) => {\n    const newConf = { ...insightlyConf }\n    newConf[name] = val\n    if (name === 'selectedCRMPipeline' && val !== '') {\n      newConf.selectedCRMPipelineStages = ''\n      getAllCRMPipelineStages(newConf, setInsightlyConf, setLoading)\n    }\n    setInsightlyConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <br />\n\n      <b className=\"wdt-200 d-in-b\">{__('Select Action:', 'bit-integrations')}</b>\n      <select onChange={handleActionInput} name=\"actionName\" value={insightlyConf.actionName} className=\"btcd-paper-inp w-5\">\n        <option value=\"\">{__('Select an action', 'bit-integrations')}</option>\n        <option value=\"organisation\">{__('Create Organisation', 'bit-integrations')}</option>\n        <option value=\"contact\">{__('Create Contact', 'bit-integrations')}</option>\n        <option value=\"opportunity\">{__('Create Opportunity', 'bit-integrations')}</option>\n        {/* <option value=\"project\">{__('Create Project', 'bit-integrations')}</option> */}\n        <option value=\"task\">{__('Create Task', 'bit-integrations')}</option>\n        <option value=\"lead\">{__('Create Lead', 'bit-integrations')}</option>\n      </select>\n      {(loading.CRMPipelines || loading.CRMPipelineStages || loading.LeadStatuses || loading.LeadSources) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {insightlyConf.actionName === 'lead'\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Lead Status:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={insightlyConf?.LeadStatuses?.map(LeadStatus => ({ label: LeadStatus.name, value: LeadStatus.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={insightlyConf?.selectedLeadStatus}\n                onChange={val => setChanges(val, 'selectedLeadStatus')}\n                disabled={loading.LeadStatuses}\n                singleSelect\n              />\n              <button\n                onClick={() => getLeadStatuses(insightlyConf, setInsightlyConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh lead status', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.LeadStatuses}\n              >\n                &#x21BB;\n              </button>\n            </div>\n\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Lead Source:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={insightlyConf?.LeadSources?.map(LeadSource => ({ label: LeadSource.name, value: LeadSource.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={insightlyConf?.selectedLeadSource}\n                onChange={val => setChanges(val, 'selectedLeadSource')}\n                disabled={loading.LeadSources}\n                singleSelect\n              />\n              <button\n                onClick={() => getLeadSources(insightlyConf, setInsightlyConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh lead source', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.LeadSources}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(insightlyConf.actionName === 'opportunity' || insightlyConf.actionName === 'project')\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Pipeline:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={insightlyConf?.CRMPipelines?.map(CRMPipeline => ({ label: CRMPipeline.name, value: CRMPipeline.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={insightlyConf?.selectedCRMPipeline}\n                onChange={val => setChanges(val, 'selectedCRMPipeline')}\n                disabled={loading.CRMPipelines}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPipelines(insightlyConf, setInsightlyConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh pipelines', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPipelines}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {((insightlyConf.actionName === 'opportunity' || insightlyConf.actionName === 'project') && insightlyConf.selectedCRMPipeline)\n        && (\n          <>\n            <br />\n            <br />\n            <div className=\"flx\">\n              <b className=\"wdt-200 d-in-b\">{__('Select Stage:', 'bit-integrations')}</b>\n              <MultiSelect\n                options={insightlyConf?.CRMPipelineStages?.filter(CRMPipelineStage => CRMPipelineStage.pipeline_id == insightlyConf.selectedCRMPipeline).map(CRMPipelineStage => ({ label: CRMPipelineStage.name, value: CRMPipelineStage.id }))}\n                className=\"msl-wrp-options dropdown-custom-width\"\n                defaultValue={insightlyConf?.selectedCRMPipelineStages}\n                onChange={val => setChanges(val, 'selectedCRMPipelineStages')}\n                disabled={loading.CRMPipelineStages}\n                singleSelect\n              />\n              <button\n                onClick={() => getAllCRMPipelineStages(insightlyConf, setInsightlyConf, setLoading)}\n                className=\"icn-btn sh-sm ml-2 mr-2 tooltip\"\n                style={{ '--tooltip-txt': `'${__('Refresh pipeline stages', 'bit-integrations')}'` }}\n                type=\"button\"\n                disabled={loading.CRMPipelineStages}\n              >\n                &#x21BB;\n              </button>\n            </div>\n          </>\n        )}\n      {(loading.customFields) && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {insightlyConf.actionName && (\n        <div>\n          <br />\n          <div className=\"mt-5\">\n            <b className=\"wdt-100\">\n              {__('Field Map', 'bit-integrations')}\n            </b>\n          </div>\n          <br />\n          <div className=\"btcd-hr mt-1\" />\n          <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n            <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n            <div className=\"txt-dp\"><b>{__('Insightly Fields', 'bit-integrations')}</b></div>\n\n          </div>\n\n          {insightlyConf?.field_map.map((itm, i) => (\n            <InsightlyFieldMap\n              key={`rp-m-${i + 9}`}\n              i={i}\n              field={itm}\n              insightlyConf={insightlyConf}\n              formFields={formFields}\n              setInsightlyConf={setInsightlyConf}\n              setSnackbar={setSnackbar}\n            />\n          ))}\n          <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(insightlyConf.field_map.length, insightlyConf, setInsightlyConf, false)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n          <br />\n          <br />\n          <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n          <div className=\"btcd-hr mt-1\" />\n          <InsightlyActions\n            insightlyConf={insightlyConf}\n            setInsightlyConf={setInsightlyConf}\n            formFields={formFields}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":["InsightlyActions","insightlyConf","setInsightlyConf","loading","setLoading","actionMdl","setActionMdl","useState","followUps","opportunityTypes","actionHandler","e","type","newConf","__spreadValues","_a","getAllOrganisations","_b","getAllCategories","_c","getAllStatuses","_d","_e","clsActionMdl","setChanges","val","name","jsxs","jsx","TableCheckBox","__","ConfirmModal","Loader","MultiSelect","organisation","category","status","followUp","opportunityType","addFieldMap","i","confTmp","setConf","delFieldMap","handleFieldMapping","event","index","conftTmp","handleCustomField","fieldValue","CustomField","field","conf","fieldLabel","className","MtInput","InsightlyFieldMap","formFields","allFields","requiredFields","fld","allNonRequiredFields","tmp","generateMappedField","btcbi","useRecoilValue","$btcbi","isPro","ev","f","SmartTagField","key","label","Fragment","InsightlyIntegLayout","handleInput","setSnackbar","handleActionInput","getAllCRMPipelines","getLeadStatuses","getLeadSources","getAllCRMPipelineStages","LeadStatus","LeadSource","CRMPipeline","CRMPipelineStage","itm"],"mappings":"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"}