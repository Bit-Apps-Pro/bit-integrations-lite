{"version":3,"file":"bi.399.696.js","sources":["../frontend-dev/src/components/AllIntegrations/ZohoBigin/ZohoBiginActions.jsx","../frontend-dev/src/components/AllIntegrations/ZohoBigin/ZohoBiginFieldMap.jsx","../frontend-dev/src/components/AllIntegrations/ZohoBigin/ZohoBiginNewRecord.jsx","../frontend-dev/src/components/AllIntegrations/ZohoBigin/ZohoBiginIntegLayout.jsx"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-param-reassign */\n\nimport { useState } from 'react'\nimport MultiSelect from 'react-multiple-select-dropdown-lite'\nimport { __ } from '../../../Utils/i18nwrap'\nimport ConfirmModal from '../../Utilities/ConfirmModal'\nimport TableCheckBox from '../../Utilities/TableCheckBox'\nimport Loader from '../../Loaders/Loader'\nimport { refreshTags, refreshUsers } from './ZohoBiginCommonFunc'\n\nexport default function ZohoBiginActions({ tab, formID, formFields, biginConf, setBiginConf, setSnackbar }) {\n  const [recOwnerMdl, setrecOwnerMdl] = useState(false)\n  const [notesMdl, setNotesMdl] = useState(false)\n  const [actionMdl, setActionMdl] = useState({ show: false })\n  const [isLoading, setIsLoading] = useState(false)\n  const actionHandler = (val, typ, checked) => {\n    const newConf = { ...biginConf }\n    if (tab === 0) {\n      if (checked !== undefined) {\n        if (checked) newConf.actions[typ] = val\n        else delete newConf.actions[typ]\n      } else if (val) newConf.actions[typ] = val\n      else delete newConf.actions[typ]\n    } else if (checked !== undefined) {\n      if (checked) newConf.relatedlists[tab - 1].actions[typ] = val\n      else delete newConf.relatedlists[tab - 1].actions[typ]\n    } else if (val) newConf.relatedlists[tab - 1].actions[typ] = val\n    else delete newConf.relatedlists[tab - 1].actions[typ]\n\n    setBiginConf({ ...newConf })\n  }\n\n  const module = tab === 0 ? biginConf.module : biginConf.relatedlists[tab - 1].module\n  const getTags = () => {\n    const arr = [\n      { title: 'Tags', type: 'group', childs: [] },\n      { title: 'Form Fields', type: 'group', childs: [] },\n    ]\n\n    if (biginConf?.default?.moduleData?.[module]?.tags) {\n      arr[0].childs = Object.values(biginConf.default.moduleData[module].tags).map(tag => ({ label: tag.tagName, value: tag.tagId }))\n    }\n\n    arr[1].childs = formFields.map(itm => ({ label: itm.name, value: `\\${${itm.key}}` }))\n    return arr\n  }\n\n  const clsActionMdl = () => {\n    setActionMdl({ show: false })\n  }\n\n  const handleNoteAction = (typ, val) => {\n    const newConf = { ...biginConf }\n    if (!newConf.actions.note) newConf.actions.note = {}\n\n    if (typ === 'field') {\n      if (!newConf.actions.note.content) newConf.actions.note.content = ''\n      newConf.actions.note.content += val\n    } else if (val) newConf.actions.note[typ] = val\n    else delete newConf.actions.note[typ]\n\n    setBiginConf({ ...newConf })\n  }\n\n  return (\n    <>\n      <div className=\"d-flx flx-wrp\">\n        {biginConf?.relatedlists?.[tab - 1]?.module !== 'Notes'\n          && (\n            <>\n              <TableCheckBox onChange={(e) => actionHandler(true, 'workflow', e.target.checked)} checked={tab === 0 ? 'workflow' in biginConf.actions : 'workflow' in biginConf.relatedlists?.[tab - 1]?.actions} className=\"wdt-200 mt-4 mr-2\" value=\"Workflow\" title={__('Workflow', 'bit-integrations')} subTitle={__('Trigger workflows in Zoho Bigin.', 'bit-integrations')} />\n              <TableCheckBox onChange={(e) => actionHandler(true, 'approval', e.target.checked)} checked={tab === 0 ? 'approval' in biginConf.actions : 'approval' in biginConf.relatedlists?.[tab - 1]?.actions} className=\"wdt-200 mt-4 mr-2\" value=\"Approval\" title={__('Approval', 'bit-integrations')} subTitle={__('Send entries to approval list in Zoho Bigin.', 'bit-integrations')} />\n              {(tab === 0 && !['Calls', 'Events', 'Tasks'].includes(biginConf.module)) && (\n                <TableCheckBox onChange={() => setNotesMdl(true)} checked={'note' in biginConf.actions && ('title' in biginConf.actions?.note || 'content' in biginConf.actions?.note)} className=\"wdt-200 mt-4 mr-2\" value=\"notes\" title={__('Add a Note', 'bit-integrations')} subTitle={__('Add a note from bitform to pushed to Zoho Bigin.', 'bit-integrations')} />\n              )}\n            </>\n          )}\n        {/* <TableCheckBox onChange={() => setrecOwnerMdl(true)} checked={tab === 0 ? 'owner' in biginConf.actions : 'owner' in biginConf.relatedlists?.[tab - 1]?.actions} className=\"wdt-200 mt-4 mr-2\" value=\"recordOwner\"title={__('Record Owner', 'bit-integrations')} subTitle={__('Set owner of current record', 'bit-integrations')} /> */}\n        {/* eslint-disable-next-line max-len */}\n        {['Contacts', 'Accounts', 'Products'].includes(module) && <TableCheckBox onChange={() => setActionMdl({ show: 'photo' })} checked={tab === 0 ? 'photo' in biginConf.actions : 'photo' in biginConf.relatedlists[tab - 1].actions} className=\"wdt-200 mt-4 mr-2\" value=\"Attachment\" title={__('Upload Photo', 'bit-integrations')} subTitle={`Add a photo to ${module} in Zoho Bigin.`} />}\n        <TableCheckBox onChange={() => setActionMdl({ show: 'attachments' })} checked={tab === 0 ? 'attachments' in biginConf.actions : 'attachments' in biginConf.relatedlists[tab - 1].actions} className=\"wdt-200 mt-4 mr-2\" value=\"Attachment\" title={__('Attachment', 'bit-integrations')} subTitle={__('Add attachments from BitForm to Zoho Bigin.', 'bit-integrations')} />\n        {/* <TableCheckBox onChange={() => setActionMdl({ show: 'tag_rec' })} checked={tab === 0 ? 'tag_rec' in biginConf.actions : 'tag_rec' in biginConf.relatedlists[tab - 1].actions} className=\"wdt-200 mt-4 mr-2\" value=\"Tag_Records\"title={__('Tag Records', 'bit-integrations')} subTitle={__('Add a tag to records pushed to Zoho Bigin.', 'bit-integrations')} /> */}\n      </div>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt=\"Ok\"\n        show={actionMdl.show === 'attachments'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Select Attachment', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2\" />\n        <div className=\"mt-2\">{__('Select file upload fields', 'bit-integrations')}</div>\n        <MultiSelect\n          defaultValue={tab === 0 ? biginConf.actions.attachments : biginConf.relatedlists[tab - 1].actions.attachments}\n          className=\"mt-2 w-9\"\n          onChange={(val) => actionHandler(val, 'attachments')}\n          options={formFields.filter(itm => (itm.type === 'file')).map(itm => ({ label: itm.label, value: itm.name }))}\n        />\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt=\"Ok\"\n        show={actionMdl.show === 'photo'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Upload Photo', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2\" />\n        <div className=\"mt-2\">{__('Select file upload fields', 'bit-integrations')}</div>\n        <MultiSelect\n          defaultValue={tab === 0 ? biginConf.actions.photo : biginConf.relatedlists[tab - 1].actions.photo}\n          className=\"mt-2 w-9\"\n          onChange={(val) => actionHandler(val, 'photo')}\n          options={formFields.filter(itm => (itm.type === 'file')).map(itm => ({ label: itm.label, value: itm.name }))}\n          singleSelect\n        />\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt=\"Ok\"\n        show={recOwnerMdl}\n        close={() => setrecOwnerMdl(false)}\n        action={() => setrecOwnerMdl(false)}\n        title={__('Record Owner', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        {isLoading\n          ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n          : (\n            <div className=\"flx flx-between mt-2\">\n              <MultiSelect\n                className=\"msl-wrp-options\"\n                defaultValue={tab === 0 ? biginConf.actions.owner : biginConf.relatedlists[tab - 1].actions.owner}\n                options={biginConf.default?.users && Object.values(biginConf.default.users).map(user => ({ label: user.userName, value: user.userId }))}\n                onChange={(val) => actionHandler(val, 'owner')}\n                customValue\n              />\n              <button onClick={() => refreshUsers(formID, biginConf, setBiginConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': '\"Refresh Users\"' }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n            </div>\n          )}\n      </ConfirmModal>\n\n      <ConfirmModal\n        className=\"custom-conf-mdl\"\n        mainMdlCls=\"o-v\"\n        btnClass=\"blue\"\n        btnTxt=\"Ok\"\n        show={actionMdl.show === 'tag_rec'}\n        close={clsActionMdl}\n        action={clsActionMdl}\n        title={__('Tags', 'bit-integrations')}\n      >\n        <div className=\"btcd-hr mt-2 mb-2\" />\n        <small>\n          {`Add a tag to ${module} pushed to Zoho Bigin`}\n        </small>\n        <div className=\"mt-2\">{__('Tag Name', 'bit-integrations')}</div>\n        {isLoading\n          ? (\n            <Loader style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: 45,\n              transform: 'scale(0.5)',\n            }}\n            />\n          )\n          : (\n            <div className=\"flx flx-between mt-2\">\n              <MultiSelect\n                className=\"msl-wrp-options\"\n                defaultValue={tab === 0 ? biginConf.actions.tag_rec : biginConf.relatedlists[tab - 1].actions.tag_rec}\n                options={getTags()}\n                onChange={(val) => actionHandler(val, 'tag_rec')}\n              />\n              <button onClick={() => refreshTags(tab, formID, biginConf, setBiginConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': '\"Refresh CRM Tags\"' }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n            </div>\n          )}\n      </ConfirmModal>\n\n      {tab === 0\n        && (\n          <ConfirmModal\n            className=\"custom-conf-mdl\"\n            mainMdlCls=\"o-v\"\n            btnClass=\"blue\"\n            btnTxt=\"Ok\"\n            show={notesMdl}\n            close={() => setNotesMdl(false)}\n            action={() => setNotesMdl(false)}\n            title={__('Notes', 'bit-integrations')}\n          >\n            <div className=\"btcd-hr mt-2 mb-2\" />\n            {isLoading\n              ? (\n                <Loader style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: 45,\n                  transform: 'scale(0.5)',\n                }}\n                />\n              )\n              : (\n                <>\n                  <div className=\"mt-2 mb-1\">{__('Note Title', 'bit-integrations')}</div>\n                  <input type=\"text\" className=\"btcd-paper-inp\" placeholder={__('Note Title', 'bit-integrations')} onChange={e => handleNoteAction('title', e.target.value)} value={tab === 0 ? (biginConf.actions?.note?.title || '') : (biginConf.relatedlists[tab - 1].actions?.note?.title || '')} />\n                  <div className=\"mt-2 mb-1\">{__('Note Content', 'bit-integrations')}</div>\n                  <select className=\"btcd-paper-inp w-5\" onChange={e => handleNoteAction('field', e.target.value)}>\n                    <option value=\"\">{__('Field', 'bit-integrations')}</option>\n                    {formFields.map(f => f.type !== 'file' && <option key={`ff-zhcrm-${f.name}`} value={`\\${${f.name}}`}>{f.label}</option>)}\n                  </select>\n                  <textarea rows=\"5\" className=\"btcd-paper-inp mt-2\" onChange={e => handleNoteAction('content', e.target.value)} value={tab === 0 ? (biginConf.actions?.note?.content || '') : (biginConf.relatedlists[tab - 1].actions?.note?.content || '')} />\n                </>\n              )}\n          </ConfirmModal>\n        )}\n    </>\n  )\n}\n","import { useRecoilValue } from 'recoil'\nimport { $btcbi } from '../../../GlobalStates'\nimport TrashIcn from '../../../Icons/TrashIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport { SmartTagField } from '../../../Utils/StaticData/SmartTagField'\nimport MtInput from '../../Utilities/MtInput'\nimport TagifyInput from '../../Utilities/TagifyInput'\nimport { addFieldMap, delFieldMap, handleCustomValue, handleFieldMapping } from '../IntegrationHelpers/IntegrationHelpers'\n\nexport default function ZohoBiginFieldMap({ i, uploadFields, formFields, field, biginConf, setBiginConf, tab }) {\n  const module = tab === 0 ? biginConf.module : biginConf.relatedlists?.[tab - 1]?.module\n\n  const isNotRequired = field.zohoFormField === '' || biginConf.default.moduleData?.[module]?.required?.indexOf(field.zohoFormField) === -1\n\n  const btcbi = useRecoilValue($btcbi)\n  const { isPro } = btcbi\n\n  return (\n    <div\n      className=\"flx mt-2 mb-2 btcbi-field-map\"\n    >\n      <div className=\"flx integ-fld-wrp\">\n        <select className=\"btcd-paper-inp mr-2\" name=\"formField\" value={field.formField || ''} onChange={(ev) => handleFieldMapping(ev, i, biginConf, setBiginConf, uploadFields, tab)}>\n          <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n          <optgroup label=\"Form Fields\">\n            {\n              uploadFields ? formFields.map(f => f.type === 'file' && <option key={`ff-zhcrm-${f.name}`} value={f.name}>{f.label}</option>) : formFields.map(f => f.type !== 'file' && <option key={`ff-zhcrm-${f.name}`} value={f.name}>{f.label}</option>)\n            }\n          </optgroup>\n          {!uploadFields && <option value=\"custom\">{__('Custom...', 'bit-integrations')}</option>}\n          <optgroup label={`General Smart Codes ${isPro ? '' : '(PRO)'}`}>\n            {isPro && SmartTagField?.map(f => (\n              <option key={`ff-rm-${f.name}`} value={f.name}>\n                {f.label}\n              </option>\n            ))}\n          </optgroup>\n\n        </select>\n\n        {field.formField === 'custom' && <TagifyInput onChange={e => handleCustomValue(e, i, biginConf, setBiginConf)} label={__('Custom Value', 'bit-integrations')} className=\"mr-2\" type=\"text\" value={field.customValue} placeholder={__('Custom Value', 'bit-integrations')} formFields={formFields} />}\n\n        <select className=\"btcd-paper-inp\" disabled={!isNotRequired} name=\"zohoFormField\" value={field.zohoFormField || ''} onChange={(ev) => handleFieldMapping(ev, i, biginConf, setBiginConf, uploadFields, tab)}>\n          <option value=\"\">{__('Select Field', 'bit-integrations')}</option>\n          {\n            biginConf.default.moduleData?.[module]?.fields && Object.values(biginConf.default.moduleData[module].fields).map(fieldApiName => (\n              isNotRequired\n                ? (!fieldApiName.required && (\n                  <option key={fieldApiName.api_name} value={fieldApiName.api_name}>\n                    {fieldApiName.display_label}\n                  </option>\n                ))\n                : (\n                  <option key={fieldApiName.api_name} value={fieldApiName.api_name}>\n                    {fieldApiName.display_label}\n                  </option>\n                )\n            ))\n          }\n        </select>\n      </div>\n\n      {\n        isNotRequired && (\n          <>\n            <button\n              onClick={() => addFieldMap(i, biginConf, setBiginConf, uploadFields, tab)}\n              className=\"icn-btn sh-sm ml-2 mr-1\"\n              type=\"button\"\n            >\n              +\n            </button>\n            <button onClick={() => delFieldMap(i, biginConf, setBiginConf, uploadFields, tab)} className=\"icn-btn sh-sm ml-1\" type=\"button\" aria-label=\"btn\">\n              <TrashIcn />\n            </button>\n          </>\n        )\n      }\n    </div>\n  )\n}\n","import { useEffect } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { $actionConf, $formFields } from '../../../GlobalStates'\n\nimport { __ } from '../../../Utils/i18nwrap'\nimport Loader from '../../Loaders/Loader'\nimport { addFieldMap } from '../IntegrationHelpers/IntegrationHelpers'\nimport ZohoBiginActions from './ZohoBiginActions'\nimport { getFields, handleTabChange } from './ZohoBiginCommonFunc'\nimport ZohoBiginFieldMap from './ZohoBiginFieldMap'\n\nexport default function ZohoBiginNewRecord({ tab, settab, formID, isLoading, setIsLoading, setSnackbar }) {\n  const [biginConf, setBiginConf] = useRecoilState($actionConf)\n  const formFields = useRecoilValue($formFields)\n  useEffect(() => {\n    handleTabChange(0, settab)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      {isLoading && (\n        <Loader style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 100,\n          transform: 'scale(0.7)',\n        }}\n        />\n      )}\n      {biginConf.default?.moduleData?.[biginConf.module]?.fields\n        && (\n          <>\n            <div className=\"mt-4\">\n              <b className=\"wdt-100\">{__('Map Fields', 'bit-integrations')}</b>\n              <button onClick={() => getFields(tab, formID, biginConf, setBiginConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Bigin Fields', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>\n            </div>\n            <div className=\"btcd-hr mt-1\" />\n            <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n              <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n              <div className=\"txt-dp\"><b>{__('Zoho Fields', 'bit-integrations')}</b></div>\n            </div>\n\n            {biginConf.field_map.map((itm, i) => (\n              <ZohoBiginFieldMap\n                key={`bigin-m-${i + 9}`}\n                i={i}\n                field={itm}\n                biginConf={biginConf}\n                formFields={formFields}\n                setBiginConf={setBiginConf}\n                tab={tab}\n                setSnackbar={setSnackbar}\n              />\n            ))}\n            <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(biginConf.field_map.length, biginConf, setBiginConf, false, tab)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n            <br />\n            <br />\n            {Object.keys(biginConf.default?.moduleData?.[biginConf.module]?.fileUploadFields).length !== 0 && (\n              <>\n                <div className=\"mt-4\"><b className=\"wdt-100\">{__('Map Attachments', 'bit-integrations')}</b></div>\n                <div className=\"btcd-hr mt-1\" />\n                <div className=\"flx flx-around mt-2 mb-2 btcbi-field-map-label\">\n                  <div className=\"txt-dp\"><b>{__('Form Fields', 'bit-integrations')}</b></div>\n                  <div className=\"txt-dp\"><b>{__('Zoho Fields', 'bit-integrations')}</b></div>\n                </div>\n\n                {biginConf.upload_field_map.map((itm, i) => (\n                  <ZohoBiginFieldMap\n                    key={`crm-m-${i + 9}`}\n                    uploadFields={1}\n                    i={i}\n                    field={itm}\n                    biginConf={biginConf}\n                    formFields={formFields}\n                    setBiginConf={setBiginConf}\n                    tab={tab}\n                    setSnackbar={setSnackbar}\n                  />\n                ))}\n                <div className=\"txt-center btcbi-field-map-button mt-2\"><button onClick={() => addFieldMap(biginConf.upload_field_map.length, biginConf, setBiginConf, true, tab)} className=\"icn-btn sh-sm\" type=\"button\">+</button></div>\n                <br />\n                <br />\n              </>\n            )}\n            <div className=\"mt-4\"><b className=\"wdt-100\">{__('Actions', 'bit-integrations')}</b></div>\n            <div className=\"btcd-hr mt-1\" />\n\n            <ZohoBiginActions\n              tab={tab}\n              formID={formID}\n              formFields={formFields}\n              biginConf={biginConf}\n              setBiginConf={setBiginConf}\n              setSnackbar={setSnackbar}\n            />\n          </>\n        )}\n    </>\n  )\n}\n","import { Tab, TabList, TabPanel, Tabs } from 'react-tabs'\nimport { useRecoilState } from 'recoil';\nimport { $actionConf } from '../../../GlobalStates';\nimport { __ } from '../../../Utils/i18nwrap'\nimport { refreshModules, refreshPipelinesLayout } from './ZohoBiginCommonFunc'\nimport ZohoBiginNewRecord from './ZohoBiginNewRecord'\n\nexport default function ZohoBiginIntegLayout({ tab, settab, formID, handleInput, isLoading, setIsLoading, setSnackbar }) {\n  const [biginConf, setBiginConf] = useRecoilState($actionConf)\n\n  return (\n    <>\n      <br />\n      <b className=\"wdt-200 d-in-b\">{__('Module:', 'bit-integrations')}</b>\n      <select onChange={handleInput} name=\"module\" value={biginConf.module} className=\"btcd-paper-inp w-5\" disabled={tab === 1}>\n        <option value=\"\">{__('Select Module', 'bit-integrations')}</option>\n        {\n          biginConf.default && biginConf.default.modules && Object.values(biginConf.default.modules).map(module => (\n            <option key={module.api_name} value={module.api_name}>\n              {module.plural_label}\n            </option>\n          ))\n        }\n      </select>\n      {tab === 0 && <button onClick={() => refreshModules(formID, biginConf, setBiginConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Bigin Modules', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>}\n      {biginConf?.module === 'Deals' && !isLoading &&\n        <>\n          <br />\n          <br />\n          <b className=\"wdt-200 d-in-b\">{__('Select Layout:', 'bit-integrations')}</b>\n          <select onChange={handleInput} name=\"pLayout\" value={biginConf.pLayout} className=\"btcd-paper-inp w-5\" disabled={tab === 1}>\n            <option value=\"\">{__('Select Layout', 'bit-integrations')}</option>\n            {\n              biginConf.default && biginConf.default.pLayouts && Object.values(biginConf.default.pLayouts).map(layout => (\n                <option key={layout.name} value={layout.name}>\n                  {layout.display_label}\n                </option>\n              ))\n            }\n          </select>\n          {tab === 0 && <button onClick={() => refreshPipelinesLayout(formID, biginConf, setBiginConf, setIsLoading, setSnackbar)} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': `'${__('Refresh Pipelines Layouts', 'bit-integrations')}'` }} type=\"button\" disabled={isLoading}>&#x21BB;</button>}\n        </>}\n      <br />\n      <Tabs\n        selectedTabClassName=\"s-t-l-active\"\n      >\n        <TabList className=\"flx mt-2 mb-0\">\n          <Tab className=\"btcd-s-tab-link mb-0\">\n            {__('New Record', 'bit-integrations')}\n          </Tab>\n        </TabList>\n\n        {/* {biginConf?.relatedlists && biginConf.relatedlists.map((_, indx) => (\n            <>\n              <Tab key={`rel-${indx + 64}`}>\n                <button className={`btcd-s-tab-link ${tab === indx + 1 && 's-t-l-active'}`} type=\"button\">\n                  Related List #\n                  {indx + 1}\n                </button>\n              </Tab>\n              <button onClick={() => removeRelatedTab(indx)} className=\"icn-btn\" aria-label=\"delete-relatedlist\" type=\"button\"><CloseIcn size=\"14\" /></button>\n            </>\n          ))}\n          {biginConf.relatedlists.length < 3 && <button onClick={addNewRelatedTab} className=\"icn-btn sh-sm ml-2 mr-2 tooltip\" style={{ '--tooltip-txt': '\"Add More Related List\"' }} type=\"button\">+</button>} */}\n        <div className=\"btcd-hr\" />\n\n        <TabPanel>\n          <ZohoBiginNewRecord\n            tab={tab}\n            settab={settab}\n            formID={formID}\n            isLoading={isLoading}\n            setIsLoading={setIsLoading}\n            setSnackbar={setSnackbar}\n          />\n        </TabPanel>\n        {/* {\n          biginConf?.relatedlists && biginConf.relatedlists.map((_, indx) => (\n            <TabPanel key={`rlt-${indx + 89}`}>\n              <ZohoBiginRelatedRecord\n                indx={indx}\n                tab={tab}\n                settab={settab}\n                formID={formID}\n                formFields={formFields}\n                biginConf={biginConf}\n                setBiginConf={setBiginConf}\n                handleInput={handleInput}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                setSnackbar={setSnackbar}\n              />\n            </TabPanel>\n          ))\n        } */}\n      </Tabs>\n    </>\n  )\n}\n"],"names":["reactExports","jsxRuntimeExports","Loader","Recoil_index_18","Recoil_index_20","Tabs","TabList","Tab","TabPanel","TableCheckBox","__","ConfirmModal","u","$btcbi","$actionConf","$formFields","refreshUsers","refreshTags","handleTabChange","getFields","refreshModules","refreshPipelinesLayout","handleFieldMapping","handleCustomValue","addFieldMap","delFieldMap","TrashIcn","SmartTagField","TagifyInput","ZohoBiginActions","tab","formID","formFields","biginConf","setBiginConf","setSnackbar","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","recOwnerMdl","setrecOwnerMdl","useState","notesMdl","setNotesMdl","actionMdl","setActionMdl","isLoading","setIsLoading","actionHandler","val","typ","checked","newConf","__spreadValues","module","getTags","arr","tag","itm","clsActionMdl","handleNoteAction","jsxs","Fragment","jsx","e","MultiSelect","user","f","ZohoBiginFieldMap","i","uploadFields","field","isNotRequired","btcbi","useRecoilValue","isPro","ev","fieldApiName","ZohoBiginNewRecord","settab","useRecoilState","useEffect","ZohoBiginIntegLayout","handleInput","layout"],"mappings":"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"}