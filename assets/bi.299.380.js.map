{"version":3,"file":"bi.299.380.js","sources":["../frontend-dev/src/components/AllIntegrations/Trello/Trello.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport 'react-multiple-select-dropdown-lite/dist/index.css'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport BackIcn from '../../../Icons/BackIcn'\nimport { __ } from '../../../Utils/i18nwrap'\nimport SnackMsg from '../../Utilities/SnackMsg'\nimport Steps from '../../Utilities/Steps'\nimport { saveActionConf } from '../IntegrationHelpers/IntegrationHelpers'\nimport IntegrationStepThree from '../IntegrationHelpers/IntegrationStepThree'\nimport TrelloAuthorization from './TrelloAuthorization'\nimport { handleInput, setGrantTokenResponse, checkMappedFields } from './TrelloCommonFunc'\nimport TrelloIntegLayout from './TrelloIntegLayout'\n\nfunction Trello({ formFields, setFlow, flow, allIntegURL }) {\n  const navigate = useNavigate()\n  const { formID } = useParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [step, setstep] = useState(1)\n  const [snack, setSnackbar] = useState({ show: false })\n  const cardFields = [\n    { key: 'name', label: 'Name', required: true },\n    { key: 'desc', label: 'Description', required: false },\n    { key: 'due', label: 'Date', required: false },\n  ]\n  const [trelloConf, setTrelloConf] = useState({\n    name: 'Trello',\n    type: 'Trello',\n    clientId: process.env.NODE_ENV === 'development' ? '' : '',\n    listId: '',\n    listName: '',\n    tags: '',\n    pos: '',\n    field_map: [\n      { formField: '', trelloFormField: '' },\n    ],\n    cardFields,\n    address_field: [],\n    actions: {},\n  })\n\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-expressions\n    window.opener && setGrantTokenResponse('trello')\n  }, [])\n  const nextPage = () => {\n    setTimeout(() => {\n      document.getElementById('btcd-settings-wrp').scrollTop = 0\n    }, 300)\n\n    if (!checkMappedFields(trelloConf)) {\n      setSnackbar({ show: true, msg: 'Please map fields to continue.' })\n      return\n    }\n    if (trelloConf.listId !== '') {\n      setstep(3)\n    }\n  }\n\n  return (\n    <div>\n      <SnackMsg snack={snack} setSnackbar={setSnackbar} />\n      <div className=\"txt-center mt-2\"><Steps step={3} active={step} /></div>\n\n      {/* STEP 1 */}\n      <TrelloAuthorization\n        formID={formID}\n        trelloConf={trelloConf}\n        setTrelloConf={setTrelloConf}\n        step={step}\n        setstep={setstep}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        setSnackbar={setSnackbar}\n      />\n\n      {/* STEP 2 */}\n      <div className=\"btcd-stp-page\" style={{ ...(step === 2 && { width: 900, height: 'auto', overflow: 'visible' }) }}>\n\n        <TrelloIntegLayout\n          formFields={formFields}\n          handleInput={(e) => handleInput(e, trelloConf, setTrelloConf, setIsLoading, setSnackbar)}\n          trelloConf={trelloConf}\n          setTrelloConf={setTrelloConf}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setSnackbar={setSnackbar}\n        />\n\n        <button\n          onClick={() => nextPage(3)}\n          disabled={!trelloConf?.listId || !checkMappedFields(trelloConf)}\n          className=\"btn f-right btcd-btn-lg green sh-sm flx\"\n          type=\"button\"\n        >\n          {__('Next', 'bit-integrations')}\n          {' '}\n          &nbsp;\n          <div className=\"btcd-icn icn-arrow_back rev-icn d-in-b\" />\n        </button>\n      </div>\n      {/* STEP 3 */}\n      <IntegrationStepThree\n        step={step}\n        saveConfig={() => saveActionConf({ flow, setFlow, allIntegURL, navigate, conf: trelloConf, setIsLoading, setSnackbar })}\n        isLoading={isLoading}\n        dataConf={trelloConf}\n        setDataConf={setTrelloConf}\n        formFields={formFields}\n      />\n\n    </div>\n  )\n}\n\nexport default Trello\n"],"names":["Trello","formFields","setFlow","flow","allIntegURL","navigate","useNavigate","formID","useParams","isLoading","setIsLoading","useState","step","setstep","snack","setSnackbar","cardFields","trelloConf","setTrelloConf","useEffect","setGrantTokenResponse","nextPage","checkMappedFields","jsx","SnackMsg","Steps","TrelloAuthorization","__spreadValues","TrelloIntegLayout","e","handleInput","jsxs","__","IntegrationStepThree","saveActionConf"],"mappings":"6zBAaA,SAASA,EAAO,CAAE,WAAAC,EAAY,QAAAC,EAAS,KAAAC,EAAM,YAAAC,GAAe,CAC1D,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACb,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAAC,EAC5B,CAACG,EAAOC,CAAW,EAAIJ,WAAS,CAAE,KAAM,GAAO,EAC/CK,EAAa,CACjB,CAAE,IAAK,OAAQ,MAAO,OAAQ,SAAU,EAAK,EAC7C,CAAE,IAAK,OAAQ,MAAO,cAAe,SAAU,EAAM,EACrD,CAAE,IAAK,MAAO,MAAO,OAAQ,SAAU,EAAM,CAAA,EAEzC,CAACC,EAAYC,CAAa,EAAIP,WAAS,CAC3C,KAAM,SACN,KAAM,SACN,SAAwD,GACxD,OAAQ,GACR,SAAU,GACV,KAAM,GACN,IAAK,GACL,UAAW,CACT,CAAE,UAAW,GAAI,gBAAiB,EAAG,CACvC,EACA,WAAAK,EACA,cAAe,CAAC,EAChB,QAAS,CAAC,CAAA,CACX,EAEDG,EAAAA,UAAU,IAAM,CAEP,OAAA,QAAUC,EAAsB,QAAQ,CACjD,EAAG,CAAE,CAAA,EACL,MAAMC,EAAW,IAAM,CAKjB,GAJJ,WAAW,IAAM,CACN,SAAA,eAAe,mBAAmB,EAAE,UAAY,GACxD,GAAG,EAEF,CAACC,EAAkBL,CAAU,EAAG,CAClCF,EAAY,CAAE,KAAM,GAAM,IAAK,gCAAkC,CAAA,EACjE,MACF,CACIE,EAAW,SAAW,IACxBJ,EAAQ,CAAC,CACX,EAGF,cACG,MACC,CAAA,SAAA,CAACU,EAAAA,IAAAC,EAAA,CAAS,MAAAV,EAAc,YAAAC,CAA0B,CAAA,EAClDQ,EAAAA,IAAC,MAAI,CAAA,UAAU,kBAAkB,SAAAA,EAAA,IAACE,GAAM,KAAM,EAAG,OAAQb,CAAA,CAAM,CAAE,CAAA,EAGjEW,EAAA,IAACG,EAAA,CACC,OAAAnB,EACA,WAAAU,EACA,cAAAC,EACA,KAAAN,EACA,QAAAC,EACA,UAAAJ,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,SAGC,MAAI,CAAA,UAAU,gBAAgB,MAAOY,EAAA,GAAMf,IAAS,GAAK,CAAE,MAAO,IAAK,OAAQ,OAAQ,SAAU,SAAA,GAEhG,SAAA,CAAAW,EAAA,IAACK,EAAA,CACC,WAAA3B,EACA,YAAc4B,GAAMC,EAAYD,EAAGZ,EAAYC,CAAwC,EACvF,WAAAD,EACA,cAAAC,EACA,UAAAT,EACA,aAAAC,EACA,YAAAK,CAAA,CACF,EAEAgB,EAAA,KAAC,SAAA,CACC,QAAS,IAAMV,EAAU,EACzB,SAAU,EAACJ,GAAA,MAAAA,EAAY,SAAU,CAACK,EAAkBL,CAAU,EAC9D,UAAU,0CACV,KAAK,SAEJ,SAAA,CAAAe,EAAG,OAAQ,kBAAkB,EAC7B,IAAI,IAELT,EAAAA,IAAC,MAAI,CAAA,UAAU,wCAAyC,CAAA,CAAA,CAAA,CAC1D,CAAA,EACF,EAEAA,EAAA,IAACU,EAAA,CACC,KAAArB,EACA,WAAY,IAAMsB,EAAe,CAAE,KAAA/B,EAAM,QAAAD,EAAS,YAAAE,EAAa,SAAAC,EAAU,KAAMY,EAAY,aAAAP,EAAc,YAAAK,CAAA,CAAa,EACtH,UAAAN,EACA,SAAUQ,EACV,YAAaC,EACb,WAAAjB,CAAA,CACF,CAEF,CAAA,CAAA,CAEJ"}